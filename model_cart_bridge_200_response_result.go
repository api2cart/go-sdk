/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartBridge200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartBridge200ResponseResult{}

// CartBridge200ResponseResult struct for CartBridge200ResponseResult
type CartBridge200ResponseResult struct {
	StoreKey *string `json:"store_key,omitempty"`
	Bridge *string `json:"bridge,omitempty"`
}

// NewCartBridge200ResponseResult instantiates a new CartBridge200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartBridge200ResponseResult() *CartBridge200ResponseResult {
	this := CartBridge200ResponseResult{}
	return &this
}

// NewCartBridge200ResponseResultWithDefaults instantiates a new CartBridge200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartBridge200ResponseResultWithDefaults() *CartBridge200ResponseResult {
	this := CartBridge200ResponseResult{}
	return &this
}

// GetStoreKey returns the StoreKey field value if set, zero value otherwise.
func (o *CartBridge200ResponseResult) GetStoreKey() string {
	if o == nil || IsNil(o.StoreKey) {
		var ret string
		return ret
	}
	return *o.StoreKey
}

// GetStoreKeyOk returns a tuple with the StoreKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartBridge200ResponseResult) GetStoreKeyOk() (*string, bool) {
	if o == nil || IsNil(o.StoreKey) {
		return nil, false
	}
	return o.StoreKey, true
}

// HasStoreKey returns a boolean if a field has been set.
func (o *CartBridge200ResponseResult) HasStoreKey() bool {
	if o != nil && !IsNil(o.StoreKey) {
		return true
	}

	return false
}

// SetStoreKey gets a reference to the given string and assigns it to the StoreKey field.
func (o *CartBridge200ResponseResult) SetStoreKey(v string) {
	o.StoreKey = &v
}

// GetBridge returns the Bridge field value if set, zero value otherwise.
func (o *CartBridge200ResponseResult) GetBridge() string {
	if o == nil || IsNil(o.Bridge) {
		var ret string
		return ret
	}
	return *o.Bridge
}

// GetBridgeOk returns a tuple with the Bridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartBridge200ResponseResult) GetBridgeOk() (*string, bool) {
	if o == nil || IsNil(o.Bridge) {
		return nil, false
	}
	return o.Bridge, true
}

// HasBridge returns a boolean if a field has been set.
func (o *CartBridge200ResponseResult) HasBridge() bool {
	if o != nil && !IsNil(o.Bridge) {
		return true
	}

	return false
}

// SetBridge gets a reference to the given string and assigns it to the Bridge field.
func (o *CartBridge200ResponseResult) SetBridge(v string) {
	o.Bridge = &v
}

func (o CartBridge200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartBridge200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreKey) {
		toSerialize["store_key"] = o.StoreKey
	}
	if !IsNil(o.Bridge) {
		toSerialize["bridge"] = o.Bridge
	}
	return toSerialize, nil
}

type NullableCartBridge200ResponseResult struct {
	value *CartBridge200ResponseResult
	isSet bool
}

func (v NullableCartBridge200ResponseResult) Get() *CartBridge200ResponseResult {
	return v.value
}

func (v *NullableCartBridge200ResponseResult) Set(val *CartBridge200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCartBridge200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCartBridge200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartBridge200ResponseResult(val *CartBridge200ResponseResult) *NullableCartBridge200ResponseResult {
	return &NullableCartBridge200ResponseResult{value: val, isSet: true}
}

func (v NullableCartBridge200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartBridge200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


