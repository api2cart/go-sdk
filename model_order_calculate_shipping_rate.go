/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderCalculateShippingRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCalculateShippingRate{}

// OrderCalculateShippingRate struct for OrderCalculateShippingRate
type OrderCalculateShippingRate struct {
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
	Price *float32 `json:"price,omitempty"`
	PriceIncTax *float32 `json:"price_inc_tax,omitempty"`
	Tax *float32 `json:"tax,omitempty"`
	TaxRate *float32 `json:"tax_rate,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewOrderCalculateShippingRate instantiates a new OrderCalculateShippingRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCalculateShippingRate() *OrderCalculateShippingRate {
	this := OrderCalculateShippingRate{}
	return &this
}

// NewOrderCalculateShippingRateWithDefaults instantiates a new OrderCalculateShippingRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCalculateShippingRateWithDefaults() *OrderCalculateShippingRate {
	this := OrderCalculateShippingRate{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OrderCalculateShippingRate) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateShippingRate) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OrderCalculateShippingRate) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrderCalculateShippingRate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateShippingRate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrderCalculateShippingRate) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OrderCalculateShippingRate) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateShippingRate) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *OrderCalculateShippingRate) SetPrice(v float32) {
	o.Price = &v
}

// GetPriceIncTax returns the PriceIncTax field value if set, zero value otherwise.
func (o *OrderCalculateShippingRate) GetPriceIncTax() float32 {
	if o == nil || IsNil(o.PriceIncTax) {
		var ret float32
		return ret
	}
	return *o.PriceIncTax
}

// GetPriceIncTaxOk returns a tuple with the PriceIncTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateShippingRate) GetPriceIncTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.PriceIncTax) {
		return nil, false
	}
	return o.PriceIncTax, true
}

// HasPriceIncTax returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasPriceIncTax() bool {
	if o != nil && !IsNil(o.PriceIncTax) {
		return true
	}

	return false
}

// SetPriceIncTax gets a reference to the given float32 and assigns it to the PriceIncTax field.
func (o *OrderCalculateShippingRate) SetPriceIncTax(v float32) {
	o.PriceIncTax = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *OrderCalculateShippingRate) GetTax() float32 {
	if o == nil || IsNil(o.Tax) {
		var ret float32
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateShippingRate) GetTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float32 and assigns it to the Tax field.
func (o *OrderCalculateShippingRate) SetTax(v float32) {
	o.Tax = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *OrderCalculateShippingRate) GetTaxRate() float32 {
	if o == nil || IsNil(o.TaxRate) {
		var ret float32
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateShippingRate) GetTaxRateOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasTaxRate() bool {
	if o != nil && !IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given float32 and assigns it to the TaxRate field.
func (o *OrderCalculateShippingRate) SetTaxRate(v float32) {
	o.TaxRate = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderCalculateShippingRate) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderCalculateShippingRate) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *OrderCalculateShippingRate) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderCalculateShippingRate) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderCalculateShippingRate) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *OrderCalculateShippingRate) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *OrderCalculateShippingRate) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o OrderCalculateShippingRate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCalculateShippingRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceIncTax) {
		toSerialize["price_inc_tax"] = o.PriceIncTax
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.TaxRate) {
		toSerialize["tax_rate"] = o.TaxRate
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableOrderCalculateShippingRate struct {
	value *OrderCalculateShippingRate
	isSet bool
}

func (v NullableOrderCalculateShippingRate) Get() *OrderCalculateShippingRate {
	return v.value
}

func (v *NullableOrderCalculateShippingRate) Set(val *OrderCalculateShippingRate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCalculateShippingRate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCalculateShippingRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCalculateShippingRate(val *OrderCalculateShippingRate) *NullableOrderCalculateShippingRate {
	return &NullableOrderCalculateShippingRate{value: val, isSet: true}
}

func (v NullableOrderCalculateShippingRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCalculateShippingRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


