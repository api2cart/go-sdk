/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BatchJobResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchJobResult{}

// BatchJobResult struct for BatchJobResult
type BatchJobResult struct {
	JobId *int32 `json:"job_id,omitempty"`
	JobName *string `json:"job_name,omitempty"`
	ItemsProcessed *int32 `json:"items_processed,omitempty"`
	ItemsSucceed *int32 `json:"items_succeed,omitempty"`
	Items []BatchJobResultItem `json:"items,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewBatchJobResult instantiates a new BatchJobResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchJobResult() *BatchJobResult {
	this := BatchJobResult{}
	return &this
}

// NewBatchJobResultWithDefaults instantiates a new BatchJobResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchJobResultWithDefaults() *BatchJobResult {
	this := BatchJobResult{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *BatchJobResult) GetJobId() int32 {
	if o == nil || IsNil(o.JobId) {
		var ret int32
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJobResult) GetJobIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *BatchJobResult) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int32 and assigns it to the JobId field.
func (o *BatchJobResult) SetJobId(v int32) {
	o.JobId = &v
}

// GetJobName returns the JobName field value if set, zero value otherwise.
func (o *BatchJobResult) GetJobName() string {
	if o == nil || IsNil(o.JobName) {
		var ret string
		return ret
	}
	return *o.JobName
}

// GetJobNameOk returns a tuple with the JobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJobResult) GetJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.JobName) {
		return nil, false
	}
	return o.JobName, true
}

// HasJobName returns a boolean if a field has been set.
func (o *BatchJobResult) HasJobName() bool {
	if o != nil && !IsNil(o.JobName) {
		return true
	}

	return false
}

// SetJobName gets a reference to the given string and assigns it to the JobName field.
func (o *BatchJobResult) SetJobName(v string) {
	o.JobName = &v
}

// GetItemsProcessed returns the ItemsProcessed field value if set, zero value otherwise.
func (o *BatchJobResult) GetItemsProcessed() int32 {
	if o == nil || IsNil(o.ItemsProcessed) {
		var ret int32
		return ret
	}
	return *o.ItemsProcessed
}

// GetItemsProcessedOk returns a tuple with the ItemsProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJobResult) GetItemsProcessedOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemsProcessed) {
		return nil, false
	}
	return o.ItemsProcessed, true
}

// HasItemsProcessed returns a boolean if a field has been set.
func (o *BatchJobResult) HasItemsProcessed() bool {
	if o != nil && !IsNil(o.ItemsProcessed) {
		return true
	}

	return false
}

// SetItemsProcessed gets a reference to the given int32 and assigns it to the ItemsProcessed field.
func (o *BatchJobResult) SetItemsProcessed(v int32) {
	o.ItemsProcessed = &v
}

// GetItemsSucceed returns the ItemsSucceed field value if set, zero value otherwise.
func (o *BatchJobResult) GetItemsSucceed() int32 {
	if o == nil || IsNil(o.ItemsSucceed) {
		var ret int32
		return ret
	}
	return *o.ItemsSucceed
}

// GetItemsSucceedOk returns a tuple with the ItemsSucceed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJobResult) GetItemsSucceedOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemsSucceed) {
		return nil, false
	}
	return o.ItemsSucceed, true
}

// HasItemsSucceed returns a boolean if a field has been set.
func (o *BatchJobResult) HasItemsSucceed() bool {
	if o != nil && !IsNil(o.ItemsSucceed) {
		return true
	}

	return false
}

// SetItemsSucceed gets a reference to the given int32 and assigns it to the ItemsSucceed field.
func (o *BatchJobResult) SetItemsSucceed(v int32) {
	o.ItemsSucceed = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BatchJobResult) GetItems() []BatchJobResultItem {
	if o == nil || IsNil(o.Items) {
		var ret []BatchJobResultItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJobResult) GetItemsOk() ([]BatchJobResultItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BatchJobResult) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BatchJobResultItem and assigns it to the Items field.
func (o *BatchJobResult) SetItems(v []BatchJobResultItem) {
	o.Items = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobResult) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *BatchJobResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *BatchJobResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobResult) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *BatchJobResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *BatchJobResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o BatchJobResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchJobResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.JobName) {
		toSerialize["job_name"] = o.JobName
	}
	if !IsNil(o.ItemsProcessed) {
		toSerialize["items_processed"] = o.ItemsProcessed
	}
	if !IsNil(o.ItemsSucceed) {
		toSerialize["items_succeed"] = o.ItemsSucceed
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableBatchJobResult struct {
	value *BatchJobResult
	isSet bool
}

func (v NullableBatchJobResult) Get() *BatchJobResult {
	return v.value
}

func (v *NullableBatchJobResult) Set(val *BatchJobResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchJobResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchJobResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchJobResult(val *BatchJobResult) *NullableBatchJobResult {
	return &NullableBatchJobResult{value: val, isSet: true}
}

func (v NullableBatchJobResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchJobResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


