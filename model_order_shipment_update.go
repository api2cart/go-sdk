/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderShipmentUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderShipmentUpdate{}

// OrderShipmentUpdate struct for OrderShipmentUpdate
type OrderShipmentUpdate struct {
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Shipment id indicates the number of delivery
	ShipmentId string `json:"shipment_id"`
	// Defines the order that will be updated
	OrderId *string `json:"order_id,omitempty"`
	// Defines shipment's tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = \"https://api2cart.com/docs/#/cart/CartInfo\">cart.info</a > method
	TrackingNumbers []OrderShipmentAddTrackingNumbersInner `json:"tracking_numbers,omitempty"`
	// Allows rewrite tracking numbers
	Replace *bool `json:"replace,omitempty"`
	// Defines shipment's status
	IsShipped *bool `json:"is_shipped,omitempty"`
	// Defines custom tracking link
	TrackingLink *string `json:"tracking_link,omitempty"`
	// Defines the date of delivery
	DeliveredAt *string `json:"delivered_at,omitempty"`
	// Defines company name that provide tracking of shipment
	ShipmentProvider *string `json:"shipment_provider,omitempty"`
}

type _OrderShipmentUpdate OrderShipmentUpdate

// NewOrderShipmentUpdate instantiates a new OrderShipmentUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderShipmentUpdate(shipmentId string) *OrderShipmentUpdate {
	this := OrderShipmentUpdate{}
	this.ShipmentId = shipmentId
	var replace bool = true
	this.Replace = &replace
	var isShipped bool = true
	this.IsShipped = &isShipped
	return &this
}

// NewOrderShipmentUpdateWithDefaults instantiates a new OrderShipmentUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderShipmentUpdateWithDefaults() *OrderShipmentUpdate {
	this := OrderShipmentUpdate{}
	var replace bool = true
	this.Replace = &replace
	var isShipped bool = true
	this.IsShipped = &isShipped
	return &this
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *OrderShipmentUpdate) SetStoreId(v string) {
	o.StoreId = &v
}

// GetShipmentId returns the ShipmentId field value
func (o *OrderShipmentUpdate) GetShipmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetShipmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipmentId, true
}

// SetShipmentId sets field value
func (o *OrderShipmentUpdate) SetShipmentId(v string) {
	o.ShipmentId = v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderShipmentUpdate) SetOrderId(v string) {
	o.OrderId = &v
}

// GetTrackingNumbers returns the TrackingNumbers field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetTrackingNumbers() []OrderShipmentAddTrackingNumbersInner {
	if o == nil || IsNil(o.TrackingNumbers) {
		var ret []OrderShipmentAddTrackingNumbersInner
		return ret
	}
	return o.TrackingNumbers
}

// GetTrackingNumbersOk returns a tuple with the TrackingNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetTrackingNumbersOk() ([]OrderShipmentAddTrackingNumbersInner, bool) {
	if o == nil || IsNil(o.TrackingNumbers) {
		return nil, false
	}
	return o.TrackingNumbers, true
}

// HasTrackingNumbers returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasTrackingNumbers() bool {
	if o != nil && !IsNil(o.TrackingNumbers) {
		return true
	}

	return false
}

// SetTrackingNumbers gets a reference to the given []OrderShipmentAddTrackingNumbersInner and assigns it to the TrackingNumbers field.
func (o *OrderShipmentUpdate) SetTrackingNumbers(v []OrderShipmentAddTrackingNumbersInner) {
	o.TrackingNumbers = v
}

// GetReplace returns the Replace field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetReplace() bool {
	if o == nil || IsNil(o.Replace) {
		var ret bool
		return ret
	}
	return *o.Replace
}

// GetReplaceOk returns a tuple with the Replace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetReplaceOk() (*bool, bool) {
	if o == nil || IsNil(o.Replace) {
		return nil, false
	}
	return o.Replace, true
}

// HasReplace returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasReplace() bool {
	if o != nil && !IsNil(o.Replace) {
		return true
	}

	return false
}

// SetReplace gets a reference to the given bool and assigns it to the Replace field.
func (o *OrderShipmentUpdate) SetReplace(v bool) {
	o.Replace = &v
}

// GetIsShipped returns the IsShipped field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetIsShipped() bool {
	if o == nil || IsNil(o.IsShipped) {
		var ret bool
		return ret
	}
	return *o.IsShipped
}

// GetIsShippedOk returns a tuple with the IsShipped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetIsShippedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShipped) {
		return nil, false
	}
	return o.IsShipped, true
}

// HasIsShipped returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasIsShipped() bool {
	if o != nil && !IsNil(o.IsShipped) {
		return true
	}

	return false
}

// SetIsShipped gets a reference to the given bool and assigns it to the IsShipped field.
func (o *OrderShipmentUpdate) SetIsShipped(v bool) {
	o.IsShipped = &v
}

// GetTrackingLink returns the TrackingLink field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetTrackingLink() string {
	if o == nil || IsNil(o.TrackingLink) {
		var ret string
		return ret
	}
	return *o.TrackingLink
}

// GetTrackingLinkOk returns a tuple with the TrackingLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetTrackingLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingLink) {
		return nil, false
	}
	return o.TrackingLink, true
}

// HasTrackingLink returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasTrackingLink() bool {
	if o != nil && !IsNil(o.TrackingLink) {
		return true
	}

	return false
}

// SetTrackingLink gets a reference to the given string and assigns it to the TrackingLink field.
func (o *OrderShipmentUpdate) SetTrackingLink(v string) {
	o.TrackingLink = &v
}

// GetDeliveredAt returns the DeliveredAt field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetDeliveredAt() string {
	if o == nil || IsNil(o.DeliveredAt) {
		var ret string
		return ret
	}
	return *o.DeliveredAt
}

// GetDeliveredAtOk returns a tuple with the DeliveredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetDeliveredAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveredAt) {
		return nil, false
	}
	return o.DeliveredAt, true
}

// HasDeliveredAt returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasDeliveredAt() bool {
	if o != nil && !IsNil(o.DeliveredAt) {
		return true
	}

	return false
}

// SetDeliveredAt gets a reference to the given string and assigns it to the DeliveredAt field.
func (o *OrderShipmentUpdate) SetDeliveredAt(v string) {
	o.DeliveredAt = &v
}

// GetShipmentProvider returns the ShipmentProvider field value if set, zero value otherwise.
func (o *OrderShipmentUpdate) GetShipmentProvider() string {
	if o == nil || IsNil(o.ShipmentProvider) {
		var ret string
		return ret
	}
	return *o.ShipmentProvider
}

// GetShipmentProviderOk returns a tuple with the ShipmentProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderShipmentUpdate) GetShipmentProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentProvider) {
		return nil, false
	}
	return o.ShipmentProvider, true
}

// HasShipmentProvider returns a boolean if a field has been set.
func (o *OrderShipmentUpdate) HasShipmentProvider() bool {
	if o != nil && !IsNil(o.ShipmentProvider) {
		return true
	}

	return false
}

// SetShipmentProvider gets a reference to the given string and assigns it to the ShipmentProvider field.
func (o *OrderShipmentUpdate) SetShipmentProvider(v string) {
	o.ShipmentProvider = &v
}

func (o OrderShipmentUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderShipmentUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	toSerialize["shipment_id"] = o.ShipmentId
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.TrackingNumbers) {
		toSerialize["tracking_numbers"] = o.TrackingNumbers
	}
	if !IsNil(o.Replace) {
		toSerialize["replace"] = o.Replace
	}
	if !IsNil(o.IsShipped) {
		toSerialize["is_shipped"] = o.IsShipped
	}
	if !IsNil(o.TrackingLink) {
		toSerialize["tracking_link"] = o.TrackingLink
	}
	if !IsNil(o.DeliveredAt) {
		toSerialize["delivered_at"] = o.DeliveredAt
	}
	if !IsNil(o.ShipmentProvider) {
		toSerialize["shipment_provider"] = o.ShipmentProvider
	}
	return toSerialize, nil
}

func (o *OrderShipmentUpdate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shipment_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderShipmentUpdate := _OrderShipmentUpdate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderShipmentUpdate)

	if err != nil {
		return err
	}

	*o = OrderShipmentUpdate(varOrderShipmentUpdate)

	return err
}

type NullableOrderShipmentUpdate struct {
	value *OrderShipmentUpdate
	isSet bool
}

func (v NullableOrderShipmentUpdate) Get() *OrderShipmentUpdate {
	return v.value
}

func (v *NullableOrderShipmentUpdate) Set(val *OrderShipmentUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderShipmentUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderShipmentUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderShipmentUpdate(val *OrderShipmentUpdate) *NullableOrderShipmentUpdate {
	return &NullableOrderShipmentUpdate{value: val, isSet: true}
}

func (v NullableOrderShipmentUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderShipmentUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


