/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartMethods200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartMethods200ResponseResult{}

// CartMethods200ResponseResult struct for CartMethods200ResponseResult
type CartMethods200ResponseResult struct {
	Method []string `json:"method,omitempty"`
}

// NewCartMethods200ResponseResult instantiates a new CartMethods200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartMethods200ResponseResult() *CartMethods200ResponseResult {
	this := CartMethods200ResponseResult{}
	return &this
}

// NewCartMethods200ResponseResultWithDefaults instantiates a new CartMethods200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartMethods200ResponseResultWithDefaults() *CartMethods200ResponseResult {
	this := CartMethods200ResponseResult{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *CartMethods200ResponseResult) GetMethod() []string {
	if o == nil || IsNil(o.Method) {
		var ret []string
		return ret
	}
	return o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartMethods200ResponseResult) GetMethodOk() ([]string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *CartMethods200ResponseResult) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given []string and assigns it to the Method field.
func (o *CartMethods200ResponseResult) SetMethod(v []string) {
	o.Method = v
}

func (o CartMethods200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartMethods200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	return toSerialize, nil
}

type NullableCartMethods200ResponseResult struct {
	value *CartMethods200ResponseResult
	isSet bool
}

func (v NullableCartMethods200ResponseResult) Get() *CartMethods200ResponseResult {
	return v.value
}

func (v *NullableCartMethods200ResponseResult) Set(val *CartMethods200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCartMethods200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCartMethods200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartMethods200ResponseResult(val *CartMethods200ResponseResult) *NullableCartMethods200ResponseResult {
	return &NullableCartMethods200ResponseResult{value: val, isSet: true}
}

func (v NullableCartMethods200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartMethods200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


