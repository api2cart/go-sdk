/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductVariantDeleteBatchPayloadInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductVariantDeleteBatchPayloadInner{}

// ProductVariantDeleteBatchPayloadInner struct for ProductVariantDeleteBatchPayloadInner
type ProductVariantDeleteBatchPayloadInner struct {
	ProductId string `json:"product_id"`
	Id string `json:"id"`
	StoreId *string `json:"store_id,omitempty"`
}

type _ProductVariantDeleteBatchPayloadInner ProductVariantDeleteBatchPayloadInner

// NewProductVariantDeleteBatchPayloadInner instantiates a new ProductVariantDeleteBatchPayloadInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductVariantDeleteBatchPayloadInner(productId string, id string) *ProductVariantDeleteBatchPayloadInner {
	this := ProductVariantDeleteBatchPayloadInner{}
	this.ProductId = productId
	this.Id = id
	return &this
}

// NewProductVariantDeleteBatchPayloadInnerWithDefaults instantiates a new ProductVariantDeleteBatchPayloadInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductVariantDeleteBatchPayloadInnerWithDefaults() *ProductVariantDeleteBatchPayloadInner {
	this := ProductVariantDeleteBatchPayloadInner{}
	return &this
}

// GetProductId returns the ProductId field value
func (o *ProductVariantDeleteBatchPayloadInner) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *ProductVariantDeleteBatchPayloadInner) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *ProductVariantDeleteBatchPayloadInner) SetProductId(v string) {
	o.ProductId = v
}

// GetId returns the Id field value
func (o *ProductVariantDeleteBatchPayloadInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProductVariantDeleteBatchPayloadInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProductVariantDeleteBatchPayloadInner) SetId(v string) {
	o.Id = v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *ProductVariantDeleteBatchPayloadInner) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductVariantDeleteBatchPayloadInner) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *ProductVariantDeleteBatchPayloadInner) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *ProductVariantDeleteBatchPayloadInner) SetStoreId(v string) {
	o.StoreId = &v
}

func (o ProductVariantDeleteBatchPayloadInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductVariantDeleteBatchPayloadInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["product_id"] = o.ProductId
	toSerialize["id"] = o.Id
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	return toSerialize, nil
}

func (o *ProductVariantDeleteBatchPayloadInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"product_id",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductVariantDeleteBatchPayloadInner := _ProductVariantDeleteBatchPayloadInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductVariantDeleteBatchPayloadInner)

	if err != nil {
		return err
	}

	*o = ProductVariantDeleteBatchPayloadInner(varProductVariantDeleteBatchPayloadInner)

	return err
}

type NullableProductVariantDeleteBatchPayloadInner struct {
	value *ProductVariantDeleteBatchPayloadInner
	isSet bool
}

func (v NullableProductVariantDeleteBatchPayloadInner) Get() *ProductVariantDeleteBatchPayloadInner {
	return v.value
}

func (v *NullableProductVariantDeleteBatchPayloadInner) Set(val *ProductVariantDeleteBatchPayloadInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductVariantDeleteBatchPayloadInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductVariantDeleteBatchPayloadInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductVariantDeleteBatchPayloadInner(val *ProductVariantDeleteBatchPayloadInner) *NullableProductVariantDeleteBatchPayloadInner {
	return &NullableProductVariantDeleteBatchPayloadInner{value: val, isSet: true}
}

func (v NullableProductVariantDeleteBatchPayloadInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductVariantDeleteBatchPayloadInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


