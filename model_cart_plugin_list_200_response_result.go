/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartPluginList200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartPluginList200ResponseResult{}

// CartPluginList200ResponseResult struct for CartPluginList200ResponseResult
type CartPluginList200ResponseResult struct {
	AllPlugins *int32 `json:"all_plugins,omitempty"`
	Plugins []PluginList `json:"plugins,omitempty"`
}

// NewCartPluginList200ResponseResult instantiates a new CartPluginList200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartPluginList200ResponseResult() *CartPluginList200ResponseResult {
	this := CartPluginList200ResponseResult{}
	return &this
}

// NewCartPluginList200ResponseResultWithDefaults instantiates a new CartPluginList200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartPluginList200ResponseResultWithDefaults() *CartPluginList200ResponseResult {
	this := CartPluginList200ResponseResult{}
	return &this
}

// GetAllPlugins returns the AllPlugins field value if set, zero value otherwise.
func (o *CartPluginList200ResponseResult) GetAllPlugins() int32 {
	if o == nil || IsNil(o.AllPlugins) {
		var ret int32
		return ret
	}
	return *o.AllPlugins
}

// GetAllPluginsOk returns a tuple with the AllPlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPluginList200ResponseResult) GetAllPluginsOk() (*int32, bool) {
	if o == nil || IsNil(o.AllPlugins) {
		return nil, false
	}
	return o.AllPlugins, true
}

// HasAllPlugins returns a boolean if a field has been set.
func (o *CartPluginList200ResponseResult) HasAllPlugins() bool {
	if o != nil && !IsNil(o.AllPlugins) {
		return true
	}

	return false
}

// SetAllPlugins gets a reference to the given int32 and assigns it to the AllPlugins field.
func (o *CartPluginList200ResponseResult) SetAllPlugins(v int32) {
	o.AllPlugins = &v
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *CartPluginList200ResponseResult) GetPlugins() []PluginList {
	if o == nil || IsNil(o.Plugins) {
		var ret []PluginList
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPluginList200ResponseResult) GetPluginsOk() ([]PluginList, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *CartPluginList200ResponseResult) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []PluginList and assigns it to the Plugins field.
func (o *CartPluginList200ResponseResult) SetPlugins(v []PluginList) {
	o.Plugins = v
}

func (o CartPluginList200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartPluginList200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllPlugins) {
		toSerialize["all_plugins"] = o.AllPlugins
	}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	return toSerialize, nil
}

type NullableCartPluginList200ResponseResult struct {
	value *CartPluginList200ResponseResult
	isSet bool
}

func (v NullableCartPluginList200ResponseResult) Get() *CartPluginList200ResponseResult {
	return v.value
}

func (v *NullableCartPluginList200ResponseResult) Set(val *CartPluginList200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCartPluginList200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCartPluginList200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartPluginList200ResponseResult(val *CartPluginList200ResponseResult) *NullableCartPluginList200ResponseResult {
	return &NullableCartPluginList200ResponseResult{value: val, isSet: true}
}

func (v NullableCartPluginList200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartPluginList200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


