/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderItem{}

// OrderItem struct for OrderItem
type OrderItem struct {
	ProductId *string `json:"product_id,omitempty"`
	OrderProductId *string `json:"order_product_id,omitempty"`
	Model *string `json:"model,omitempty"`
	Name *string `json:"name,omitempty"`
	Price *float32 `json:"price,omitempty"`
	PriceIncTax *float32 `json:"price_inc_tax,omitempty"`
	Quantity *float32 `json:"quantity,omitempty"`
	DiscountAmount *float32 `json:"discount_amount,omitempty"`
	TotalPrice *float32 `json:"total_price,omitempty"`
	TaxPercent *float32 `json:"tax_percent,omitempty"`
	TaxValue *float32 `json:"tax_value,omitempty"`
	TaxValueAfterDiscount *float32 `json:"tax_value_after_discount,omitempty"`
	Options []OrderItemOption `json:"options,omitempty"`
	VariantId *string `json:"variant_id,omitempty"`
	WeightUnit *string `json:"weight_unit,omitempty"`
	Weight *float32 `json:"weight,omitempty"`
	Barcode *string `json:"barcode,omitempty"`
	ParentOrderProductId *string `json:"parent_order_product_id,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewOrderItem instantiates a new OrderItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderItem() *OrderItem {
	this := OrderItem{}
	return &this
}

// NewOrderItemWithDefaults instantiates a new OrderItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderItemWithDefaults() *OrderItem {
	this := OrderItem{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *OrderItem) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *OrderItem) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *OrderItem) SetProductId(v string) {
	o.ProductId = &v
}

// GetOrderProductId returns the OrderProductId field value if set, zero value otherwise.
func (o *OrderItem) GetOrderProductId() string {
	if o == nil || IsNil(o.OrderProductId) {
		var ret string
		return ret
	}
	return *o.OrderProductId
}

// GetOrderProductIdOk returns a tuple with the OrderProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetOrderProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderProductId) {
		return nil, false
	}
	return o.OrderProductId, true
}

// HasOrderProductId returns a boolean if a field has been set.
func (o *OrderItem) HasOrderProductId() bool {
	if o != nil && !IsNil(o.OrderProductId) {
		return true
	}

	return false
}

// SetOrderProductId gets a reference to the given string and assigns it to the OrderProductId field.
func (o *OrderItem) SetOrderProductId(v string) {
	o.OrderProductId = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *OrderItem) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *OrderItem) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *OrderItem) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrderItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrderItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrderItem) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OrderItem) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OrderItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *OrderItem) SetPrice(v float32) {
	o.Price = &v
}

// GetPriceIncTax returns the PriceIncTax field value if set, zero value otherwise.
func (o *OrderItem) GetPriceIncTax() float32 {
	if o == nil || IsNil(o.PriceIncTax) {
		var ret float32
		return ret
	}
	return *o.PriceIncTax
}

// GetPriceIncTaxOk returns a tuple with the PriceIncTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetPriceIncTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.PriceIncTax) {
		return nil, false
	}
	return o.PriceIncTax, true
}

// HasPriceIncTax returns a boolean if a field has been set.
func (o *OrderItem) HasPriceIncTax() bool {
	if o != nil && !IsNil(o.PriceIncTax) {
		return true
	}

	return false
}

// SetPriceIncTax gets a reference to the given float32 and assigns it to the PriceIncTax field.
func (o *OrderItem) SetPriceIncTax(v float32) {
	o.PriceIncTax = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *OrderItem) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *OrderItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *OrderItem) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *OrderItem) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *OrderItem) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *OrderItem) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *OrderItem) GetTotalPrice() float32 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float32
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *OrderItem) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float32 and assigns it to the TotalPrice field.
func (o *OrderItem) SetTotalPrice(v float32) {
	o.TotalPrice = &v
}

// GetTaxPercent returns the TaxPercent field value if set, zero value otherwise.
func (o *OrderItem) GetTaxPercent() float32 {
	if o == nil || IsNil(o.TaxPercent) {
		var ret float32
		return ret
	}
	return *o.TaxPercent
}

// GetTaxPercentOk returns a tuple with the TaxPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetTaxPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxPercent) {
		return nil, false
	}
	return o.TaxPercent, true
}

// HasTaxPercent returns a boolean if a field has been set.
func (o *OrderItem) HasTaxPercent() bool {
	if o != nil && !IsNil(o.TaxPercent) {
		return true
	}

	return false
}

// SetTaxPercent gets a reference to the given float32 and assigns it to the TaxPercent field.
func (o *OrderItem) SetTaxPercent(v float32) {
	o.TaxPercent = &v
}

// GetTaxValue returns the TaxValue field value if set, zero value otherwise.
func (o *OrderItem) GetTaxValue() float32 {
	if o == nil || IsNil(o.TaxValue) {
		var ret float32
		return ret
	}
	return *o.TaxValue
}

// GetTaxValueOk returns a tuple with the TaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetTaxValueOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxValue) {
		return nil, false
	}
	return o.TaxValue, true
}

// HasTaxValue returns a boolean if a field has been set.
func (o *OrderItem) HasTaxValue() bool {
	if o != nil && !IsNil(o.TaxValue) {
		return true
	}

	return false
}

// SetTaxValue gets a reference to the given float32 and assigns it to the TaxValue field.
func (o *OrderItem) SetTaxValue(v float32) {
	o.TaxValue = &v
}

// GetTaxValueAfterDiscount returns the TaxValueAfterDiscount field value if set, zero value otherwise.
func (o *OrderItem) GetTaxValueAfterDiscount() float32 {
	if o == nil || IsNil(o.TaxValueAfterDiscount) {
		var ret float32
		return ret
	}
	return *o.TaxValueAfterDiscount
}

// GetTaxValueAfterDiscountOk returns a tuple with the TaxValueAfterDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetTaxValueAfterDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxValueAfterDiscount) {
		return nil, false
	}
	return o.TaxValueAfterDiscount, true
}

// HasTaxValueAfterDiscount returns a boolean if a field has been set.
func (o *OrderItem) HasTaxValueAfterDiscount() bool {
	if o != nil && !IsNil(o.TaxValueAfterDiscount) {
		return true
	}

	return false
}

// SetTaxValueAfterDiscount gets a reference to the given float32 and assigns it to the TaxValueAfterDiscount field.
func (o *OrderItem) SetTaxValueAfterDiscount(v float32) {
	o.TaxValueAfterDiscount = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *OrderItem) GetOptions() []OrderItemOption {
	if o == nil || IsNil(o.Options) {
		var ret []OrderItemOption
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetOptionsOk() ([]OrderItemOption, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *OrderItem) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []OrderItemOption and assigns it to the Options field.
func (o *OrderItem) SetOptions(v []OrderItemOption) {
	o.Options = v
}

// GetVariantId returns the VariantId field value if set, zero value otherwise.
func (o *OrderItem) GetVariantId() string {
	if o == nil || IsNil(o.VariantId) {
		var ret string
		return ret
	}
	return *o.VariantId
}

// GetVariantIdOk returns a tuple with the VariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.VariantId) {
		return nil, false
	}
	return o.VariantId, true
}

// HasVariantId returns a boolean if a field has been set.
func (o *OrderItem) HasVariantId() bool {
	if o != nil && !IsNil(o.VariantId) {
		return true
	}

	return false
}

// SetVariantId gets a reference to the given string and assigns it to the VariantId field.
func (o *OrderItem) SetVariantId(v string) {
	o.VariantId = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *OrderItem) GetWeightUnit() string {
	if o == nil || IsNil(o.WeightUnit) {
		var ret string
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetWeightUnitOk() (*string, bool) {
	if o == nil || IsNil(o.WeightUnit) {
		return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *OrderItem) HasWeightUnit() bool {
	if o != nil && !IsNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given string and assigns it to the WeightUnit field.
func (o *OrderItem) SetWeightUnit(v string) {
	o.WeightUnit = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *OrderItem) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *OrderItem) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *OrderItem) SetWeight(v float32) {
	o.Weight = &v
}

// GetBarcode returns the Barcode field value if set, zero value otherwise.
func (o *OrderItem) GetBarcode() string {
	if o == nil || IsNil(o.Barcode) {
		var ret string
		return ret
	}
	return *o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetBarcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Barcode) {
		return nil, false
	}
	return o.Barcode, true
}

// HasBarcode returns a boolean if a field has been set.
func (o *OrderItem) HasBarcode() bool {
	if o != nil && !IsNil(o.Barcode) {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given string and assigns it to the Barcode field.
func (o *OrderItem) SetBarcode(v string) {
	o.Barcode = &v
}

// GetParentOrderProductId returns the ParentOrderProductId field value if set, zero value otherwise.
func (o *OrderItem) GetParentOrderProductId() string {
	if o == nil || IsNil(o.ParentOrderProductId) {
		var ret string
		return ret
	}
	return *o.ParentOrderProductId
}

// GetParentOrderProductIdOk returns a tuple with the ParentOrderProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetParentOrderProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentOrderProductId) {
		return nil, false
	}
	return o.ParentOrderProductId, true
}

// HasParentOrderProductId returns a boolean if a field has been set.
func (o *OrderItem) HasParentOrderProductId() bool {
	if o != nil && !IsNil(o.ParentOrderProductId) {
		return true
	}

	return false
}

// SetParentOrderProductId gets a reference to the given string and assigns it to the ParentOrderProductId field.
func (o *OrderItem) SetParentOrderProductId(v string) {
	o.ParentOrderProductId = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *OrderItem) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *OrderItem) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *OrderItem) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *OrderItem) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItem) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *OrderItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *OrderItem) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o OrderItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.OrderProductId) {
		toSerialize["order_product_id"] = o.OrderProductId
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceIncTax) {
		toSerialize["price_inc_tax"] = o.PriceIncTax
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["total_price"] = o.TotalPrice
	}
	if !IsNil(o.TaxPercent) {
		toSerialize["tax_percent"] = o.TaxPercent
	}
	if !IsNil(o.TaxValue) {
		toSerialize["tax_value"] = o.TaxValue
	}
	if !IsNil(o.TaxValueAfterDiscount) {
		toSerialize["tax_value_after_discount"] = o.TaxValueAfterDiscount
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.VariantId) {
		toSerialize["variant_id"] = o.VariantId
	}
	if !IsNil(o.WeightUnit) {
		toSerialize["weight_unit"] = o.WeightUnit
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Barcode) {
		toSerialize["barcode"] = o.Barcode
	}
	if !IsNil(o.ParentOrderProductId) {
		toSerialize["parent_order_product_id"] = o.ParentOrderProductId
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableOrderItem struct {
	value *OrderItem
	isSet bool
}

func (v NullableOrderItem) Get() *OrderItem {
	return v.value
}

func (v *NullableOrderItem) Set(val *OrderItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItem(val *OrderItem) *NullableOrderItem {
	return &NullableOrderItem{value: val, isSet: true}
}

func (v NullableOrderItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


