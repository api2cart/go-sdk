/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderReturnAdd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderReturnAdd{}

// OrderReturnAdd struct for OrderReturnAdd
type OrderReturnAdd struct {
	// Defines the order id
	OrderId *string `json:"order_id,omitempty"`
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Defines return request status
	ReturnStatusId string `json:"return_status_id"`
	// Defines return request action
	ReturnActionId string `json:"return_action_id"`
	// Defines return request reason
	ReturnReasonId string `json:"return_reason_id"`
	// Defines return request reason
	ReturnReason *string `json:"return_reason,omitempty"`
	// Boolean, whether or not to add the line items back to the store inventory.
	ItemRestock *bool `json:"item_restock,omitempty"`
	// Specifies staff note
	StaffNote *string `json:"staff_note,omitempty"`
	// Specifies return comment
	Comment *string `json:"comment,omitempty"`
	// Send notifications to customer after order was created
	SendNotifications *bool `json:"send_notifications,omitempty"`
	// Defines return reject reason
	RejectReason *string `json:"reject_reason,omitempty"`
	OrderProducts []OrderReturnAddOrderProductsInner `json:"order_products"`
}

type _OrderReturnAdd OrderReturnAdd

// NewOrderReturnAdd instantiates a new OrderReturnAdd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderReturnAdd(returnStatusId string, returnActionId string, returnReasonId string, orderProducts []OrderReturnAddOrderProductsInner) *OrderReturnAdd {
	this := OrderReturnAdd{}
	this.ReturnStatusId = returnStatusId
	this.ReturnActionId = returnActionId
	this.ReturnReasonId = returnReasonId
	var itemRestock bool = false
	this.ItemRestock = &itemRestock
	var sendNotifications bool = false
	this.SendNotifications = &sendNotifications
	this.OrderProducts = orderProducts
	return &this
}

// NewOrderReturnAddWithDefaults instantiates a new OrderReturnAdd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderReturnAddWithDefaults() *OrderReturnAdd {
	this := OrderReturnAdd{}
	var itemRestock bool = false
	this.ItemRestock = &itemRestock
	var sendNotifications bool = false
	this.SendNotifications = &sendNotifications
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderReturnAdd) SetOrderId(v string) {
	o.OrderId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *OrderReturnAdd) SetStoreId(v string) {
	o.StoreId = &v
}

// GetReturnStatusId returns the ReturnStatusId field value
func (o *OrderReturnAdd) GetReturnStatusId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnStatusId
}

// GetReturnStatusIdOk returns a tuple with the ReturnStatusId field value
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetReturnStatusIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnStatusId, true
}

// SetReturnStatusId sets field value
func (o *OrderReturnAdd) SetReturnStatusId(v string) {
	o.ReturnStatusId = v
}

// GetReturnActionId returns the ReturnActionId field value
func (o *OrderReturnAdd) GetReturnActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnActionId
}

// GetReturnActionIdOk returns a tuple with the ReturnActionId field value
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetReturnActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnActionId, true
}

// SetReturnActionId sets field value
func (o *OrderReturnAdd) SetReturnActionId(v string) {
	o.ReturnActionId = v
}

// GetReturnReasonId returns the ReturnReasonId field value
func (o *OrderReturnAdd) GetReturnReasonId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnReasonId
}

// GetReturnReasonIdOk returns a tuple with the ReturnReasonId field value
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetReturnReasonIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnReasonId, true
}

// SetReturnReasonId sets field value
func (o *OrderReturnAdd) SetReturnReasonId(v string) {
	o.ReturnReasonId = v
}

// GetReturnReason returns the ReturnReason field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetReturnReason() string {
	if o == nil || IsNil(o.ReturnReason) {
		var ret string
		return ret
	}
	return *o.ReturnReason
}

// GetReturnReasonOk returns a tuple with the ReturnReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetReturnReasonOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnReason) {
		return nil, false
	}
	return o.ReturnReason, true
}

// HasReturnReason returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasReturnReason() bool {
	if o != nil && !IsNil(o.ReturnReason) {
		return true
	}

	return false
}

// SetReturnReason gets a reference to the given string and assigns it to the ReturnReason field.
func (o *OrderReturnAdd) SetReturnReason(v string) {
	o.ReturnReason = &v
}

// GetItemRestock returns the ItemRestock field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetItemRestock() bool {
	if o == nil || IsNil(o.ItemRestock) {
		var ret bool
		return ret
	}
	return *o.ItemRestock
}

// GetItemRestockOk returns a tuple with the ItemRestock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetItemRestockOk() (*bool, bool) {
	if o == nil || IsNil(o.ItemRestock) {
		return nil, false
	}
	return o.ItemRestock, true
}

// HasItemRestock returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasItemRestock() bool {
	if o != nil && !IsNil(o.ItemRestock) {
		return true
	}

	return false
}

// SetItemRestock gets a reference to the given bool and assigns it to the ItemRestock field.
func (o *OrderReturnAdd) SetItemRestock(v bool) {
	o.ItemRestock = &v
}

// GetStaffNote returns the StaffNote field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetStaffNote() string {
	if o == nil || IsNil(o.StaffNote) {
		var ret string
		return ret
	}
	return *o.StaffNote
}

// GetStaffNoteOk returns a tuple with the StaffNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetStaffNoteOk() (*string, bool) {
	if o == nil || IsNil(o.StaffNote) {
		return nil, false
	}
	return o.StaffNote, true
}

// HasStaffNote returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasStaffNote() bool {
	if o != nil && !IsNil(o.StaffNote) {
		return true
	}

	return false
}

// SetStaffNote gets a reference to the given string and assigns it to the StaffNote field.
func (o *OrderReturnAdd) SetStaffNote(v string) {
	o.StaffNote = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *OrderReturnAdd) SetComment(v string) {
	o.Comment = &v
}

// GetSendNotifications returns the SendNotifications field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetSendNotifications() bool {
	if o == nil || IsNil(o.SendNotifications) {
		var ret bool
		return ret
	}
	return *o.SendNotifications
}

// GetSendNotificationsOk returns a tuple with the SendNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetSendNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.SendNotifications) {
		return nil, false
	}
	return o.SendNotifications, true
}

// HasSendNotifications returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasSendNotifications() bool {
	if o != nil && !IsNil(o.SendNotifications) {
		return true
	}

	return false
}

// SetSendNotifications gets a reference to the given bool and assigns it to the SendNotifications field.
func (o *OrderReturnAdd) SetSendNotifications(v bool) {
	o.SendNotifications = &v
}

// GetRejectReason returns the RejectReason field value if set, zero value otherwise.
func (o *OrderReturnAdd) GetRejectReason() string {
	if o == nil || IsNil(o.RejectReason) {
		var ret string
		return ret
	}
	return *o.RejectReason
}

// GetRejectReasonOk returns a tuple with the RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetRejectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RejectReason) {
		return nil, false
	}
	return o.RejectReason, true
}

// HasRejectReason returns a boolean if a field has been set.
func (o *OrderReturnAdd) HasRejectReason() bool {
	if o != nil && !IsNil(o.RejectReason) {
		return true
	}

	return false
}

// SetRejectReason gets a reference to the given string and assigns it to the RejectReason field.
func (o *OrderReturnAdd) SetRejectReason(v string) {
	o.RejectReason = &v
}

// GetOrderProducts returns the OrderProducts field value
func (o *OrderReturnAdd) GetOrderProducts() []OrderReturnAddOrderProductsInner {
	if o == nil {
		var ret []OrderReturnAddOrderProductsInner
		return ret
	}

	return o.OrderProducts
}

// GetOrderProductsOk returns a tuple with the OrderProducts field value
// and a boolean to check if the value has been set.
func (o *OrderReturnAdd) GetOrderProductsOk() ([]OrderReturnAddOrderProductsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderProducts, true
}

// SetOrderProducts sets field value
func (o *OrderReturnAdd) SetOrderProducts(v []OrderReturnAddOrderProductsInner) {
	o.OrderProducts = v
}

func (o OrderReturnAdd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderReturnAdd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	toSerialize["return_status_id"] = o.ReturnStatusId
	toSerialize["return_action_id"] = o.ReturnActionId
	toSerialize["return_reason_id"] = o.ReturnReasonId
	if !IsNil(o.ReturnReason) {
		toSerialize["return_reason"] = o.ReturnReason
	}
	if !IsNil(o.ItemRestock) {
		toSerialize["item_restock"] = o.ItemRestock
	}
	if !IsNil(o.StaffNote) {
		toSerialize["staff_note"] = o.StaffNote
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.SendNotifications) {
		toSerialize["send_notifications"] = o.SendNotifications
	}
	if !IsNil(o.RejectReason) {
		toSerialize["reject_reason"] = o.RejectReason
	}
	toSerialize["order_products"] = o.OrderProducts
	return toSerialize, nil
}

func (o *OrderReturnAdd) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"return_status_id",
		"return_action_id",
		"return_reason_id",
		"order_products",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderReturnAdd := _OrderReturnAdd{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderReturnAdd)

	if err != nil {
		return err
	}

	*o = OrderReturnAdd(varOrderReturnAdd)

	return err
}

type NullableOrderReturnAdd struct {
	value *OrderReturnAdd
	isSet bool
}

func (v NullableOrderReturnAdd) Get() *OrderReturnAdd {
	return v.value
}

func (v *NullableOrderReturnAdd) Set(val *OrderReturnAdd) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderReturnAdd) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderReturnAdd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderReturnAdd(val *OrderReturnAdd) *NullableOrderReturnAdd {
	return &NullableOrderReturnAdd{value: val, isSet: true}
}

func (v NullableOrderReturnAdd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderReturnAdd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


