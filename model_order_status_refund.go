/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderStatusRefund type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderStatusRefund{}

// OrderStatusRefund struct for OrderStatusRefund
type OrderStatusRefund struct {
	Shipping NullableFloat32 `json:"shipping,omitempty"`
	Fee NullableFloat32 `json:"fee,omitempty"`
	Tax NullableFloat32 `json:"tax,omitempty"`
	TotalRefunded NullableFloat32 `json:"total_refunded,omitempty"`
	Time NullableA2CDateTime `json:"time,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	RefundedItems []OrderStatusRefundItem `json:"refunded_items,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewOrderStatusRefund instantiates a new OrderStatusRefund object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderStatusRefund() *OrderStatusRefund {
	this := OrderStatusRefund{}
	return &this
}

// NewOrderStatusRefundWithDefaults instantiates a new OrderStatusRefund object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderStatusRefundWithDefaults() *OrderStatusRefund {
	this := OrderStatusRefund{}
	return &this
}

// GetShipping returns the Shipping field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetShipping() float32 {
	if o == nil || IsNil(o.Shipping.Get()) {
		var ret float32
		return ret
	}
	return *o.Shipping.Get()
}

// GetShippingOk returns a tuple with the Shipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetShippingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Shipping.Get(), o.Shipping.IsSet()
}

// HasShipping returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasShipping() bool {
	if o != nil && o.Shipping.IsSet() {
		return true
	}

	return false
}

// SetShipping gets a reference to the given NullableFloat32 and assigns it to the Shipping field.
func (o *OrderStatusRefund) SetShipping(v float32) {
	o.Shipping.Set(&v)
}
// SetShippingNil sets the value for Shipping to be an explicit nil
func (o *OrderStatusRefund) SetShippingNil() {
	o.Shipping.Set(nil)
}

// UnsetShipping ensures that no value is present for Shipping, not even an explicit nil
func (o *OrderStatusRefund) UnsetShipping() {
	o.Shipping.Unset()
}

// GetFee returns the Fee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetFee() float32 {
	if o == nil || IsNil(o.Fee.Get()) {
		var ret float32
		return ret
	}
	return *o.Fee.Get()
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetFeeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fee.Get(), o.Fee.IsSet()
}

// HasFee returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasFee() bool {
	if o != nil && o.Fee.IsSet() {
		return true
	}

	return false
}

// SetFee gets a reference to the given NullableFloat32 and assigns it to the Fee field.
func (o *OrderStatusRefund) SetFee(v float32) {
	o.Fee.Set(&v)
}
// SetFeeNil sets the value for Fee to be an explicit nil
func (o *OrderStatusRefund) SetFeeNil() {
	o.Fee.Set(nil)
}

// UnsetFee ensures that no value is present for Fee, not even an explicit nil
func (o *OrderStatusRefund) UnsetFee() {
	o.Fee.Unset()
}

// GetTax returns the Tax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetTax() float32 {
	if o == nil || IsNil(o.Tax.Get()) {
		var ret float32
		return ret
	}
	return *o.Tax.Get()
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetTaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tax.Get(), o.Tax.IsSet()
}

// HasTax returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasTax() bool {
	if o != nil && o.Tax.IsSet() {
		return true
	}

	return false
}

// SetTax gets a reference to the given NullableFloat32 and assigns it to the Tax field.
func (o *OrderStatusRefund) SetTax(v float32) {
	o.Tax.Set(&v)
}
// SetTaxNil sets the value for Tax to be an explicit nil
func (o *OrderStatusRefund) SetTaxNil() {
	o.Tax.Set(nil)
}

// UnsetTax ensures that no value is present for Tax, not even an explicit nil
func (o *OrderStatusRefund) UnsetTax() {
	o.Tax.Unset()
}

// GetTotalRefunded returns the TotalRefunded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetTotalRefunded() float32 {
	if o == nil || IsNil(o.TotalRefunded.Get()) {
		var ret float32
		return ret
	}
	return *o.TotalRefunded.Get()
}

// GetTotalRefundedOk returns a tuple with the TotalRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetTotalRefundedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalRefunded.Get(), o.TotalRefunded.IsSet()
}

// HasTotalRefunded returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasTotalRefunded() bool {
	if o != nil && o.TotalRefunded.IsSet() {
		return true
	}

	return false
}

// SetTotalRefunded gets a reference to the given NullableFloat32 and assigns it to the TotalRefunded field.
func (o *OrderStatusRefund) SetTotalRefunded(v float32) {
	o.TotalRefunded.Set(&v)
}
// SetTotalRefundedNil sets the value for TotalRefunded to be an explicit nil
func (o *OrderStatusRefund) SetTotalRefundedNil() {
	o.TotalRefunded.Set(nil)
}

// UnsetTotalRefunded ensures that no value is present for TotalRefunded, not even an explicit nil
func (o *OrderStatusRefund) UnsetTotalRefunded() {
	o.TotalRefunded.Unset()
}

// GetTime returns the Time field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetTime() A2CDateTime {
	if o == nil || IsNil(o.Time.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.Time.Get()
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetTimeOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.Time.Get(), o.Time.IsSet()
}

// HasTime returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasTime() bool {
	if o != nil && o.Time.IsSet() {
		return true
	}

	return false
}

// SetTime gets a reference to the given NullableA2CDateTime and assigns it to the Time field.
func (o *OrderStatusRefund) SetTime(v A2CDateTime) {
	o.Time.Set(&v)
}
// SetTimeNil sets the value for Time to be an explicit nil
func (o *OrderStatusRefund) SetTimeNil() {
	o.Time.Set(nil)
}

// UnsetTime ensures that no value is present for Time, not even an explicit nil
func (o *OrderStatusRefund) UnsetTime() {
	o.Time.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *OrderStatusRefund) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *OrderStatusRefund) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *OrderStatusRefund) UnsetComment() {
	o.Comment.Unset()
}

// GetRefundedItems returns the RefundedItems field value if set, zero value otherwise.
func (o *OrderStatusRefund) GetRefundedItems() []OrderStatusRefundItem {
	if o == nil || IsNil(o.RefundedItems) {
		var ret []OrderStatusRefundItem
		return ret
	}
	return o.RefundedItems
}

// GetRefundedItemsOk returns a tuple with the RefundedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefund) GetRefundedItemsOk() ([]OrderStatusRefundItem, bool) {
	if o == nil || IsNil(o.RefundedItems) {
		return nil, false
	}
	return o.RefundedItems, true
}

// HasRefundedItems returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasRefundedItems() bool {
	if o != nil && !IsNil(o.RefundedItems) {
		return true
	}

	return false
}

// SetRefundedItems gets a reference to the given []OrderStatusRefundItem and assigns it to the RefundedItems field.
func (o *OrderStatusRefund) SetRefundedItems(v []OrderStatusRefundItem) {
	o.RefundedItems = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *OrderStatusRefund) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusRefund) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusRefund) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *OrderStatusRefund) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *OrderStatusRefund) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o OrderStatusRefund) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderStatusRefund) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Shipping.IsSet() {
		toSerialize["shipping"] = o.Shipping.Get()
	}
	if o.Fee.IsSet() {
		toSerialize["fee"] = o.Fee.Get()
	}
	if o.Tax.IsSet() {
		toSerialize["tax"] = o.Tax.Get()
	}
	if o.TotalRefunded.IsSet() {
		toSerialize["total_refunded"] = o.TotalRefunded.Get()
	}
	if o.Time.IsSet() {
		toSerialize["time"] = o.Time.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if !IsNil(o.RefundedItems) {
		toSerialize["refunded_items"] = o.RefundedItems
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableOrderStatusRefund struct {
	value *OrderStatusRefund
	isSet bool
}

func (v NullableOrderStatusRefund) Get() *OrderStatusRefund {
	return v.value
}

func (v *NullableOrderStatusRefund) Set(val *OrderStatusRefund) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderStatusRefund) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderStatusRefund) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderStatusRefund(val *OrderStatusRefund) *NullableOrderStatusRefund {
	return &NullableOrderStatusRefund{value: val, isSet: true}
}

func (v NullableOrderStatusRefund) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderStatusRefund) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


