/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductAddPackageDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAddPackageDetails{}

// ProductAddPackageDetails If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>
type ProductAddPackageDetails struct {
	MeasureUnit *string `json:"measure_unit,omitempty"`
	WeighUnit *string `json:"weigh_unit,omitempty"`
	PackageDepth *float32 `json:"package_depth,omitempty"`
	PackageLength *float32 `json:"package_length,omitempty"`
	PackageWidth *float32 `json:"package_width,omitempty"`
	WeightMajor *float32 `json:"weight_major,omitempty"`
	WeightMinor *float32 `json:"weight_minor,omitempty"`
	ShippingPackage *string `json:"shipping_package,omitempty"`
}

// NewProductAddPackageDetails instantiates a new ProductAddPackageDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAddPackageDetails() *ProductAddPackageDetails {
	this := ProductAddPackageDetails{}
	return &this
}

// NewProductAddPackageDetailsWithDefaults instantiates a new ProductAddPackageDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAddPackageDetailsWithDefaults() *ProductAddPackageDetails {
	this := ProductAddPackageDetails{}
	return &this
}

// GetMeasureUnit returns the MeasureUnit field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetMeasureUnit() string {
	if o == nil || IsNil(o.MeasureUnit) {
		var ret string
		return ret
	}
	return *o.MeasureUnit
}

// GetMeasureUnitOk returns a tuple with the MeasureUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetMeasureUnitOk() (*string, bool) {
	if o == nil || IsNil(o.MeasureUnit) {
		return nil, false
	}
	return o.MeasureUnit, true
}

// HasMeasureUnit returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasMeasureUnit() bool {
	if o != nil && !IsNil(o.MeasureUnit) {
		return true
	}

	return false
}

// SetMeasureUnit gets a reference to the given string and assigns it to the MeasureUnit field.
func (o *ProductAddPackageDetails) SetMeasureUnit(v string) {
	o.MeasureUnit = &v
}

// GetWeighUnit returns the WeighUnit field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetWeighUnit() string {
	if o == nil || IsNil(o.WeighUnit) {
		var ret string
		return ret
	}
	return *o.WeighUnit
}

// GetWeighUnitOk returns a tuple with the WeighUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetWeighUnitOk() (*string, bool) {
	if o == nil || IsNil(o.WeighUnit) {
		return nil, false
	}
	return o.WeighUnit, true
}

// HasWeighUnit returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasWeighUnit() bool {
	if o != nil && !IsNil(o.WeighUnit) {
		return true
	}

	return false
}

// SetWeighUnit gets a reference to the given string and assigns it to the WeighUnit field.
func (o *ProductAddPackageDetails) SetWeighUnit(v string) {
	o.WeighUnit = &v
}

// GetPackageDepth returns the PackageDepth field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetPackageDepth() float32 {
	if o == nil || IsNil(o.PackageDepth) {
		var ret float32
		return ret
	}
	return *o.PackageDepth
}

// GetPackageDepthOk returns a tuple with the PackageDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetPackageDepthOk() (*float32, bool) {
	if o == nil || IsNil(o.PackageDepth) {
		return nil, false
	}
	return o.PackageDepth, true
}

// HasPackageDepth returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasPackageDepth() bool {
	if o != nil && !IsNil(o.PackageDepth) {
		return true
	}

	return false
}

// SetPackageDepth gets a reference to the given float32 and assigns it to the PackageDepth field.
func (o *ProductAddPackageDetails) SetPackageDepth(v float32) {
	o.PackageDepth = &v
}

// GetPackageLength returns the PackageLength field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetPackageLength() float32 {
	if o == nil || IsNil(o.PackageLength) {
		var ret float32
		return ret
	}
	return *o.PackageLength
}

// GetPackageLengthOk returns a tuple with the PackageLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetPackageLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.PackageLength) {
		return nil, false
	}
	return o.PackageLength, true
}

// HasPackageLength returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasPackageLength() bool {
	if o != nil && !IsNil(o.PackageLength) {
		return true
	}

	return false
}

// SetPackageLength gets a reference to the given float32 and assigns it to the PackageLength field.
func (o *ProductAddPackageDetails) SetPackageLength(v float32) {
	o.PackageLength = &v
}

// GetPackageWidth returns the PackageWidth field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetPackageWidth() float32 {
	if o == nil || IsNil(o.PackageWidth) {
		var ret float32
		return ret
	}
	return *o.PackageWidth
}

// GetPackageWidthOk returns a tuple with the PackageWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetPackageWidthOk() (*float32, bool) {
	if o == nil || IsNil(o.PackageWidth) {
		return nil, false
	}
	return o.PackageWidth, true
}

// HasPackageWidth returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasPackageWidth() bool {
	if o != nil && !IsNil(o.PackageWidth) {
		return true
	}

	return false
}

// SetPackageWidth gets a reference to the given float32 and assigns it to the PackageWidth field.
func (o *ProductAddPackageDetails) SetPackageWidth(v float32) {
	o.PackageWidth = &v
}

// GetWeightMajor returns the WeightMajor field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetWeightMajor() float32 {
	if o == nil || IsNil(o.WeightMajor) {
		var ret float32
		return ret
	}
	return *o.WeightMajor
}

// GetWeightMajorOk returns a tuple with the WeightMajor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetWeightMajorOk() (*float32, bool) {
	if o == nil || IsNil(o.WeightMajor) {
		return nil, false
	}
	return o.WeightMajor, true
}

// HasWeightMajor returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasWeightMajor() bool {
	if o != nil && !IsNil(o.WeightMajor) {
		return true
	}

	return false
}

// SetWeightMajor gets a reference to the given float32 and assigns it to the WeightMajor field.
func (o *ProductAddPackageDetails) SetWeightMajor(v float32) {
	o.WeightMajor = &v
}

// GetWeightMinor returns the WeightMinor field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetWeightMinor() float32 {
	if o == nil || IsNil(o.WeightMinor) {
		var ret float32
		return ret
	}
	return *o.WeightMinor
}

// GetWeightMinorOk returns a tuple with the WeightMinor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetWeightMinorOk() (*float32, bool) {
	if o == nil || IsNil(o.WeightMinor) {
		return nil, false
	}
	return o.WeightMinor, true
}

// HasWeightMinor returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasWeightMinor() bool {
	if o != nil && !IsNil(o.WeightMinor) {
		return true
	}

	return false
}

// SetWeightMinor gets a reference to the given float32 and assigns it to the WeightMinor field.
func (o *ProductAddPackageDetails) SetWeightMinor(v float32) {
	o.WeightMinor = &v
}

// GetShippingPackage returns the ShippingPackage field value if set, zero value otherwise.
func (o *ProductAddPackageDetails) GetShippingPackage() string {
	if o == nil || IsNil(o.ShippingPackage) {
		var ret string
		return ret
	}
	return *o.ShippingPackage
}

// GetShippingPackageOk returns a tuple with the ShippingPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPackageDetails) GetShippingPackageOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingPackage) {
		return nil, false
	}
	return o.ShippingPackage, true
}

// HasShippingPackage returns a boolean if a field has been set.
func (o *ProductAddPackageDetails) HasShippingPackage() bool {
	if o != nil && !IsNil(o.ShippingPackage) {
		return true
	}

	return false
}

// SetShippingPackage gets a reference to the given string and assigns it to the ShippingPackage field.
func (o *ProductAddPackageDetails) SetShippingPackage(v string) {
	o.ShippingPackage = &v
}

func (o ProductAddPackageDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAddPackageDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MeasureUnit) {
		toSerialize["measure_unit"] = o.MeasureUnit
	}
	if !IsNil(o.WeighUnit) {
		toSerialize["weigh_unit"] = o.WeighUnit
	}
	if !IsNil(o.PackageDepth) {
		toSerialize["package_depth"] = o.PackageDepth
	}
	if !IsNil(o.PackageLength) {
		toSerialize["package_length"] = o.PackageLength
	}
	if !IsNil(o.PackageWidth) {
		toSerialize["package_width"] = o.PackageWidth
	}
	if !IsNil(o.WeightMajor) {
		toSerialize["weight_major"] = o.WeightMajor
	}
	if !IsNil(o.WeightMinor) {
		toSerialize["weight_minor"] = o.WeightMinor
	}
	if !IsNil(o.ShippingPackage) {
		toSerialize["shipping_package"] = o.ShippingPackage
	}
	return toSerialize, nil
}

type NullableProductAddPackageDetails struct {
	value *ProductAddPackageDetails
	isSet bool
}

func (v NullableProductAddPackageDetails) Get() *ProductAddPackageDetails {
	return v.value
}

func (v *NullableProductAddPackageDetails) Set(val *ProductAddPackageDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAddPackageDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAddPackageDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAddPackageDetails(val *ProductAddPackageDetails) *NullableProductAddPackageDetails {
	return &NullableProductAddPackageDetails{value: val, isSet: true}
}

func (v NullableProductAddPackageDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAddPackageDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


