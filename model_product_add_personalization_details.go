/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductAddPersonalizationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAddPersonalizationDetails{}

// ProductAddPersonalizationDetails Defines personalization settings for the listing. To enable personalization, is_personalizable must be set to true. When enabled, additional fields may be used to configure the personalization experience, including whether it is required (personalization_is_required), the maximum character limit (personalization_char_count_max), and buyer instructions (personalization_instructions). All related fields are only applicable if personalization is enabled.
type ProductAddPersonalizationDetails struct {
	IsPersonalizable bool `json:"is_personalizable"`
	PersonalizationIsRequired *bool `json:"personalization_is_required,omitempty"`
	PersonalizationCharCountMax *int32 `json:"personalization_char_count_max,omitempty"`
	PersonalizationInstructions *string `json:"personalization_instructions,omitempty"`
}

type _ProductAddPersonalizationDetails ProductAddPersonalizationDetails

// NewProductAddPersonalizationDetails instantiates a new ProductAddPersonalizationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAddPersonalizationDetails(isPersonalizable bool) *ProductAddPersonalizationDetails {
	this := ProductAddPersonalizationDetails{}
	this.IsPersonalizable = isPersonalizable
	return &this
}

// NewProductAddPersonalizationDetailsWithDefaults instantiates a new ProductAddPersonalizationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAddPersonalizationDetailsWithDefaults() *ProductAddPersonalizationDetails {
	this := ProductAddPersonalizationDetails{}
	return &this
}

// GetIsPersonalizable returns the IsPersonalizable field value
func (o *ProductAddPersonalizationDetails) GetIsPersonalizable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPersonalizable
}

// GetIsPersonalizableOk returns a tuple with the IsPersonalizable field value
// and a boolean to check if the value has been set.
func (o *ProductAddPersonalizationDetails) GetIsPersonalizableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPersonalizable, true
}

// SetIsPersonalizable sets field value
func (o *ProductAddPersonalizationDetails) SetIsPersonalizable(v bool) {
	o.IsPersonalizable = v
}

// GetPersonalizationIsRequired returns the PersonalizationIsRequired field value if set, zero value otherwise.
func (o *ProductAddPersonalizationDetails) GetPersonalizationIsRequired() bool {
	if o == nil || IsNil(o.PersonalizationIsRequired) {
		var ret bool
		return ret
	}
	return *o.PersonalizationIsRequired
}

// GetPersonalizationIsRequiredOk returns a tuple with the PersonalizationIsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPersonalizationDetails) GetPersonalizationIsRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonalizationIsRequired) {
		return nil, false
	}
	return o.PersonalizationIsRequired, true
}

// HasPersonalizationIsRequired returns a boolean if a field has been set.
func (o *ProductAddPersonalizationDetails) HasPersonalizationIsRequired() bool {
	if o != nil && !IsNil(o.PersonalizationIsRequired) {
		return true
	}

	return false
}

// SetPersonalizationIsRequired gets a reference to the given bool and assigns it to the PersonalizationIsRequired field.
func (o *ProductAddPersonalizationDetails) SetPersonalizationIsRequired(v bool) {
	o.PersonalizationIsRequired = &v
}

// GetPersonalizationCharCountMax returns the PersonalizationCharCountMax field value if set, zero value otherwise.
func (o *ProductAddPersonalizationDetails) GetPersonalizationCharCountMax() int32 {
	if o == nil || IsNil(o.PersonalizationCharCountMax) {
		var ret int32
		return ret
	}
	return *o.PersonalizationCharCountMax
}

// GetPersonalizationCharCountMaxOk returns a tuple with the PersonalizationCharCountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPersonalizationDetails) GetPersonalizationCharCountMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.PersonalizationCharCountMax) {
		return nil, false
	}
	return o.PersonalizationCharCountMax, true
}

// HasPersonalizationCharCountMax returns a boolean if a field has been set.
func (o *ProductAddPersonalizationDetails) HasPersonalizationCharCountMax() bool {
	if o != nil && !IsNil(o.PersonalizationCharCountMax) {
		return true
	}

	return false
}

// SetPersonalizationCharCountMax gets a reference to the given int32 and assigns it to the PersonalizationCharCountMax field.
func (o *ProductAddPersonalizationDetails) SetPersonalizationCharCountMax(v int32) {
	o.PersonalizationCharCountMax = &v
}

// GetPersonalizationInstructions returns the PersonalizationInstructions field value if set, zero value otherwise.
func (o *ProductAddPersonalizationDetails) GetPersonalizationInstructions() string {
	if o == nil || IsNil(o.PersonalizationInstructions) {
		var ret string
		return ret
	}
	return *o.PersonalizationInstructions
}

// GetPersonalizationInstructionsOk returns a tuple with the PersonalizationInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddPersonalizationDetails) GetPersonalizationInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.PersonalizationInstructions) {
		return nil, false
	}
	return o.PersonalizationInstructions, true
}

// HasPersonalizationInstructions returns a boolean if a field has been set.
func (o *ProductAddPersonalizationDetails) HasPersonalizationInstructions() bool {
	if o != nil && !IsNil(o.PersonalizationInstructions) {
		return true
	}

	return false
}

// SetPersonalizationInstructions gets a reference to the given string and assigns it to the PersonalizationInstructions field.
func (o *ProductAddPersonalizationDetails) SetPersonalizationInstructions(v string) {
	o.PersonalizationInstructions = &v
}

func (o ProductAddPersonalizationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAddPersonalizationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_personalizable"] = o.IsPersonalizable
	if !IsNil(o.PersonalizationIsRequired) {
		toSerialize["personalization_is_required"] = o.PersonalizationIsRequired
	}
	if !IsNil(o.PersonalizationCharCountMax) {
		toSerialize["personalization_char_count_max"] = o.PersonalizationCharCountMax
	}
	if !IsNil(o.PersonalizationInstructions) {
		toSerialize["personalization_instructions"] = o.PersonalizationInstructions
	}
	return toSerialize, nil
}

func (o *ProductAddPersonalizationDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_personalizable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductAddPersonalizationDetails := _ProductAddPersonalizationDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductAddPersonalizationDetails)

	if err != nil {
		return err
	}

	*o = ProductAddPersonalizationDetails(varProductAddPersonalizationDetails)

	return err
}

type NullableProductAddPersonalizationDetails struct {
	value *ProductAddPersonalizationDetails
	isSet bool
}

func (v NullableProductAddPersonalizationDetails) Get() *ProductAddPersonalizationDetails {
	return v.value
}

func (v *NullableProductAddPersonalizationDetails) Set(val *ProductAddPersonalizationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAddPersonalizationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAddPersonalizationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAddPersonalizationDetails(val *ProductAddPersonalizationDetails) *NullableProductAddPersonalizationDetails {
	return &NullableProductAddPersonalizationDetails{value: val, isSet: true}
}

func (v NullableProductAddPersonalizationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAddPersonalizationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


