/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderCalculate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCalculate{}

// OrderCalculate struct for OrderCalculate
type OrderCalculate struct {
	// Defines the customer specified by email for whom the order needs to be calculated
	CustomerEmail string `json:"customer_email"`
	// Currency Id
	CurrencyId *string `json:"currency_id,omitempty"`
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Coupons that will be applied to order. If the order isn't eligible for any given discount code or there is no discount with such a code it will be skipped during calculation
	Coupons []string `json:"coupons,omitempty"`
	// Specifies shipping first name
	ShippFirstName string `json:"shipp_first_name"`
	// Specifies shipping last name
	ShippLastName string `json:"shipp_last_name"`
	// Specifies first shipping address
	ShippAddress1 string `json:"shipp_address_1"`
	// Specifies second address line of a shipping street address
	ShippAddress2 *string `json:"shipp_address_2,omitempty"`
	// Specifies shipping city
	ShippCity string `json:"shipp_city"`
	// Specifies shipping postcode
	ShippPostcode string `json:"shipp_postcode"`
	// Specifies shipping state code
	ShippState *string `json:"shipp_state,omitempty"`
	// Specifies shipping country code
	ShippCountry string `json:"shipp_country"`
	// Specifies shipping company
	ShippCompany *string `json:"shipp_company,omitempty"`
	// Specifies shipping phone
	ShippPhone *string `json:"shipp_phone,omitempty"`
	// Specifies billing first name
	BillFirstName *string `json:"bill_first_name,omitempty"`
	// Specifies billing last name
	BillLastName *string `json:"bill_last_name,omitempty"`
	// Specifies first billing address
	BillAddress1 *string `json:"bill_address_1,omitempty"`
	// Specifies second billing address
	BillAddress2 *string `json:"bill_address_2,omitempty"`
	// Specifies billing city
	BillCity *string `json:"bill_city,omitempty"`
	// Specifies billing postcode
	BillPostcode *string `json:"bill_postcode,omitempty"`
	// Specifies billing state code
	BillState *string `json:"bill_state,omitempty"`
	// Specifies billing country code
	BillCountry *string `json:"bill_country,omitempty"`
	// Specifies billing company
	BillCompany *string `json:"bill_company,omitempty"`
	// Specifies billing phone
	BillPhone *string `json:"bill_phone,omitempty"`
	// Set this parameter in order to choose which entity fields you want to retrieve
	ResponseFields *string `json:"response_fields,omitempty"`
	OrderItem []OrderCalculateOrderItemInner `json:"order_item"`
}

type _OrderCalculate OrderCalculate

// NewOrderCalculate instantiates a new OrderCalculate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCalculate(customerEmail string, shippFirstName string, shippLastName string, shippAddress1 string, shippCity string, shippPostcode string, shippCountry string, orderItem []OrderCalculateOrderItemInner) *OrderCalculate {
	this := OrderCalculate{}
	this.CustomerEmail = customerEmail
	this.ShippFirstName = shippFirstName
	this.ShippLastName = shippLastName
	this.ShippAddress1 = shippAddress1
	this.ShippCity = shippCity
	this.ShippPostcode = shippPostcode
	this.ShippCountry = shippCountry
	this.OrderItem = orderItem
	return &this
}

// NewOrderCalculateWithDefaults instantiates a new OrderCalculate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCalculateWithDefaults() *OrderCalculate {
	this := OrderCalculate{}
	return &this
}

// GetCustomerEmail returns the CustomerEmail field value
func (o *OrderCalculate) GetCustomerEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetCustomerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerEmail, true
}

// SetCustomerEmail sets field value
func (o *OrderCalculate) SetCustomerEmail(v string) {
	o.CustomerEmail = v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *OrderCalculate) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *OrderCalculate) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *OrderCalculate) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *OrderCalculate) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *OrderCalculate) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *OrderCalculate) SetStoreId(v string) {
	o.StoreId = &v
}

// GetCoupons returns the Coupons field value if set, zero value otherwise.
func (o *OrderCalculate) GetCoupons() []string {
	if o == nil || IsNil(o.Coupons) {
		var ret []string
		return ret
	}
	return o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetCouponsOk() ([]string, bool) {
	if o == nil || IsNil(o.Coupons) {
		return nil, false
	}
	return o.Coupons, true
}

// HasCoupons returns a boolean if a field has been set.
func (o *OrderCalculate) HasCoupons() bool {
	if o != nil && !IsNil(o.Coupons) {
		return true
	}

	return false
}

// SetCoupons gets a reference to the given []string and assigns it to the Coupons field.
func (o *OrderCalculate) SetCoupons(v []string) {
	o.Coupons = v
}

// GetShippFirstName returns the ShippFirstName field value
func (o *OrderCalculate) GetShippFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippFirstName
}

// GetShippFirstNameOk returns a tuple with the ShippFirstName field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippFirstName, true
}

// SetShippFirstName sets field value
func (o *OrderCalculate) SetShippFirstName(v string) {
	o.ShippFirstName = v
}

// GetShippLastName returns the ShippLastName field value
func (o *OrderCalculate) GetShippLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippLastName
}

// GetShippLastNameOk returns a tuple with the ShippLastName field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippLastName, true
}

// SetShippLastName sets field value
func (o *OrderCalculate) SetShippLastName(v string) {
	o.ShippLastName = v
}

// GetShippAddress1 returns the ShippAddress1 field value
func (o *OrderCalculate) GetShippAddress1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippAddress1
}

// GetShippAddress1Ok returns a tuple with the ShippAddress1 field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippAddress1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippAddress1, true
}

// SetShippAddress1 sets field value
func (o *OrderCalculate) SetShippAddress1(v string) {
	o.ShippAddress1 = v
}

// GetShippAddress2 returns the ShippAddress2 field value if set, zero value otherwise.
func (o *OrderCalculate) GetShippAddress2() string {
	if o == nil || IsNil(o.ShippAddress2) {
		var ret string
		return ret
	}
	return *o.ShippAddress2
}

// GetShippAddress2Ok returns a tuple with the ShippAddress2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.ShippAddress2) {
		return nil, false
	}
	return o.ShippAddress2, true
}

// HasShippAddress2 returns a boolean if a field has been set.
func (o *OrderCalculate) HasShippAddress2() bool {
	if o != nil && !IsNil(o.ShippAddress2) {
		return true
	}

	return false
}

// SetShippAddress2 gets a reference to the given string and assigns it to the ShippAddress2 field.
func (o *OrderCalculate) SetShippAddress2(v string) {
	o.ShippAddress2 = &v
}

// GetShippCity returns the ShippCity field value
func (o *OrderCalculate) GetShippCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippCity
}

// GetShippCityOk returns a tuple with the ShippCity field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippCity, true
}

// SetShippCity sets field value
func (o *OrderCalculate) SetShippCity(v string) {
	o.ShippCity = v
}

// GetShippPostcode returns the ShippPostcode field value
func (o *OrderCalculate) GetShippPostcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippPostcode
}

// GetShippPostcodeOk returns a tuple with the ShippPostcode field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippPostcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippPostcode, true
}

// SetShippPostcode sets field value
func (o *OrderCalculate) SetShippPostcode(v string) {
	o.ShippPostcode = v
}

// GetShippState returns the ShippState field value if set, zero value otherwise.
func (o *OrderCalculate) GetShippState() string {
	if o == nil || IsNil(o.ShippState) {
		var ret string
		return ret
	}
	return *o.ShippState
}

// GetShippStateOk returns a tuple with the ShippState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippStateOk() (*string, bool) {
	if o == nil || IsNil(o.ShippState) {
		return nil, false
	}
	return o.ShippState, true
}

// HasShippState returns a boolean if a field has been set.
func (o *OrderCalculate) HasShippState() bool {
	if o != nil && !IsNil(o.ShippState) {
		return true
	}

	return false
}

// SetShippState gets a reference to the given string and assigns it to the ShippState field.
func (o *OrderCalculate) SetShippState(v string) {
	o.ShippState = &v
}

// GetShippCountry returns the ShippCountry field value
func (o *OrderCalculate) GetShippCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippCountry
}

// GetShippCountryOk returns a tuple with the ShippCountry field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippCountry, true
}

// SetShippCountry sets field value
func (o *OrderCalculate) SetShippCountry(v string) {
	o.ShippCountry = v
}

// GetShippCompany returns the ShippCompany field value if set, zero value otherwise.
func (o *OrderCalculate) GetShippCompany() string {
	if o == nil || IsNil(o.ShippCompany) {
		var ret string
		return ret
	}
	return *o.ShippCompany
}

// GetShippCompanyOk returns a tuple with the ShippCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.ShippCompany) {
		return nil, false
	}
	return o.ShippCompany, true
}

// HasShippCompany returns a boolean if a field has been set.
func (o *OrderCalculate) HasShippCompany() bool {
	if o != nil && !IsNil(o.ShippCompany) {
		return true
	}

	return false
}

// SetShippCompany gets a reference to the given string and assigns it to the ShippCompany field.
func (o *OrderCalculate) SetShippCompany(v string) {
	o.ShippCompany = &v
}

// GetShippPhone returns the ShippPhone field value if set, zero value otherwise.
func (o *OrderCalculate) GetShippPhone() string {
	if o == nil || IsNil(o.ShippPhone) {
		var ret string
		return ret
	}
	return *o.ShippPhone
}

// GetShippPhoneOk returns a tuple with the ShippPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetShippPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.ShippPhone) {
		return nil, false
	}
	return o.ShippPhone, true
}

// HasShippPhone returns a boolean if a field has been set.
func (o *OrderCalculate) HasShippPhone() bool {
	if o != nil && !IsNil(o.ShippPhone) {
		return true
	}

	return false
}

// SetShippPhone gets a reference to the given string and assigns it to the ShippPhone field.
func (o *OrderCalculate) SetShippPhone(v string) {
	o.ShippPhone = &v
}

// GetBillFirstName returns the BillFirstName field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillFirstName() string {
	if o == nil || IsNil(o.BillFirstName) {
		var ret string
		return ret
	}
	return *o.BillFirstName
}

// GetBillFirstNameOk returns a tuple with the BillFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.BillFirstName) {
		return nil, false
	}
	return o.BillFirstName, true
}

// HasBillFirstName returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillFirstName() bool {
	if o != nil && !IsNil(o.BillFirstName) {
		return true
	}

	return false
}

// SetBillFirstName gets a reference to the given string and assigns it to the BillFirstName field.
func (o *OrderCalculate) SetBillFirstName(v string) {
	o.BillFirstName = &v
}

// GetBillLastName returns the BillLastName field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillLastName() string {
	if o == nil || IsNil(o.BillLastName) {
		var ret string
		return ret
	}
	return *o.BillLastName
}

// GetBillLastNameOk returns a tuple with the BillLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.BillLastName) {
		return nil, false
	}
	return o.BillLastName, true
}

// HasBillLastName returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillLastName() bool {
	if o != nil && !IsNil(o.BillLastName) {
		return true
	}

	return false
}

// SetBillLastName gets a reference to the given string and assigns it to the BillLastName field.
func (o *OrderCalculate) SetBillLastName(v string) {
	o.BillLastName = &v
}

// GetBillAddress1 returns the BillAddress1 field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillAddress1() string {
	if o == nil || IsNil(o.BillAddress1) {
		var ret string
		return ret
	}
	return *o.BillAddress1
}

// GetBillAddress1Ok returns a tuple with the BillAddress1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.BillAddress1) {
		return nil, false
	}
	return o.BillAddress1, true
}

// HasBillAddress1 returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillAddress1() bool {
	if o != nil && !IsNil(o.BillAddress1) {
		return true
	}

	return false
}

// SetBillAddress1 gets a reference to the given string and assigns it to the BillAddress1 field.
func (o *OrderCalculate) SetBillAddress1(v string) {
	o.BillAddress1 = &v
}

// GetBillAddress2 returns the BillAddress2 field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillAddress2() string {
	if o == nil || IsNil(o.BillAddress2) {
		var ret string
		return ret
	}
	return *o.BillAddress2
}

// GetBillAddress2Ok returns a tuple with the BillAddress2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.BillAddress2) {
		return nil, false
	}
	return o.BillAddress2, true
}

// HasBillAddress2 returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillAddress2() bool {
	if o != nil && !IsNil(o.BillAddress2) {
		return true
	}

	return false
}

// SetBillAddress2 gets a reference to the given string and assigns it to the BillAddress2 field.
func (o *OrderCalculate) SetBillAddress2(v string) {
	o.BillAddress2 = &v
}

// GetBillCity returns the BillCity field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillCity() string {
	if o == nil || IsNil(o.BillCity) {
		var ret string
		return ret
	}
	return *o.BillCity
}

// GetBillCityOk returns a tuple with the BillCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillCityOk() (*string, bool) {
	if o == nil || IsNil(o.BillCity) {
		return nil, false
	}
	return o.BillCity, true
}

// HasBillCity returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillCity() bool {
	if o != nil && !IsNil(o.BillCity) {
		return true
	}

	return false
}

// SetBillCity gets a reference to the given string and assigns it to the BillCity field.
func (o *OrderCalculate) SetBillCity(v string) {
	o.BillCity = &v
}

// GetBillPostcode returns the BillPostcode field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillPostcode() string {
	if o == nil || IsNil(o.BillPostcode) {
		var ret string
		return ret
	}
	return *o.BillPostcode
}

// GetBillPostcodeOk returns a tuple with the BillPostcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillPostcodeOk() (*string, bool) {
	if o == nil || IsNil(o.BillPostcode) {
		return nil, false
	}
	return o.BillPostcode, true
}

// HasBillPostcode returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillPostcode() bool {
	if o != nil && !IsNil(o.BillPostcode) {
		return true
	}

	return false
}

// SetBillPostcode gets a reference to the given string and assigns it to the BillPostcode field.
func (o *OrderCalculate) SetBillPostcode(v string) {
	o.BillPostcode = &v
}

// GetBillState returns the BillState field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillState() string {
	if o == nil || IsNil(o.BillState) {
		var ret string
		return ret
	}
	return *o.BillState
}

// GetBillStateOk returns a tuple with the BillState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillStateOk() (*string, bool) {
	if o == nil || IsNil(o.BillState) {
		return nil, false
	}
	return o.BillState, true
}

// HasBillState returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillState() bool {
	if o != nil && !IsNil(o.BillState) {
		return true
	}

	return false
}

// SetBillState gets a reference to the given string and assigns it to the BillState field.
func (o *OrderCalculate) SetBillState(v string) {
	o.BillState = &v
}

// GetBillCountry returns the BillCountry field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillCountry() string {
	if o == nil || IsNil(o.BillCountry) {
		var ret string
		return ret
	}
	return *o.BillCountry
}

// GetBillCountryOk returns a tuple with the BillCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillCountryOk() (*string, bool) {
	if o == nil || IsNil(o.BillCountry) {
		return nil, false
	}
	return o.BillCountry, true
}

// HasBillCountry returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillCountry() bool {
	if o != nil && !IsNil(o.BillCountry) {
		return true
	}

	return false
}

// SetBillCountry gets a reference to the given string and assigns it to the BillCountry field.
func (o *OrderCalculate) SetBillCountry(v string) {
	o.BillCountry = &v
}

// GetBillCompany returns the BillCompany field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillCompany() string {
	if o == nil || IsNil(o.BillCompany) {
		var ret string
		return ret
	}
	return *o.BillCompany
}

// GetBillCompanyOk returns a tuple with the BillCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.BillCompany) {
		return nil, false
	}
	return o.BillCompany, true
}

// HasBillCompany returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillCompany() bool {
	if o != nil && !IsNil(o.BillCompany) {
		return true
	}

	return false
}

// SetBillCompany gets a reference to the given string and assigns it to the BillCompany field.
func (o *OrderCalculate) SetBillCompany(v string) {
	o.BillCompany = &v
}

// GetBillPhone returns the BillPhone field value if set, zero value otherwise.
func (o *OrderCalculate) GetBillPhone() string {
	if o == nil || IsNil(o.BillPhone) {
		var ret string
		return ret
	}
	return *o.BillPhone
}

// GetBillPhoneOk returns a tuple with the BillPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetBillPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.BillPhone) {
		return nil, false
	}
	return o.BillPhone, true
}

// HasBillPhone returns a boolean if a field has been set.
func (o *OrderCalculate) HasBillPhone() bool {
	if o != nil && !IsNil(o.BillPhone) {
		return true
	}

	return false
}

// SetBillPhone gets a reference to the given string and assigns it to the BillPhone field.
func (o *OrderCalculate) SetBillPhone(v string) {
	o.BillPhone = &v
}

// GetResponseFields returns the ResponseFields field value if set, zero value otherwise.
func (o *OrderCalculate) GetResponseFields() string {
	if o == nil || IsNil(o.ResponseFields) {
		var ret string
		return ret
	}
	return *o.ResponseFields
}

// GetResponseFieldsOk returns a tuple with the ResponseFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetResponseFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseFields) {
		return nil, false
	}
	return o.ResponseFields, true
}

// HasResponseFields returns a boolean if a field has been set.
func (o *OrderCalculate) HasResponseFields() bool {
	if o != nil && !IsNil(o.ResponseFields) {
		return true
	}

	return false
}

// SetResponseFields gets a reference to the given string and assigns it to the ResponseFields field.
func (o *OrderCalculate) SetResponseFields(v string) {
	o.ResponseFields = &v
}

// GetOrderItem returns the OrderItem field value
func (o *OrderCalculate) GetOrderItem() []OrderCalculateOrderItemInner {
	if o == nil {
		var ret []OrderCalculateOrderItemInner
		return ret
	}

	return o.OrderItem
}

// GetOrderItemOk returns a tuple with the OrderItem field value
// and a boolean to check if the value has been set.
func (o *OrderCalculate) GetOrderItemOk() ([]OrderCalculateOrderItemInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderItem, true
}

// SetOrderItem sets field value
func (o *OrderCalculate) SetOrderItem(v []OrderCalculateOrderItemInner) {
	o.OrderItem = v
}

func (o OrderCalculate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCalculate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_email"] = o.CustomerEmail
	if !IsNil(o.CurrencyId) {
		toSerialize["currency_id"] = o.CurrencyId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.Coupons) {
		toSerialize["coupons"] = o.Coupons
	}
	toSerialize["shipp_first_name"] = o.ShippFirstName
	toSerialize["shipp_last_name"] = o.ShippLastName
	toSerialize["shipp_address_1"] = o.ShippAddress1
	if !IsNil(o.ShippAddress2) {
		toSerialize["shipp_address_2"] = o.ShippAddress2
	}
	toSerialize["shipp_city"] = o.ShippCity
	toSerialize["shipp_postcode"] = o.ShippPostcode
	if !IsNil(o.ShippState) {
		toSerialize["shipp_state"] = o.ShippState
	}
	toSerialize["shipp_country"] = o.ShippCountry
	if !IsNil(o.ShippCompany) {
		toSerialize["shipp_company"] = o.ShippCompany
	}
	if !IsNil(o.ShippPhone) {
		toSerialize["shipp_phone"] = o.ShippPhone
	}
	if !IsNil(o.BillFirstName) {
		toSerialize["bill_first_name"] = o.BillFirstName
	}
	if !IsNil(o.BillLastName) {
		toSerialize["bill_last_name"] = o.BillLastName
	}
	if !IsNil(o.BillAddress1) {
		toSerialize["bill_address_1"] = o.BillAddress1
	}
	if !IsNil(o.BillAddress2) {
		toSerialize["bill_address_2"] = o.BillAddress2
	}
	if !IsNil(o.BillCity) {
		toSerialize["bill_city"] = o.BillCity
	}
	if !IsNil(o.BillPostcode) {
		toSerialize["bill_postcode"] = o.BillPostcode
	}
	if !IsNil(o.BillState) {
		toSerialize["bill_state"] = o.BillState
	}
	if !IsNil(o.BillCountry) {
		toSerialize["bill_country"] = o.BillCountry
	}
	if !IsNil(o.BillCompany) {
		toSerialize["bill_company"] = o.BillCompany
	}
	if !IsNil(o.BillPhone) {
		toSerialize["bill_phone"] = o.BillPhone
	}
	if !IsNil(o.ResponseFields) {
		toSerialize["response_fields"] = o.ResponseFields
	}
	toSerialize["order_item"] = o.OrderItem
	return toSerialize, nil
}

func (o *OrderCalculate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_email",
		"shipp_first_name",
		"shipp_last_name",
		"shipp_address_1",
		"shipp_city",
		"shipp_postcode",
		"shipp_country",
		"order_item",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderCalculate := _OrderCalculate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderCalculate)

	if err != nil {
		return err
	}

	*o = OrderCalculate(varOrderCalculate)

	return err
}

type NullableOrderCalculate struct {
	value *OrderCalculate
	isSet bool
}

func (v NullableOrderCalculate) Get() *OrderCalculate {
	return v.value
}

func (v *NullableOrderCalculate) Set(val *OrderCalculate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCalculate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCalculate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCalculate(val *OrderCalculate) *NullableOrderCalculate {
	return &NullableOrderCalculate{value: val, isSet: true}
}

func (v NullableOrderCalculate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCalculate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


