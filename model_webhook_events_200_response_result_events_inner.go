/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WebhookEvents200ResponseResultEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEvents200ResponseResultEventsInner{}

// WebhookEvents200ResponseResultEventsInner struct for WebhookEvents200ResponseResultEventsInner
type WebhookEvents200ResponseResultEventsInner struct {
	WebhookName *string `json:"webhook_name,omitempty"`
	Entity *string `json:"entity,omitempty"`
	Action *string `json:"action,omitempty"`
}

// NewWebhookEvents200ResponseResultEventsInner instantiates a new WebhookEvents200ResponseResultEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEvents200ResponseResultEventsInner() *WebhookEvents200ResponseResultEventsInner {
	this := WebhookEvents200ResponseResultEventsInner{}
	return &this
}

// NewWebhookEvents200ResponseResultEventsInnerWithDefaults instantiates a new WebhookEvents200ResponseResultEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEvents200ResponseResultEventsInnerWithDefaults() *WebhookEvents200ResponseResultEventsInner {
	this := WebhookEvents200ResponseResultEventsInner{}
	return &this
}

// GetWebhookName returns the WebhookName field value if set, zero value otherwise.
func (o *WebhookEvents200ResponseResultEventsInner) GetWebhookName() string {
	if o == nil || IsNil(o.WebhookName) {
		var ret string
		return ret
	}
	return *o.WebhookName
}

// GetWebhookNameOk returns a tuple with the WebhookName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvents200ResponseResultEventsInner) GetWebhookNameOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookName) {
		return nil, false
	}
	return o.WebhookName, true
}

// HasWebhookName returns a boolean if a field has been set.
func (o *WebhookEvents200ResponseResultEventsInner) HasWebhookName() bool {
	if o != nil && !IsNil(o.WebhookName) {
		return true
	}

	return false
}

// SetWebhookName gets a reference to the given string and assigns it to the WebhookName field.
func (o *WebhookEvents200ResponseResultEventsInner) SetWebhookName(v string) {
	o.WebhookName = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *WebhookEvents200ResponseResultEventsInner) GetEntity() string {
	if o == nil || IsNil(o.Entity) {
		var ret string
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvents200ResponseResultEventsInner) GetEntityOk() (*string, bool) {
	if o == nil || IsNil(o.Entity) {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *WebhookEvents200ResponseResultEventsInner) HasEntity() bool {
	if o != nil && !IsNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given string and assigns it to the Entity field.
func (o *WebhookEvents200ResponseResultEventsInner) SetEntity(v string) {
	o.Entity = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *WebhookEvents200ResponseResultEventsInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvents200ResponseResultEventsInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *WebhookEvents200ResponseResultEventsInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *WebhookEvents200ResponseResultEventsInner) SetAction(v string) {
	o.Action = &v
}

func (o WebhookEvents200ResponseResultEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEvents200ResponseResultEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WebhookName) {
		toSerialize["webhook_name"] = o.WebhookName
	}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	return toSerialize, nil
}

type NullableWebhookEvents200ResponseResultEventsInner struct {
	value *WebhookEvents200ResponseResultEventsInner
	isSet bool
}

func (v NullableWebhookEvents200ResponseResultEventsInner) Get() *WebhookEvents200ResponseResultEventsInner {
	return v.value
}

func (v *NullableWebhookEvents200ResponseResultEventsInner) Set(val *WebhookEvents200ResponseResultEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEvents200ResponseResultEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEvents200ResponseResultEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEvents200ResponseResultEventsInner(val *WebhookEvents200ResponseResultEventsInner) *NullableWebhookEvents200ResponseResultEventsInner {
	return &NullableWebhookEvents200ResponseResultEventsInner{value: val, isSet: true}
}

func (v NullableWebhookEvents200ResponseResultEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEvents200ResponseResultEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


