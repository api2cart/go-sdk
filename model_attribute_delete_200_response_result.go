/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AttributeDelete200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeDelete200ResponseResult{}

// AttributeDelete200ResponseResult struct for AttributeDelete200ResponseResult
type AttributeDelete200ResponseResult struct {
	Deleted *string `json:"deleted,omitempty"`
}

// NewAttributeDelete200ResponseResult instantiates a new AttributeDelete200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeDelete200ResponseResult() *AttributeDelete200ResponseResult {
	this := AttributeDelete200ResponseResult{}
	return &this
}

// NewAttributeDelete200ResponseResultWithDefaults instantiates a new AttributeDelete200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeDelete200ResponseResultWithDefaults() *AttributeDelete200ResponseResult {
	this := AttributeDelete200ResponseResult{}
	return &this
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *AttributeDelete200ResponseResult) GetDeleted() string {
	if o == nil || IsNil(o.Deleted) {
		var ret string
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeDelete200ResponseResult) GetDeletedOk() (*string, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *AttributeDelete200ResponseResult) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given string and assigns it to the Deleted field.
func (o *AttributeDelete200ResponseResult) SetDeleted(v string) {
	o.Deleted = &v
}

func (o AttributeDelete200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeDelete200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	return toSerialize, nil
}

type NullableAttributeDelete200ResponseResult struct {
	value *AttributeDelete200ResponseResult
	isSet bool
}

func (v NullableAttributeDelete200ResponseResult) Get() *AttributeDelete200ResponseResult {
	return v.value
}

func (v *NullableAttributeDelete200ResponseResult) Set(val *AttributeDelete200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeDelete200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeDelete200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeDelete200ResponseResult(val *AttributeDelete200ResponseResult) *NullableAttributeDelete200ResponseResult {
	return &NullableAttributeDelete200ResponseResult{value: val, isSet: true}
}

func (v NullableAttributeDelete200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeDelete200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


