/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Order type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Order{}

// Order struct for Order
type Order struct {
	Id *string `json:"id,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	BasketId NullableString `json:"basket_id,omitempty"`
	ChannelId NullableString `json:"channel_id,omitempty"`
	Customer *BaseCustomer `json:"customer,omitempty"`
	CreateAt *A2CDateTime `json:"create_at,omitempty"`
	Currency NullableCurrency `json:"currency,omitempty"`
	ShippingAddress NullableCustomerAddress `json:"shipping_address,omitempty"`
	BillingAddress NullableCustomerAddress `json:"billing_address,omitempty"`
	PaymentMethod NullableOrderPaymentMethod `json:"payment_method,omitempty"`
	ShippingMethod NullableOrderShippingMethod `json:"shipping_method,omitempty"`
	ShippingMethods []OrderShippingMethod `json:"shipping_methods,omitempty"`
	Status *OrderStatus `json:"status,omitempty"`
	Totals NullableOrderTotals `json:"totals,omitempty"`
	Total NullableOrderTotal `json:"total,omitempty"`
	Discounts []OrderTotalsNewDiscount `json:"discounts,omitempty"`
	OrderProducts []OrderItem `json:"order_products,omitempty"`
	Bundles []OrderItem `json:"bundles,omitempty"`
	ModifiedAt NullableA2CDateTime `json:"modified_at,omitempty"`
	FinishedTime NullableA2CDateTime `json:"finished_time,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	StoreId NullableString `json:"store_id,omitempty"`
	WarehousesIds []string `json:"warehouses_ids,omitempty"`
	Refunds []OrderRefund `json:"refunds,omitempty"`
	GiftMessage NullableString `json:"gift_message,omitempty"`
	OrderDetailsUrl NullableString `json:"order_details_url,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder() *Order {
	this := Order{}
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Order) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Order) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Order) SetId(v string) {
	o.Id = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *Order) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *Order) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *Order) SetOrderId(v string) {
	o.OrderId = &v
}

// GetBasketId returns the BasketId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetBasketId() string {
	if o == nil || IsNil(o.BasketId.Get()) {
		var ret string
		return ret
	}
	return *o.BasketId.Get()
}

// GetBasketIdOk returns a tuple with the BasketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetBasketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BasketId.Get(), o.BasketId.IsSet()
}

// HasBasketId returns a boolean if a field has been set.
func (o *Order) HasBasketId() bool {
	if o != nil && o.BasketId.IsSet() {
		return true
	}

	return false
}

// SetBasketId gets a reference to the given NullableString and assigns it to the BasketId field.
func (o *Order) SetBasketId(v string) {
	o.BasketId.Set(&v)
}
// SetBasketIdNil sets the value for BasketId to be an explicit nil
func (o *Order) SetBasketIdNil() {
	o.BasketId.Set(nil)
}

// UnsetBasketId ensures that no value is present for BasketId, not even an explicit nil
func (o *Order) UnsetBasketId() {
	o.BasketId.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *Order) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *Order) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *Order) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *Order) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *Order) GetCustomer() BaseCustomer {
	if o == nil || IsNil(o.Customer) {
		var ret BaseCustomer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCustomerOk() (*BaseCustomer, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *Order) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given BaseCustomer and assigns it to the Customer field.
func (o *Order) SetCustomer(v BaseCustomer) {
	o.Customer = &v
}

// GetCreateAt returns the CreateAt field value if set, zero value otherwise.
func (o *Order) GetCreateAt() A2CDateTime {
	if o == nil || IsNil(o.CreateAt) {
		var ret A2CDateTime
		return ret
	}
	return *o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCreateAtOk() (*A2CDateTime, bool) {
	if o == nil || IsNil(o.CreateAt) {
		return nil, false
	}
	return o.CreateAt, true
}

// HasCreateAt returns a boolean if a field has been set.
func (o *Order) HasCreateAt() bool {
	if o != nil && !IsNil(o.CreateAt) {
		return true
	}

	return false
}

// SetCreateAt gets a reference to the given A2CDateTime and assigns it to the CreateAt field.
func (o *Order) SetCreateAt(v A2CDateTime) {
	o.CreateAt = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret Currency
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetCurrencyOk() (*Currency, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *Order) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableCurrency and assigns it to the Currency field.
func (o *Order) SetCurrency(v Currency) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *Order) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *Order) UnsetCurrency() {
	o.Currency.Unset()
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetShippingAddress() CustomerAddress {
	if o == nil || IsNil(o.ShippingAddress.Get()) {
		var ret CustomerAddress
		return ret
	}
	return *o.ShippingAddress.Get()
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetShippingAddressOk() (*CustomerAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingAddress.Get(), o.ShippingAddress.IsSet()
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *Order) HasShippingAddress() bool {
	if o != nil && o.ShippingAddress.IsSet() {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given NullableCustomerAddress and assigns it to the ShippingAddress field.
func (o *Order) SetShippingAddress(v CustomerAddress) {
	o.ShippingAddress.Set(&v)
}
// SetShippingAddressNil sets the value for ShippingAddress to be an explicit nil
func (o *Order) SetShippingAddressNil() {
	o.ShippingAddress.Set(nil)
}

// UnsetShippingAddress ensures that no value is present for ShippingAddress, not even an explicit nil
func (o *Order) UnsetShippingAddress() {
	o.ShippingAddress.Unset()
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetBillingAddress() CustomerAddress {
	if o == nil || IsNil(o.BillingAddress.Get()) {
		var ret CustomerAddress
		return ret
	}
	return *o.BillingAddress.Get()
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetBillingAddressOk() (*CustomerAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingAddress.Get(), o.BillingAddress.IsSet()
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *Order) HasBillingAddress() bool {
	if o != nil && o.BillingAddress.IsSet() {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given NullableCustomerAddress and assigns it to the BillingAddress field.
func (o *Order) SetBillingAddress(v CustomerAddress) {
	o.BillingAddress.Set(&v)
}
// SetBillingAddressNil sets the value for BillingAddress to be an explicit nil
func (o *Order) SetBillingAddressNil() {
	o.BillingAddress.Set(nil)
}

// UnsetBillingAddress ensures that no value is present for BillingAddress, not even an explicit nil
func (o *Order) UnsetBillingAddress() {
	o.BillingAddress.Unset()
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetPaymentMethod() OrderPaymentMethod {
	if o == nil || IsNil(o.PaymentMethod.Get()) {
		var ret OrderPaymentMethod
		return ret
	}
	return *o.PaymentMethod.Get()
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetPaymentMethodOk() (*OrderPaymentMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethod.Get(), o.PaymentMethod.IsSet()
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *Order) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given NullableOrderPaymentMethod and assigns it to the PaymentMethod field.
func (o *Order) SetPaymentMethod(v OrderPaymentMethod) {
	o.PaymentMethod.Set(&v)
}
// SetPaymentMethodNil sets the value for PaymentMethod to be an explicit nil
func (o *Order) SetPaymentMethodNil() {
	o.PaymentMethod.Set(nil)
}

// UnsetPaymentMethod ensures that no value is present for PaymentMethod, not even an explicit nil
func (o *Order) UnsetPaymentMethod() {
	o.PaymentMethod.Unset()
}

// GetShippingMethod returns the ShippingMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetShippingMethod() OrderShippingMethod {
	if o == nil || IsNil(o.ShippingMethod.Get()) {
		var ret OrderShippingMethod
		return ret
	}
	return *o.ShippingMethod.Get()
}

// GetShippingMethodOk returns a tuple with the ShippingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetShippingMethodOk() (*OrderShippingMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingMethod.Get(), o.ShippingMethod.IsSet()
}

// HasShippingMethod returns a boolean if a field has been set.
func (o *Order) HasShippingMethod() bool {
	if o != nil && o.ShippingMethod.IsSet() {
		return true
	}

	return false
}

// SetShippingMethod gets a reference to the given NullableOrderShippingMethod and assigns it to the ShippingMethod field.
func (o *Order) SetShippingMethod(v OrderShippingMethod) {
	o.ShippingMethod.Set(&v)
}
// SetShippingMethodNil sets the value for ShippingMethod to be an explicit nil
func (o *Order) SetShippingMethodNil() {
	o.ShippingMethod.Set(nil)
}

// UnsetShippingMethod ensures that no value is present for ShippingMethod, not even an explicit nil
func (o *Order) UnsetShippingMethod() {
	o.ShippingMethod.Unset()
}

// GetShippingMethods returns the ShippingMethods field value if set, zero value otherwise.
func (o *Order) GetShippingMethods() []OrderShippingMethod {
	if o == nil || IsNil(o.ShippingMethods) {
		var ret []OrderShippingMethod
		return ret
	}
	return o.ShippingMethods
}

// GetShippingMethodsOk returns a tuple with the ShippingMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetShippingMethodsOk() ([]OrderShippingMethod, bool) {
	if o == nil || IsNil(o.ShippingMethods) {
		return nil, false
	}
	return o.ShippingMethods, true
}

// HasShippingMethods returns a boolean if a field has been set.
func (o *Order) HasShippingMethods() bool {
	if o != nil && !IsNil(o.ShippingMethods) {
		return true
	}

	return false
}

// SetShippingMethods gets a reference to the given []OrderShippingMethod and assigns it to the ShippingMethods field.
func (o *Order) SetShippingMethods(v []OrderShippingMethod) {
	o.ShippingMethods = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Order) GetStatus() OrderStatus {
	if o == nil || IsNil(o.Status) {
		var ret OrderStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStatusOk() (*OrderStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Order) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OrderStatus and assigns it to the Status field.
func (o *Order) SetStatus(v OrderStatus) {
	o.Status = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetTotals() OrderTotals {
	if o == nil || IsNil(o.Totals.Get()) {
		var ret OrderTotals
		return ret
	}
	return *o.Totals.Get()
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetTotalsOk() (*OrderTotals, bool) {
	if o == nil {
		return nil, false
	}
	return o.Totals.Get(), o.Totals.IsSet()
}

// HasTotals returns a boolean if a field has been set.
func (o *Order) HasTotals() bool {
	if o != nil && o.Totals.IsSet() {
		return true
	}

	return false
}

// SetTotals gets a reference to the given NullableOrderTotals and assigns it to the Totals field.
func (o *Order) SetTotals(v OrderTotals) {
	o.Totals.Set(&v)
}
// SetTotalsNil sets the value for Totals to be an explicit nil
func (o *Order) SetTotalsNil() {
	o.Totals.Set(nil)
}

// UnsetTotals ensures that no value is present for Totals, not even an explicit nil
func (o *Order) UnsetTotals() {
	o.Totals.Unset()
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetTotal() OrderTotal {
	if o == nil || IsNil(o.Total.Get()) {
		var ret OrderTotal
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetTotalOk() (*OrderTotal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *Order) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableOrderTotal and assigns it to the Total field.
func (o *Order) SetTotal(v OrderTotal) {
	o.Total.Set(&v)
}
// SetTotalNil sets the value for Total to be an explicit nil
func (o *Order) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *Order) UnsetTotal() {
	o.Total.Unset()
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *Order) GetDiscounts() []OrderTotalsNewDiscount {
	if o == nil || IsNil(o.Discounts) {
		var ret []OrderTotalsNewDiscount
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetDiscountsOk() ([]OrderTotalsNewDiscount, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *Order) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []OrderTotalsNewDiscount and assigns it to the Discounts field.
func (o *Order) SetDiscounts(v []OrderTotalsNewDiscount) {
	o.Discounts = v
}

// GetOrderProducts returns the OrderProducts field value if set, zero value otherwise.
func (o *Order) GetOrderProducts() []OrderItem {
	if o == nil || IsNil(o.OrderProducts) {
		var ret []OrderItem
		return ret
	}
	return o.OrderProducts
}

// GetOrderProductsOk returns a tuple with the OrderProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderProductsOk() ([]OrderItem, bool) {
	if o == nil || IsNil(o.OrderProducts) {
		return nil, false
	}
	return o.OrderProducts, true
}

// HasOrderProducts returns a boolean if a field has been set.
func (o *Order) HasOrderProducts() bool {
	if o != nil && !IsNil(o.OrderProducts) {
		return true
	}

	return false
}

// SetOrderProducts gets a reference to the given []OrderItem and assigns it to the OrderProducts field.
func (o *Order) SetOrderProducts(v []OrderItem) {
	o.OrderProducts = v
}

// GetBundles returns the Bundles field value if set, zero value otherwise.
func (o *Order) GetBundles() []OrderItem {
	if o == nil || IsNil(o.Bundles) {
		var ret []OrderItem
		return ret
	}
	return o.Bundles
}

// GetBundlesOk returns a tuple with the Bundles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetBundlesOk() ([]OrderItem, bool) {
	if o == nil || IsNil(o.Bundles) {
		return nil, false
	}
	return o.Bundles, true
}

// HasBundles returns a boolean if a field has been set.
func (o *Order) HasBundles() bool {
	if o != nil && !IsNil(o.Bundles) {
		return true
	}

	return false
}

// SetBundles gets a reference to the given []OrderItem and assigns it to the Bundles field.
func (o *Order) SetBundles(v []OrderItem) {
	o.Bundles = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetModifiedAt() A2CDateTime {
	if o == nil || IsNil(o.ModifiedAt.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetModifiedAtOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *Order) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt.IsSet() {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given NullableA2CDateTime and assigns it to the ModifiedAt field.
func (o *Order) SetModifiedAt(v A2CDateTime) {
	o.ModifiedAt.Set(&v)
}
// SetModifiedAtNil sets the value for ModifiedAt to be an explicit nil
func (o *Order) SetModifiedAtNil() {
	o.ModifiedAt.Set(nil)
}

// UnsetModifiedAt ensures that no value is present for ModifiedAt, not even an explicit nil
func (o *Order) UnsetModifiedAt() {
	o.ModifiedAt.Unset()
}

// GetFinishedTime returns the FinishedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetFinishedTime() A2CDateTime {
	if o == nil || IsNil(o.FinishedTime.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.FinishedTime.Get()
}

// GetFinishedTimeOk returns a tuple with the FinishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetFinishedTimeOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedTime.Get(), o.FinishedTime.IsSet()
}

// HasFinishedTime returns a boolean if a field has been set.
func (o *Order) HasFinishedTime() bool {
	if o != nil && o.FinishedTime.IsSet() {
		return true
	}

	return false
}

// SetFinishedTime gets a reference to the given NullableA2CDateTime and assigns it to the FinishedTime field.
func (o *Order) SetFinishedTime(v A2CDateTime) {
	o.FinishedTime.Set(&v)
}
// SetFinishedTimeNil sets the value for FinishedTime to be an explicit nil
func (o *Order) SetFinishedTimeNil() {
	o.FinishedTime.Set(nil)
}

// UnsetFinishedTime ensures that no value is present for FinishedTime, not even an explicit nil
func (o *Order) UnsetFinishedTime() {
	o.FinishedTime.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *Order) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *Order) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *Order) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *Order) UnsetComment() {
	o.Comment.Unset()
}

// GetStoreId returns the StoreId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetStoreId() string {
	if o == nil || IsNil(o.StoreId.Get()) {
		var ret string
		return ret
	}
	return *o.StoreId.Get()
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetStoreIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreId.Get(), o.StoreId.IsSet()
}

// HasStoreId returns a boolean if a field has been set.
func (o *Order) HasStoreId() bool {
	if o != nil && o.StoreId.IsSet() {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given NullableString and assigns it to the StoreId field.
func (o *Order) SetStoreId(v string) {
	o.StoreId.Set(&v)
}
// SetStoreIdNil sets the value for StoreId to be an explicit nil
func (o *Order) SetStoreIdNil() {
	o.StoreId.Set(nil)
}

// UnsetStoreId ensures that no value is present for StoreId, not even an explicit nil
func (o *Order) UnsetStoreId() {
	o.StoreId.Unset()
}

// GetWarehousesIds returns the WarehousesIds field value if set, zero value otherwise.
func (o *Order) GetWarehousesIds() []string {
	if o == nil || IsNil(o.WarehousesIds) {
		var ret []string
		return ret
	}
	return o.WarehousesIds
}

// GetWarehousesIdsOk returns a tuple with the WarehousesIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWarehousesIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.WarehousesIds) {
		return nil, false
	}
	return o.WarehousesIds, true
}

// HasWarehousesIds returns a boolean if a field has been set.
func (o *Order) HasWarehousesIds() bool {
	if o != nil && !IsNil(o.WarehousesIds) {
		return true
	}

	return false
}

// SetWarehousesIds gets a reference to the given []string and assigns it to the WarehousesIds field.
func (o *Order) SetWarehousesIds(v []string) {
	o.WarehousesIds = v
}

// GetRefunds returns the Refunds field value if set, zero value otherwise.
func (o *Order) GetRefunds() []OrderRefund {
	if o == nil || IsNil(o.Refunds) {
		var ret []OrderRefund
		return ret
	}
	return o.Refunds
}

// GetRefundsOk returns a tuple with the Refunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetRefundsOk() ([]OrderRefund, bool) {
	if o == nil || IsNil(o.Refunds) {
		return nil, false
	}
	return o.Refunds, true
}

// HasRefunds returns a boolean if a field has been set.
func (o *Order) HasRefunds() bool {
	if o != nil && !IsNil(o.Refunds) {
		return true
	}

	return false
}

// SetRefunds gets a reference to the given []OrderRefund and assigns it to the Refunds field.
func (o *Order) SetRefunds(v []OrderRefund) {
	o.Refunds = v
}

// GetGiftMessage returns the GiftMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetGiftMessage() string {
	if o == nil || IsNil(o.GiftMessage.Get()) {
		var ret string
		return ret
	}
	return *o.GiftMessage.Get()
}

// GetGiftMessageOk returns a tuple with the GiftMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetGiftMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GiftMessage.Get(), o.GiftMessage.IsSet()
}

// HasGiftMessage returns a boolean if a field has been set.
func (o *Order) HasGiftMessage() bool {
	if o != nil && o.GiftMessage.IsSet() {
		return true
	}

	return false
}

// SetGiftMessage gets a reference to the given NullableString and assigns it to the GiftMessage field.
func (o *Order) SetGiftMessage(v string) {
	o.GiftMessage.Set(&v)
}
// SetGiftMessageNil sets the value for GiftMessage to be an explicit nil
func (o *Order) SetGiftMessageNil() {
	o.GiftMessage.Set(nil)
}

// UnsetGiftMessage ensures that no value is present for GiftMessage, not even an explicit nil
func (o *Order) UnsetGiftMessage() {
	o.GiftMessage.Unset()
}

// GetOrderDetailsUrl returns the OrderDetailsUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetOrderDetailsUrl() string {
	if o == nil || IsNil(o.OrderDetailsUrl.Get()) {
		var ret string
		return ret
	}
	return *o.OrderDetailsUrl.Get()
}

// GetOrderDetailsUrlOk returns a tuple with the OrderDetailsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetOrderDetailsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderDetailsUrl.Get(), o.OrderDetailsUrl.IsSet()
}

// HasOrderDetailsUrl returns a boolean if a field has been set.
func (o *Order) HasOrderDetailsUrl() bool {
	if o != nil && o.OrderDetailsUrl.IsSet() {
		return true
	}

	return false
}

// SetOrderDetailsUrl gets a reference to the given NullableString and assigns it to the OrderDetailsUrl field.
func (o *Order) SetOrderDetailsUrl(v string) {
	o.OrderDetailsUrl.Set(&v)
}
// SetOrderDetailsUrlNil sets the value for OrderDetailsUrl to be an explicit nil
func (o *Order) SetOrderDetailsUrlNil() {
	o.OrderDetailsUrl.Set(nil)
}

// UnsetOrderDetailsUrl ensures that no value is present for OrderDetailsUrl, not even an explicit nil
func (o *Order) UnsetOrderDetailsUrl() {
	o.OrderDetailsUrl.Unset()
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *Order) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *Order) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Order) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Order) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Order) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if o.BasketId.IsSet() {
		toSerialize["basket_id"] = o.BasketId.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channel_id"] = o.ChannelId.Get()
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.CreateAt) {
		toSerialize["create_at"] = o.CreateAt
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.ShippingAddress.IsSet() {
		toSerialize["shipping_address"] = o.ShippingAddress.Get()
	}
	if o.BillingAddress.IsSet() {
		toSerialize["billing_address"] = o.BillingAddress.Get()
	}
	if o.PaymentMethod.IsSet() {
		toSerialize["payment_method"] = o.PaymentMethod.Get()
	}
	if o.ShippingMethod.IsSet() {
		toSerialize["shipping_method"] = o.ShippingMethod.Get()
	}
	if !IsNil(o.ShippingMethods) {
		toSerialize["shipping_methods"] = o.ShippingMethods
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Totals.IsSet() {
		toSerialize["totals"] = o.Totals.Get()
	}
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	if !IsNil(o.OrderProducts) {
		toSerialize["order_products"] = o.OrderProducts
	}
	if !IsNil(o.Bundles) {
		toSerialize["bundles"] = o.Bundles
	}
	if o.ModifiedAt.IsSet() {
		toSerialize["modified_at"] = o.ModifiedAt.Get()
	}
	if o.FinishedTime.IsSet() {
		toSerialize["finished_time"] = o.FinishedTime.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if o.StoreId.IsSet() {
		toSerialize["store_id"] = o.StoreId.Get()
	}
	if !IsNil(o.WarehousesIds) {
		toSerialize["warehouses_ids"] = o.WarehousesIds
	}
	if !IsNil(o.Refunds) {
		toSerialize["refunds"] = o.Refunds
	}
	if o.GiftMessage.IsSet() {
		toSerialize["gift_message"] = o.GiftMessage.Get()
	}
	if o.OrderDetailsUrl.IsSet() {
		toSerialize["order_details_url"] = o.OrderDetailsUrl.Get()
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


