/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductDeleteBatchPayloadInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductDeleteBatchPayloadInner{}

// ProductDeleteBatchPayloadInner struct for ProductDeleteBatchPayloadInner
type ProductDeleteBatchPayloadInner struct {
	Id *string `json:"id,omitempty"`
	StoreId *string `json:"store_id,omitempty"`
}

// NewProductDeleteBatchPayloadInner instantiates a new ProductDeleteBatchPayloadInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductDeleteBatchPayloadInner() *ProductDeleteBatchPayloadInner {
	this := ProductDeleteBatchPayloadInner{}
	return &this
}

// NewProductDeleteBatchPayloadInnerWithDefaults instantiates a new ProductDeleteBatchPayloadInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductDeleteBatchPayloadInnerWithDefaults() *ProductDeleteBatchPayloadInner {
	this := ProductDeleteBatchPayloadInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductDeleteBatchPayloadInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDeleteBatchPayloadInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductDeleteBatchPayloadInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductDeleteBatchPayloadInner) SetId(v string) {
	o.Id = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *ProductDeleteBatchPayloadInner) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductDeleteBatchPayloadInner) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *ProductDeleteBatchPayloadInner) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *ProductDeleteBatchPayloadInner) SetStoreId(v string) {
	o.StoreId = &v
}

func (o ProductDeleteBatchPayloadInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductDeleteBatchPayloadInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	return toSerialize, nil
}

type NullableProductDeleteBatchPayloadInner struct {
	value *ProductDeleteBatchPayloadInner
	isSet bool
}

func (v NullableProductDeleteBatchPayloadInner) Get() *ProductDeleteBatchPayloadInner {
	return v.value
}

func (v *NullableProductDeleteBatchPayloadInner) Set(val *ProductDeleteBatchPayloadInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductDeleteBatchPayloadInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductDeleteBatchPayloadInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductDeleteBatchPayloadInner(val *ProductDeleteBatchPayloadInner) *NullableProductDeleteBatchPayloadInner {
	return &NullableProductDeleteBatchPayloadInner{value: val, isSet: true}
}

func (v NullableProductDeleteBatchPayloadInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductDeleteBatchPayloadInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


