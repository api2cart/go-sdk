/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Brand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Brand{}

// Brand struct for Brand
type Brand struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	CreatedTime NullableString `json:"created_time,omitempty"`
	ModifiedTime NullableString `json:"modified_time,omitempty"`
	FullDescription NullableString `json:"full_description,omitempty"`
	ShortDescription NullableString `json:"short_description,omitempty"`
	StoresIds []string `json:"stores_ids,omitempty"`
	Active *bool `json:"active,omitempty"`
	Url *string `json:"url,omitempty"`
	MetaTitle NullableString `json:"meta_title,omitempty"`
	MetaKeywords NullableString `json:"meta_keywords,omitempty"`
	MetaDescription NullableString `json:"meta_description,omitempty"`
	Images []Image `json:"images,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewBrand instantiates a new Brand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrand() *Brand {
	this := Brand{}
	return &this
}

// NewBrandWithDefaults instantiates a new Brand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandWithDefaults() *Brand {
	this := Brand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Brand) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Brand) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Brand) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Brand) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Brand) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Brand) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Brand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Brand) SetName(v string) {
	o.Name = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedTime.Get()
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetCreatedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTime.Get(), o.CreatedTime.IsSet()
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Brand) HasCreatedTime() bool {
	if o != nil && o.CreatedTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given NullableString and assigns it to the CreatedTime field.
func (o *Brand) SetCreatedTime(v string) {
	o.CreatedTime.Set(&v)
}
// SetCreatedTimeNil sets the value for CreatedTime to be an explicit nil
func (o *Brand) SetCreatedTimeNil() {
	o.CreatedTime.Set(nil)
}

// UnsetCreatedTime ensures that no value is present for CreatedTime, not even an explicit nil
func (o *Brand) UnsetCreatedTime() {
	o.CreatedTime.Unset()
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetModifiedTime() string {
	if o == nil || IsNil(o.ModifiedTime.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedTime.Get()
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetModifiedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedTime.Get(), o.ModifiedTime.IsSet()
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *Brand) HasModifiedTime() bool {
	if o != nil && o.ModifiedTime.IsSet() {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given NullableString and assigns it to the ModifiedTime field.
func (o *Brand) SetModifiedTime(v string) {
	o.ModifiedTime.Set(&v)
}
// SetModifiedTimeNil sets the value for ModifiedTime to be an explicit nil
func (o *Brand) SetModifiedTimeNil() {
	o.ModifiedTime.Set(nil)
}

// UnsetModifiedTime ensures that no value is present for ModifiedTime, not even an explicit nil
func (o *Brand) UnsetModifiedTime() {
	o.ModifiedTime.Unset()
}

// GetFullDescription returns the FullDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetFullDescription() string {
	if o == nil || IsNil(o.FullDescription.Get()) {
		var ret string
		return ret
	}
	return *o.FullDescription.Get()
}

// GetFullDescriptionOk returns a tuple with the FullDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetFullDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullDescription.Get(), o.FullDescription.IsSet()
}

// HasFullDescription returns a boolean if a field has been set.
func (o *Brand) HasFullDescription() bool {
	if o != nil && o.FullDescription.IsSet() {
		return true
	}

	return false
}

// SetFullDescription gets a reference to the given NullableString and assigns it to the FullDescription field.
func (o *Brand) SetFullDescription(v string) {
	o.FullDescription.Set(&v)
}
// SetFullDescriptionNil sets the value for FullDescription to be an explicit nil
func (o *Brand) SetFullDescriptionNil() {
	o.FullDescription.Set(nil)
}

// UnsetFullDescription ensures that no value is present for FullDescription, not even an explicit nil
func (o *Brand) UnsetFullDescription() {
	o.FullDescription.Unset()
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ShortDescription.Get()
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetShortDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortDescription.Get(), o.ShortDescription.IsSet()
}

// HasShortDescription returns a boolean if a field has been set.
func (o *Brand) HasShortDescription() bool {
	if o != nil && o.ShortDescription.IsSet() {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given NullableString and assigns it to the ShortDescription field.
func (o *Brand) SetShortDescription(v string) {
	o.ShortDescription.Set(&v)
}
// SetShortDescriptionNil sets the value for ShortDescription to be an explicit nil
func (o *Brand) SetShortDescriptionNil() {
	o.ShortDescription.Set(nil)
}

// UnsetShortDescription ensures that no value is present for ShortDescription, not even an explicit nil
func (o *Brand) UnsetShortDescription() {
	o.ShortDescription.Unset()
}

// GetStoresIds returns the StoresIds field value if set, zero value otherwise.
func (o *Brand) GetStoresIds() []string {
	if o == nil || IsNil(o.StoresIds) {
		var ret []string
		return ret
	}
	return o.StoresIds
}

// GetStoresIdsOk returns a tuple with the StoresIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Brand) GetStoresIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.StoresIds) {
		return nil, false
	}
	return o.StoresIds, true
}

// HasStoresIds returns a boolean if a field has been set.
func (o *Brand) HasStoresIds() bool {
	if o != nil && !IsNil(o.StoresIds) {
		return true
	}

	return false
}

// SetStoresIds gets a reference to the given []string and assigns it to the StoresIds field.
func (o *Brand) SetStoresIds(v []string) {
	o.StoresIds = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Brand) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Brand) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Brand) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Brand) SetActive(v bool) {
	o.Active = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Brand) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Brand) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Brand) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Brand) SetUrl(v string) {
	o.Url = &v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle.Get()) {
		var ret string
		return ret
	}
	return *o.MetaTitle.Get()
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetMetaTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaTitle.Get(), o.MetaTitle.IsSet()
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *Brand) HasMetaTitle() bool {
	if o != nil && o.MetaTitle.IsSet() {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given NullableString and assigns it to the MetaTitle field.
func (o *Brand) SetMetaTitle(v string) {
	o.MetaTitle.Set(&v)
}
// SetMetaTitleNil sets the value for MetaTitle to be an explicit nil
func (o *Brand) SetMetaTitleNil() {
	o.MetaTitle.Set(nil)
}

// UnsetMetaTitle ensures that no value is present for MetaTitle, not even an explicit nil
func (o *Brand) UnsetMetaTitle() {
	o.MetaTitle.Unset()
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetMetaKeywords() string {
	if o == nil || IsNil(o.MetaKeywords.Get()) {
		var ret string
		return ret
	}
	return *o.MetaKeywords.Get()
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetMetaKeywordsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaKeywords.Get(), o.MetaKeywords.IsSet()
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *Brand) HasMetaKeywords() bool {
	if o != nil && o.MetaKeywords.IsSet() {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given NullableString and assigns it to the MetaKeywords field.
func (o *Brand) SetMetaKeywords(v string) {
	o.MetaKeywords.Set(&v)
}
// SetMetaKeywordsNil sets the value for MetaKeywords to be an explicit nil
func (o *Brand) SetMetaKeywordsNil() {
	o.MetaKeywords.Set(nil)
}

// UnsetMetaKeywords ensures that no value is present for MetaKeywords, not even an explicit nil
func (o *Brand) UnsetMetaKeywords() {
	o.MetaKeywords.Unset()
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetaDescription.Get()
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaDescription.Get(), o.MetaDescription.IsSet()
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *Brand) HasMetaDescription() bool {
	if o != nil && o.MetaDescription.IsSet() {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given NullableString and assigns it to the MetaDescription field.
func (o *Brand) SetMetaDescription(v string) {
	o.MetaDescription.Set(&v)
}
// SetMetaDescriptionNil sets the value for MetaDescription to be an explicit nil
func (o *Brand) SetMetaDescriptionNil() {
	o.MetaDescription.Set(nil)
}

// UnsetMetaDescription ensures that no value is present for MetaDescription, not even an explicit nil
func (o *Brand) UnsetMetaDescription() {
	o.MetaDescription.Unset()
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *Brand) GetImages() []Image {
	if o == nil || IsNil(o.Images) {
		var ret []Image
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Brand) GetImagesOk() ([]Image, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *Brand) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []Image and assigns it to the Images field.
func (o *Brand) SetImages(v []Image) {
	o.Images = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *Brand) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *Brand) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Brand) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Brand) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Brand) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Brand) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o Brand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Brand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.CreatedTime.IsSet() {
		toSerialize["created_time"] = o.CreatedTime.Get()
	}
	if o.ModifiedTime.IsSet() {
		toSerialize["modified_time"] = o.ModifiedTime.Get()
	}
	if o.FullDescription.IsSet() {
		toSerialize["full_description"] = o.FullDescription.Get()
	}
	if o.ShortDescription.IsSet() {
		toSerialize["short_description"] = o.ShortDescription.Get()
	}
	if !IsNil(o.StoresIds) {
		toSerialize["stores_ids"] = o.StoresIds
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if o.MetaTitle.IsSet() {
		toSerialize["meta_title"] = o.MetaTitle.Get()
	}
	if o.MetaKeywords.IsSet() {
		toSerialize["meta_keywords"] = o.MetaKeywords.Get()
	}
	if o.MetaDescription.IsSet() {
		toSerialize["meta_description"] = o.MetaDescription.Get()
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableBrand struct {
	value *Brand
	isSet bool
}

func (v NullableBrand) Get() *Brand {
	return v.value
}

func (v *NullableBrand) Set(val *Brand) {
	v.value = val
	v.isSet = true
}

func (v NullableBrand) IsSet() bool {
	return v.isSet
}

func (v *NullableBrand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrand(val *Brand) *NullableBrand {
	return &NullableBrand{value: val, isSet: true}
}

func (v NullableBrand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


