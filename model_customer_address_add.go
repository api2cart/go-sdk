/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerAddressAdd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerAddressAdd{}

// CustomerAddressAdd struct for CustomerAddressAdd
type CustomerAddressAdd struct {
	// Defines customer id
	CustomerId string `json:"customer_id"`
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Defines customer's address first name
	FirstName *string `json:"first_name,omitempty"`
	// Defines customer's address last name
	LastName *string `json:"last_name,omitempty"`
	// Defines customer's address company
	Company *string `json:"company,omitempty"`
	// Specifies customer's address address1
	Address1 string `json:"address1"`
	// Specifies customer's address address2
	Address2 *string `json:"address2,omitempty"`
	// Specifies customer's address city
	City string `json:"city"`
	// Specifies customer's address ISO code or name of country
	Country string `json:"country"`
	// Specifies customer's address ISO code or name of state
	State *string `json:"state,omitempty"`
	// Specifies customer's address postcode
	Postcode string `json:"postcode"`
	// Specifies the national ID card number of this person, or a unique tax identification number for customer's address
	IdentificationNumber *string `json:"identification_number,omitempty"`
	// Specifies customer's address types
	Types []string `json:"types,omitempty"`
	// Specifies whether the customer's address is used by default
	Default *bool `json:"default,omitempty"`
	// Defines customer's address phone number
	Phone *string `json:"phone,omitempty"`
	// Defines customer's address mobile phone number
	PhoneMobile *string `json:"phone_mobile,omitempty"`
	// Defines customer's address fax
	Fax *string `json:"fax,omitempty"`
	// Defines Link to customer's address website
	Website *string `json:"website,omitempty"`
	// Defines customer's address gender
	Gender *string `json:"gender,omitempty"`
	// Add Tax Id
	TaxId *string `json:"tax_id,omitempty"`
	// Specifies customer's alias in the address book
	Alias *string `json:"alias,omitempty"`
}

type _CustomerAddressAdd CustomerAddressAdd

// NewCustomerAddressAdd instantiates a new CustomerAddressAdd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerAddressAdd(customerId string, address1 string, city string, country string, postcode string) *CustomerAddressAdd {
	this := CustomerAddressAdd{}
	this.CustomerId = customerId
	this.Address1 = address1
	this.City = city
	this.Country = country
	this.Postcode = postcode
	return &this
}

// NewCustomerAddressAddWithDefaults instantiates a new CustomerAddressAdd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerAddressAddWithDefaults() *CustomerAddressAdd {
	this := CustomerAddressAdd{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *CustomerAddressAdd) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *CustomerAddressAdd) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *CustomerAddressAdd) SetStoreId(v string) {
	o.StoreId = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CustomerAddressAdd) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *CustomerAddressAdd) SetLastName(v string) {
	o.LastName = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *CustomerAddressAdd) SetCompany(v string) {
	o.Company = &v
}

// GetAddress1 returns the Address1 field value
func (o *CustomerAddressAdd) GetAddress1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetAddress1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address1, true
}

// SetAddress1 sets field value
func (o *CustomerAddressAdd) SetAddress1(v string) {
	o.Address1 = v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *CustomerAddressAdd) SetAddress2(v string) {
	o.Address2 = &v
}

// GetCity returns the City field value
func (o *CustomerAddressAdd) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *CustomerAddressAdd) SetCity(v string) {
	o.City = v
}

// GetCountry returns the Country field value
func (o *CustomerAddressAdd) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CustomerAddressAdd) SetCountry(v string) {
	o.Country = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CustomerAddressAdd) SetState(v string) {
	o.State = &v
}

// GetPostcode returns the Postcode field value
func (o *CustomerAddressAdd) GetPostcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetPostcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Postcode, true
}

// SetPostcode sets field value
func (o *CustomerAddressAdd) SetPostcode(v string) {
	o.Postcode = v
}

// GetIdentificationNumber returns the IdentificationNumber field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetIdentificationNumber() string {
	if o == nil || IsNil(o.IdentificationNumber) {
		var ret string
		return ret
	}
	return *o.IdentificationNumber
}

// GetIdentificationNumberOk returns a tuple with the IdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetIdentificationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IdentificationNumber) {
		return nil, false
	}
	return o.IdentificationNumber, true
}

// HasIdentificationNumber returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasIdentificationNumber() bool {
	if o != nil && !IsNil(o.IdentificationNumber) {
		return true
	}

	return false
}

// SetIdentificationNumber gets a reference to the given string and assigns it to the IdentificationNumber field.
func (o *CustomerAddressAdd) SetIdentificationNumber(v string) {
	o.IdentificationNumber = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetTypes() []string {
	if o == nil || IsNil(o.Types) {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *CustomerAddressAdd) SetTypes(v []string) {
	o.Types = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *CustomerAddressAdd) SetDefault(v bool) {
	o.Default = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CustomerAddressAdd) SetPhone(v string) {
	o.Phone = &v
}

// GetPhoneMobile returns the PhoneMobile field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetPhoneMobile() string {
	if o == nil || IsNil(o.PhoneMobile) {
		var ret string
		return ret
	}
	return *o.PhoneMobile
}

// GetPhoneMobileOk returns a tuple with the PhoneMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetPhoneMobileOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneMobile) {
		return nil, false
	}
	return o.PhoneMobile, true
}

// HasPhoneMobile returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasPhoneMobile() bool {
	if o != nil && !IsNil(o.PhoneMobile) {
		return true
	}

	return false
}

// SetPhoneMobile gets a reference to the given string and assigns it to the PhoneMobile field.
func (o *CustomerAddressAdd) SetPhoneMobile(v string) {
	o.PhoneMobile = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *CustomerAddressAdd) SetFax(v string) {
	o.Fax = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CustomerAddressAdd) SetWebsite(v string) {
	o.Website = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *CustomerAddressAdd) SetGender(v string) {
	o.Gender = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetTaxId() string {
	if o == nil || IsNil(o.TaxId) {
		var ret string
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetTaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxId) {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasTaxId() bool {
	if o != nil && !IsNil(o.TaxId) {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given string and assigns it to the TaxId field.
func (o *CustomerAddressAdd) SetTaxId(v string) {
	o.TaxId = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *CustomerAddressAdd) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressAdd) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *CustomerAddressAdd) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *CustomerAddressAdd) SetAlias(v string) {
	o.Alias = &v
}

func (o CustomerAddressAdd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerAddressAdd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerId
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	toSerialize["address1"] = o.Address1
	if !IsNil(o.Address2) {
		toSerialize["address2"] = o.Address2
	}
	toSerialize["city"] = o.City
	toSerialize["country"] = o.Country
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	toSerialize["postcode"] = o.Postcode
	if !IsNil(o.IdentificationNumber) {
		toSerialize["identification_number"] = o.IdentificationNumber
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PhoneMobile) {
		toSerialize["phone_mobile"] = o.PhoneMobile
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.TaxId) {
		toSerialize["tax_id"] = o.TaxId
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	return toSerialize, nil
}

func (o *CustomerAddressAdd) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
		"address1",
		"city",
		"country",
		"postcode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerAddressAdd := _CustomerAddressAdd{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerAddressAdd)

	if err != nil {
		return err
	}

	*o = CustomerAddressAdd(varCustomerAddressAdd)

	return err
}

type NullableCustomerAddressAdd struct {
	value *CustomerAddressAdd
	isSet bool
}

func (v NullableCustomerAddressAdd) Get() *CustomerAddressAdd {
	return v.value
}

func (v *NullableCustomerAddressAdd) Set(val *CustomerAddressAdd) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerAddressAdd) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerAddressAdd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerAddressAdd(val *CustomerAddressAdd) *NullableCustomerAddressAdd {
	return &NullableCustomerAddressAdd{value: val, isSet: true}
}

func (v NullableCustomerAddressAdd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerAddressAdd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


