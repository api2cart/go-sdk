/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseCartGiftcardListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCartGiftcardListResult{}

// ResponseCartGiftcardListResult struct for ResponseCartGiftcardListResult
type ResponseCartGiftcardListResult struct {
	GiftCard []GiftCard `json:"gift_card,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewResponseCartGiftcardListResult instantiates a new ResponseCartGiftcardListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCartGiftcardListResult() *ResponseCartGiftcardListResult {
	this := ResponseCartGiftcardListResult{}
	return &this
}

// NewResponseCartGiftcardListResultWithDefaults instantiates a new ResponseCartGiftcardListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCartGiftcardListResultWithDefaults() *ResponseCartGiftcardListResult {
	this := ResponseCartGiftcardListResult{}
	return &this
}

// GetGiftCard returns the GiftCard field value if set, zero value otherwise.
func (o *ResponseCartGiftcardListResult) GetGiftCard() []GiftCard {
	if o == nil || IsNil(o.GiftCard) {
		var ret []GiftCard
		return ret
	}
	return o.GiftCard
}

// GetGiftCardOk returns a tuple with the GiftCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCartGiftcardListResult) GetGiftCardOk() ([]GiftCard, bool) {
	if o == nil || IsNil(o.GiftCard) {
		return nil, false
	}
	return o.GiftCard, true
}

// HasGiftCard returns a boolean if a field has been set.
func (o *ResponseCartGiftcardListResult) HasGiftCard() bool {
	if o != nil && !IsNil(o.GiftCard) {
		return true
	}

	return false
}

// SetGiftCard gets a reference to the given []GiftCard and assigns it to the GiftCard field.
func (o *ResponseCartGiftcardListResult) SetGiftCard(v []GiftCard) {
	o.GiftCard = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *ResponseCartGiftcardListResult) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCartGiftcardListResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ResponseCartGiftcardListResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ResponseCartGiftcardListResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *ResponseCartGiftcardListResult) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCartGiftcardListResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ResponseCartGiftcardListResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ResponseCartGiftcardListResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ResponseCartGiftcardListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCartGiftcardListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GiftCard) {
		toSerialize["gift_card"] = o.GiftCard
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableResponseCartGiftcardListResult struct {
	value *ResponseCartGiftcardListResult
	isSet bool
}

func (v NullableResponseCartGiftcardListResult) Get() *ResponseCartGiftcardListResult {
	return v.value
}

func (v *NullableResponseCartGiftcardListResult) Set(val *ResponseCartGiftcardListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCartGiftcardListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCartGiftcardListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCartGiftcardListResult(val *ResponseCartGiftcardListResult) *NullableResponseCartGiftcardListResult {
	return &NullableResponseCartGiftcardListResult{value: val, isSet: true}
}

func (v NullableResponseCartGiftcardListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCartGiftcardListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


