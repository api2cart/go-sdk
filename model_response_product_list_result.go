/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseProductListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseProductListResult{}

// ResponseProductListResult struct for ResponseProductListResult
type ResponseProductListResult struct {
	ProductsCount NullableInt32 `json:"products_count,omitempty"`
	Product []Product `json:"product,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewResponseProductListResult instantiates a new ResponseProductListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseProductListResult() *ResponseProductListResult {
	this := ResponseProductListResult{}
	return &this
}

// NewResponseProductListResultWithDefaults instantiates a new ResponseProductListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseProductListResultWithDefaults() *ResponseProductListResult {
	this := ResponseProductListResult{}
	return &this
}

// GetProductsCount returns the ProductsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProductListResult) GetProductsCount() int32 {
	if o == nil || IsNil(o.ProductsCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductsCount.Get()
}

// GetProductsCountOk returns a tuple with the ProductsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProductListResult) GetProductsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductsCount.Get(), o.ProductsCount.IsSet()
}

// HasProductsCount returns a boolean if a field has been set.
func (o *ResponseProductListResult) HasProductsCount() bool {
	if o != nil && o.ProductsCount.IsSet() {
		return true
	}

	return false
}

// SetProductsCount gets a reference to the given NullableInt32 and assigns it to the ProductsCount field.
func (o *ResponseProductListResult) SetProductsCount(v int32) {
	o.ProductsCount.Set(&v)
}
// SetProductsCountNil sets the value for ProductsCount to be an explicit nil
func (o *ResponseProductListResult) SetProductsCountNil() {
	o.ProductsCount.Set(nil)
}

// UnsetProductsCount ensures that no value is present for ProductsCount, not even an explicit nil
func (o *ResponseProductListResult) UnsetProductsCount() {
	o.ProductsCount.Unset()
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ResponseProductListResult) GetProduct() []Product {
	if o == nil || IsNil(o.Product) {
		var ret []Product
		return ret
	}
	return o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProductListResult) GetProductOk() ([]Product, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ResponseProductListResult) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given []Product and assigns it to the Product field.
func (o *ResponseProductListResult) SetProduct(v []Product) {
	o.Product = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProductListResult) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProductListResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ResponseProductListResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ResponseProductListResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProductListResult) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProductListResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ResponseProductListResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ResponseProductListResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ResponseProductListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseProductListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductsCount.IsSet() {
		toSerialize["products_count"] = o.ProductsCount.Get()
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableResponseProductListResult struct {
	value *ResponseProductListResult
	isSet bool
}

func (v NullableResponseProductListResult) Get() *ResponseProductListResult {
	return v.value
}

func (v *NullableResponseProductListResult) Set(val *ResponseProductListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseProductListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseProductListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseProductListResult(val *ResponseProductListResult) *NullableResponseProductListResult {
	return &NullableResponseProductListResult{value: val, isSet: true}
}

func (v NullableResponseProductListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseProductListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


