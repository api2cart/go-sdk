/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseProductChildItemListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseProductChildItemListResult{}

// ResponseProductChildItemListResult struct for ResponseProductChildItemListResult
type ResponseProductChildItemListResult struct {
	TotalCount NullableInt32 `json:"total_count,omitempty"`
	Children []Child `json:"children,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewResponseProductChildItemListResult instantiates a new ResponseProductChildItemListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseProductChildItemListResult() *ResponseProductChildItemListResult {
	this := ResponseProductChildItemListResult{}
	return &this
}

// NewResponseProductChildItemListResultWithDefaults instantiates a new ResponseProductChildItemListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseProductChildItemListResultWithDefaults() *ResponseProductChildItemListResult {
	this := ResponseProductChildItemListResult{}
	return &this
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProductChildItemListResult) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalCount.Get()
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProductChildItemListResult) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCount.Get(), o.TotalCount.IsSet()
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ResponseProductChildItemListResult) HasTotalCount() bool {
	if o != nil && o.TotalCount.IsSet() {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given NullableInt32 and assigns it to the TotalCount field.
func (o *ResponseProductChildItemListResult) SetTotalCount(v int32) {
	o.TotalCount.Set(&v)
}
// SetTotalCountNil sets the value for TotalCount to be an explicit nil
func (o *ResponseProductChildItemListResult) SetTotalCountNil() {
	o.TotalCount.Set(nil)
}

// UnsetTotalCount ensures that no value is present for TotalCount, not even an explicit nil
func (o *ResponseProductChildItemListResult) UnsetTotalCount() {
	o.TotalCount.Unset()
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ResponseProductChildItemListResult) GetChildren() []Child {
	if o == nil || IsNil(o.Children) {
		var ret []Child
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProductChildItemListResult) GetChildrenOk() ([]Child, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ResponseProductChildItemListResult) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []Child and assigns it to the Children field.
func (o *ResponseProductChildItemListResult) SetChildren(v []Child) {
	o.Children = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProductChildItemListResult) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProductChildItemListResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ResponseProductChildItemListResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ResponseProductChildItemListResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseProductChildItemListResult) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseProductChildItemListResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ResponseProductChildItemListResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ResponseProductChildItemListResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ResponseProductChildItemListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseProductChildItemListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalCount.IsSet() {
		toSerialize["total_count"] = o.TotalCount.Get()
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableResponseProductChildItemListResult struct {
	value *ResponseProductChildItemListResult
	isSet bool
}

func (v NullableResponseProductChildItemListResult) Get() *ResponseProductChildItemListResult {
	return v.value
}

func (v *NullableResponseProductChildItemListResult) Set(val *ResponseProductChildItemListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseProductChildItemListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseProductChildItemListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseProductChildItemListResult(val *ResponseProductChildItemListResult) *NullableResponseProductChildItemListResult {
	return &NullableResponseProductChildItemListResult{value: val, isSet: true}
}

func (v NullableResponseProductChildItemListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseProductChildItemListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


