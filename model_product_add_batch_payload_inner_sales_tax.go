/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductAddBatchPayloadInnerSalesTax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAddBatchPayloadInnerSalesTax{}

// ProductAddBatchPayloadInnerSalesTax struct for ProductAddBatchPayloadInnerSalesTax
type ProductAddBatchPayloadInnerSalesTax struct {
	TaxPercent *float32 `json:"tax_percent,omitempty"`
	Taxable *bool `json:"taxable,omitempty"`
}

// NewProductAddBatchPayloadInnerSalesTax instantiates a new ProductAddBatchPayloadInnerSalesTax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAddBatchPayloadInnerSalesTax() *ProductAddBatchPayloadInnerSalesTax {
	this := ProductAddBatchPayloadInnerSalesTax{}
	return &this
}

// NewProductAddBatchPayloadInnerSalesTaxWithDefaults instantiates a new ProductAddBatchPayloadInnerSalesTax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAddBatchPayloadInnerSalesTaxWithDefaults() *ProductAddBatchPayloadInnerSalesTax {
	this := ProductAddBatchPayloadInnerSalesTax{}
	return &this
}

// GetTaxPercent returns the TaxPercent field value if set, zero value otherwise.
func (o *ProductAddBatchPayloadInnerSalesTax) GetTaxPercent() float32 {
	if o == nil || IsNil(o.TaxPercent) {
		var ret float32
		return ret
	}
	return *o.TaxPercent
}

// GetTaxPercentOk returns a tuple with the TaxPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerSalesTax) GetTaxPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxPercent) {
		return nil, false
	}
	return o.TaxPercent, true
}

// HasTaxPercent returns a boolean if a field has been set.
func (o *ProductAddBatchPayloadInnerSalesTax) HasTaxPercent() bool {
	if o != nil && !IsNil(o.TaxPercent) {
		return true
	}

	return false
}

// SetTaxPercent gets a reference to the given float32 and assigns it to the TaxPercent field.
func (o *ProductAddBatchPayloadInnerSalesTax) SetTaxPercent(v float32) {
	o.TaxPercent = &v
}

// GetTaxable returns the Taxable field value if set, zero value otherwise.
func (o *ProductAddBatchPayloadInnerSalesTax) GetTaxable() bool {
	if o == nil || IsNil(o.Taxable) {
		var ret bool
		return ret
	}
	return *o.Taxable
}

// GetTaxableOk returns a tuple with the Taxable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerSalesTax) GetTaxableOk() (*bool, bool) {
	if o == nil || IsNil(o.Taxable) {
		return nil, false
	}
	return o.Taxable, true
}

// HasTaxable returns a boolean if a field has been set.
func (o *ProductAddBatchPayloadInnerSalesTax) HasTaxable() bool {
	if o != nil && !IsNil(o.Taxable) {
		return true
	}

	return false
}

// SetTaxable gets a reference to the given bool and assigns it to the Taxable field.
func (o *ProductAddBatchPayloadInnerSalesTax) SetTaxable(v bool) {
	o.Taxable = &v
}

func (o ProductAddBatchPayloadInnerSalesTax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAddBatchPayloadInnerSalesTax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxPercent) {
		toSerialize["tax_percent"] = o.TaxPercent
	}
	if !IsNil(o.Taxable) {
		toSerialize["taxable"] = o.Taxable
	}
	return toSerialize, nil
}

type NullableProductAddBatchPayloadInnerSalesTax struct {
	value *ProductAddBatchPayloadInnerSalesTax
	isSet bool
}

func (v NullableProductAddBatchPayloadInnerSalesTax) Get() *ProductAddBatchPayloadInnerSalesTax {
	return v.value
}

func (v *NullableProductAddBatchPayloadInnerSalesTax) Set(val *ProductAddBatchPayloadInnerSalesTax) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAddBatchPayloadInnerSalesTax) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAddBatchPayloadInnerSalesTax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAddBatchPayloadInnerSalesTax(val *ProductAddBatchPayloadInnerSalesTax) *NullableProductAddBatchPayloadInnerSalesTax {
	return &NullableProductAddBatchPayloadInnerSalesTax{value: val, isSet: true}
}

func (v NullableProductAddBatchPayloadInnerSalesTax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAddBatchPayloadInnerSalesTax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


