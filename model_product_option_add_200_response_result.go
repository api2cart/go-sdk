/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductOptionAdd200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductOptionAdd200ResponseResult{}

// ProductOptionAdd200ResponseResult struct for ProductOptionAdd200ResponseResult
type ProductOptionAdd200ResponseResult struct {
	OptionId NullableString `json:"option_id,omitempty"`
	ProductOptionId *string `json:"product_option_id,omitempty"`
	ProductValueIds NullableString `json:"product_value_ids,omitempty"`
}

// NewProductOptionAdd200ResponseResult instantiates a new ProductOptionAdd200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductOptionAdd200ResponseResult() *ProductOptionAdd200ResponseResult {
	this := ProductOptionAdd200ResponseResult{}
	return &this
}

// NewProductOptionAdd200ResponseResultWithDefaults instantiates a new ProductOptionAdd200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductOptionAdd200ResponseResultWithDefaults() *ProductOptionAdd200ResponseResult {
	this := ProductOptionAdd200ResponseResult{}
	return &this
}

// GetOptionId returns the OptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductOptionAdd200ResponseResult) GetOptionId() string {
	if o == nil || IsNil(o.OptionId.Get()) {
		var ret string
		return ret
	}
	return *o.OptionId.Get()
}

// GetOptionIdOk returns a tuple with the OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductOptionAdd200ResponseResult) GetOptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OptionId.Get(), o.OptionId.IsSet()
}

// HasOptionId returns a boolean if a field has been set.
func (o *ProductOptionAdd200ResponseResult) HasOptionId() bool {
	if o != nil && o.OptionId.IsSet() {
		return true
	}

	return false
}

// SetOptionId gets a reference to the given NullableString and assigns it to the OptionId field.
func (o *ProductOptionAdd200ResponseResult) SetOptionId(v string) {
	o.OptionId.Set(&v)
}
// SetOptionIdNil sets the value for OptionId to be an explicit nil
func (o *ProductOptionAdd200ResponseResult) SetOptionIdNil() {
	o.OptionId.Set(nil)
}

// UnsetOptionId ensures that no value is present for OptionId, not even an explicit nil
func (o *ProductOptionAdd200ResponseResult) UnsetOptionId() {
	o.OptionId.Unset()
}

// GetProductOptionId returns the ProductOptionId field value if set, zero value otherwise.
func (o *ProductOptionAdd200ResponseResult) GetProductOptionId() string {
	if o == nil || IsNil(o.ProductOptionId) {
		var ret string
		return ret
	}
	return *o.ProductOptionId
}

// GetProductOptionIdOk returns a tuple with the ProductOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionAdd200ResponseResult) GetProductOptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductOptionId) {
		return nil, false
	}
	return o.ProductOptionId, true
}

// HasProductOptionId returns a boolean if a field has been set.
func (o *ProductOptionAdd200ResponseResult) HasProductOptionId() bool {
	if o != nil && !IsNil(o.ProductOptionId) {
		return true
	}

	return false
}

// SetProductOptionId gets a reference to the given string and assigns it to the ProductOptionId field.
func (o *ProductOptionAdd200ResponseResult) SetProductOptionId(v string) {
	o.ProductOptionId = &v
}

// GetProductValueIds returns the ProductValueIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductOptionAdd200ResponseResult) GetProductValueIds() string {
	if o == nil || IsNil(o.ProductValueIds.Get()) {
		var ret string
		return ret
	}
	return *o.ProductValueIds.Get()
}

// GetProductValueIdsOk returns a tuple with the ProductValueIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductOptionAdd200ResponseResult) GetProductValueIdsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductValueIds.Get(), o.ProductValueIds.IsSet()
}

// HasProductValueIds returns a boolean if a field has been set.
func (o *ProductOptionAdd200ResponseResult) HasProductValueIds() bool {
	if o != nil && o.ProductValueIds.IsSet() {
		return true
	}

	return false
}

// SetProductValueIds gets a reference to the given NullableString and assigns it to the ProductValueIds field.
func (o *ProductOptionAdd200ResponseResult) SetProductValueIds(v string) {
	o.ProductValueIds.Set(&v)
}
// SetProductValueIdsNil sets the value for ProductValueIds to be an explicit nil
func (o *ProductOptionAdd200ResponseResult) SetProductValueIdsNil() {
	o.ProductValueIds.Set(nil)
}

// UnsetProductValueIds ensures that no value is present for ProductValueIds, not even an explicit nil
func (o *ProductOptionAdd200ResponseResult) UnsetProductValueIds() {
	o.ProductValueIds.Unset()
}

func (o ProductOptionAdd200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductOptionAdd200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OptionId.IsSet() {
		toSerialize["option_id"] = o.OptionId.Get()
	}
	if !IsNil(o.ProductOptionId) {
		toSerialize["product_option_id"] = o.ProductOptionId
	}
	if o.ProductValueIds.IsSet() {
		toSerialize["product_value_ids"] = o.ProductValueIds.Get()
	}
	return toSerialize, nil
}

type NullableProductOptionAdd200ResponseResult struct {
	value *ProductOptionAdd200ResponseResult
	isSet bool
}

func (v NullableProductOptionAdd200ResponseResult) Get() *ProductOptionAdd200ResponseResult {
	return v.value
}

func (v *NullableProductOptionAdd200ResponseResult) Set(val *ProductOptionAdd200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProductOptionAdd200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProductOptionAdd200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductOptionAdd200ResponseResult(val *ProductOptionAdd200ResponseResult) *NullableProductOptionAdd200ResponseResult {
	return &NullableProductOptionAdd200ResponseResult{value: val, isSet: true}
}

func (v NullableProductOptionAdd200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductOptionAdd200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


