/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderReturnUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderReturnUpdate{}

// OrderReturnUpdate struct for OrderReturnUpdate
type OrderReturnUpdate struct {
	// Return ID
	ReturnId string `json:"return_id"`
	// Defines the order id
	OrderId *string `json:"order_id,omitempty"`
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Boolean, whether or not to add the line items back to the store inventory.
	ItemRestock *bool `json:"item_restock,omitempty"`
	// Defines return request status
	ReturnStatusId *string `json:"return_status_id,omitempty"`
	// Specifies staff note
	StaffNote *string `json:"staff_note,omitempty"`
	// Specifies return comment
	Comment *string `json:"comment,omitempty"`
	// Send notifications to customer after order was created
	SendNotifications *bool `json:"send_notifications,omitempty"`
	// Defines return reject reason
	RejectReason *string `json:"reject_reason,omitempty"`
	OrderProducts []OrderReturnUpdateOrderProductsInner `json:"order_products"`
}

type _OrderReturnUpdate OrderReturnUpdate

// NewOrderReturnUpdate instantiates a new OrderReturnUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderReturnUpdate(returnId string, orderProducts []OrderReturnUpdateOrderProductsInner) *OrderReturnUpdate {
	this := OrderReturnUpdate{}
	this.ReturnId = returnId
	var itemRestock bool = false
	this.ItemRestock = &itemRestock
	var sendNotifications bool = false
	this.SendNotifications = &sendNotifications
	this.OrderProducts = orderProducts
	return &this
}

// NewOrderReturnUpdateWithDefaults instantiates a new OrderReturnUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderReturnUpdateWithDefaults() *OrderReturnUpdate {
	this := OrderReturnUpdate{}
	var itemRestock bool = false
	this.ItemRestock = &itemRestock
	var sendNotifications bool = false
	this.SendNotifications = &sendNotifications
	return &this
}

// GetReturnId returns the ReturnId field value
func (o *OrderReturnUpdate) GetReturnId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnId
}

// GetReturnIdOk returns a tuple with the ReturnId field value
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetReturnIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnId, true
}

// SetReturnId sets field value
func (o *OrderReturnUpdate) SetReturnId(v string) {
	o.ReturnId = v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderReturnUpdate) SetOrderId(v string) {
	o.OrderId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *OrderReturnUpdate) SetStoreId(v string) {
	o.StoreId = &v
}

// GetItemRestock returns the ItemRestock field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetItemRestock() bool {
	if o == nil || IsNil(o.ItemRestock) {
		var ret bool
		return ret
	}
	return *o.ItemRestock
}

// GetItemRestockOk returns a tuple with the ItemRestock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetItemRestockOk() (*bool, bool) {
	if o == nil || IsNil(o.ItemRestock) {
		return nil, false
	}
	return o.ItemRestock, true
}

// HasItemRestock returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasItemRestock() bool {
	if o != nil && !IsNil(o.ItemRestock) {
		return true
	}

	return false
}

// SetItemRestock gets a reference to the given bool and assigns it to the ItemRestock field.
func (o *OrderReturnUpdate) SetItemRestock(v bool) {
	o.ItemRestock = &v
}

// GetReturnStatusId returns the ReturnStatusId field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetReturnStatusId() string {
	if o == nil || IsNil(o.ReturnStatusId) {
		var ret string
		return ret
	}
	return *o.ReturnStatusId
}

// GetReturnStatusIdOk returns a tuple with the ReturnStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetReturnStatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnStatusId) {
		return nil, false
	}
	return o.ReturnStatusId, true
}

// HasReturnStatusId returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasReturnStatusId() bool {
	if o != nil && !IsNil(o.ReturnStatusId) {
		return true
	}

	return false
}

// SetReturnStatusId gets a reference to the given string and assigns it to the ReturnStatusId field.
func (o *OrderReturnUpdate) SetReturnStatusId(v string) {
	o.ReturnStatusId = &v
}

// GetStaffNote returns the StaffNote field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetStaffNote() string {
	if o == nil || IsNil(o.StaffNote) {
		var ret string
		return ret
	}
	return *o.StaffNote
}

// GetStaffNoteOk returns a tuple with the StaffNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetStaffNoteOk() (*string, bool) {
	if o == nil || IsNil(o.StaffNote) {
		return nil, false
	}
	return o.StaffNote, true
}

// HasStaffNote returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasStaffNote() bool {
	if o != nil && !IsNil(o.StaffNote) {
		return true
	}

	return false
}

// SetStaffNote gets a reference to the given string and assigns it to the StaffNote field.
func (o *OrderReturnUpdate) SetStaffNote(v string) {
	o.StaffNote = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *OrderReturnUpdate) SetComment(v string) {
	o.Comment = &v
}

// GetSendNotifications returns the SendNotifications field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetSendNotifications() bool {
	if o == nil || IsNil(o.SendNotifications) {
		var ret bool
		return ret
	}
	return *o.SendNotifications
}

// GetSendNotificationsOk returns a tuple with the SendNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetSendNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.SendNotifications) {
		return nil, false
	}
	return o.SendNotifications, true
}

// HasSendNotifications returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasSendNotifications() bool {
	if o != nil && !IsNil(o.SendNotifications) {
		return true
	}

	return false
}

// SetSendNotifications gets a reference to the given bool and assigns it to the SendNotifications field.
func (o *OrderReturnUpdate) SetSendNotifications(v bool) {
	o.SendNotifications = &v
}

// GetRejectReason returns the RejectReason field value if set, zero value otherwise.
func (o *OrderReturnUpdate) GetRejectReason() string {
	if o == nil || IsNil(o.RejectReason) {
		var ret string
		return ret
	}
	return *o.RejectReason
}

// GetRejectReasonOk returns a tuple with the RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetRejectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RejectReason) {
		return nil, false
	}
	return o.RejectReason, true
}

// HasRejectReason returns a boolean if a field has been set.
func (o *OrderReturnUpdate) HasRejectReason() bool {
	if o != nil && !IsNil(o.RejectReason) {
		return true
	}

	return false
}

// SetRejectReason gets a reference to the given string and assigns it to the RejectReason field.
func (o *OrderReturnUpdate) SetRejectReason(v string) {
	o.RejectReason = &v
}

// GetOrderProducts returns the OrderProducts field value
func (o *OrderReturnUpdate) GetOrderProducts() []OrderReturnUpdateOrderProductsInner {
	if o == nil {
		var ret []OrderReturnUpdateOrderProductsInner
		return ret
	}

	return o.OrderProducts
}

// GetOrderProductsOk returns a tuple with the OrderProducts field value
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdate) GetOrderProductsOk() ([]OrderReturnUpdateOrderProductsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderProducts, true
}

// SetOrderProducts sets field value
func (o *OrderReturnUpdate) SetOrderProducts(v []OrderReturnUpdateOrderProductsInner) {
	o.OrderProducts = v
}

func (o OrderReturnUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderReturnUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["return_id"] = o.ReturnId
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.ItemRestock) {
		toSerialize["item_restock"] = o.ItemRestock
	}
	if !IsNil(o.ReturnStatusId) {
		toSerialize["return_status_id"] = o.ReturnStatusId
	}
	if !IsNil(o.StaffNote) {
		toSerialize["staff_note"] = o.StaffNote
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.SendNotifications) {
		toSerialize["send_notifications"] = o.SendNotifications
	}
	if !IsNil(o.RejectReason) {
		toSerialize["reject_reason"] = o.RejectReason
	}
	toSerialize["order_products"] = o.OrderProducts
	return toSerialize, nil
}

func (o *OrderReturnUpdate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"return_id",
		"order_products",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderReturnUpdate := _OrderReturnUpdate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderReturnUpdate)

	if err != nil {
		return err
	}

	*o = OrderReturnUpdate(varOrderReturnUpdate)

	return err
}

type NullableOrderReturnUpdate struct {
	value *OrderReturnUpdate
	isSet bool
}

func (v NullableOrderReturnUpdate) Get() *OrderReturnUpdate {
	return v.value
}

func (v *NullableOrderReturnUpdate) Set(val *OrderReturnUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderReturnUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderReturnUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderReturnUpdate(val *OrderReturnUpdate) *NullableOrderReturnUpdate {
	return &NullableOrderReturnUpdate{value: val, isSet: true}
}

func (v NullableOrderReturnUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderReturnUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


