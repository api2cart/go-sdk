/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StoreAttributeGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoreAttributeGroup{}

// StoreAttributeGroup struct for StoreAttributeGroup
type StoreAttributeGroup struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Position *int32 `json:"position,omitempty"`
	AttributeSetId *string `json:"attribute_set_id,omitempty"`
	AssignedAttributeIds []string `json:"assigned_attribute_ids,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewStoreAttributeGroup instantiates a new StoreAttributeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoreAttributeGroup() *StoreAttributeGroup {
	this := StoreAttributeGroup{}
	return &this
}

// NewStoreAttributeGroupWithDefaults instantiates a new StoreAttributeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoreAttributeGroupWithDefaults() *StoreAttributeGroup {
	this := StoreAttributeGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StoreAttributeGroup) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StoreAttributeGroup) SetName(v string) {
	o.Name = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *StoreAttributeGroup) SetPosition(v int32) {
	o.Position = &v
}

// GetAttributeSetId returns the AttributeSetId field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetAttributeSetId() string {
	if o == nil || IsNil(o.AttributeSetId) {
		var ret string
		return ret
	}
	return *o.AttributeSetId
}

// GetAttributeSetIdOk returns a tuple with the AttributeSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetAttributeSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeSetId) {
		return nil, false
	}
	return o.AttributeSetId, true
}

// HasAttributeSetId returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasAttributeSetId() bool {
	if o != nil && !IsNil(o.AttributeSetId) {
		return true
	}

	return false
}

// SetAttributeSetId gets a reference to the given string and assigns it to the AttributeSetId field.
func (o *StoreAttributeGroup) SetAttributeSetId(v string) {
	o.AttributeSetId = &v
}

// GetAssignedAttributeIds returns the AssignedAttributeIds field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetAssignedAttributeIds() []string {
	if o == nil || IsNil(o.AssignedAttributeIds) {
		var ret []string
		return ret
	}
	return o.AssignedAttributeIds
}

// GetAssignedAttributeIdsOk returns a tuple with the AssignedAttributeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetAssignedAttributeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssignedAttributeIds) {
		return nil, false
	}
	return o.AssignedAttributeIds, true
}

// HasAssignedAttributeIds returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasAssignedAttributeIds() bool {
	if o != nil && !IsNil(o.AssignedAttributeIds) {
		return true
	}

	return false
}

// SetAssignedAttributeIds gets a reference to the given []string and assigns it to the AssignedAttributeIds field.
func (o *StoreAttributeGroup) SetAssignedAttributeIds(v []string) {
	o.AssignedAttributeIds = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *StoreAttributeGroup) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *StoreAttributeGroup) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreAttributeGroup) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *StoreAttributeGroup) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *StoreAttributeGroup) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o StoreAttributeGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoreAttributeGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.AttributeSetId) {
		toSerialize["attribute_set_id"] = o.AttributeSetId
	}
	if !IsNil(o.AssignedAttributeIds) {
		toSerialize["assigned_attribute_ids"] = o.AssignedAttributeIds
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableStoreAttributeGroup struct {
	value *StoreAttributeGroup
	isSet bool
}

func (v NullableStoreAttributeGroup) Get() *StoreAttributeGroup {
	return v.value
}

func (v *NullableStoreAttributeGroup) Set(val *StoreAttributeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableStoreAttributeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableStoreAttributeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoreAttributeGroup(val *StoreAttributeGroup) *NullableStoreAttributeGroup {
	return &NullableStoreAttributeGroup{value: val, isSet: true}
}

func (v NullableStoreAttributeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoreAttributeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


