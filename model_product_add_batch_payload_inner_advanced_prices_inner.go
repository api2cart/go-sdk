/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductAddBatchPayloadInnerAdvancedPricesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAddBatchPayloadInnerAdvancedPricesInner{}

// ProductAddBatchPayloadInnerAdvancedPricesInner struct for ProductAddBatchPayloadInnerAdvancedPricesInner
type ProductAddBatchPayloadInnerAdvancedPricesInner struct {
	Value float32 `json:"value"`
	GroupId *int32 `json:"group_id,omitempty"`
	Quantity float32 `json:"quantity"`
	StartTime *string `json:"start_time,omitempty"`
	ExpireTime *string `json:"expire_time,omitempty"`
}

type _ProductAddBatchPayloadInnerAdvancedPricesInner ProductAddBatchPayloadInnerAdvancedPricesInner

// NewProductAddBatchPayloadInnerAdvancedPricesInner instantiates a new ProductAddBatchPayloadInnerAdvancedPricesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAddBatchPayloadInnerAdvancedPricesInner(value float32, quantity float32) *ProductAddBatchPayloadInnerAdvancedPricesInner {
	this := ProductAddBatchPayloadInnerAdvancedPricesInner{}
	this.Value = value
	this.Quantity = quantity
	return &this
}

// NewProductAddBatchPayloadInnerAdvancedPricesInnerWithDefaults instantiates a new ProductAddBatchPayloadInnerAdvancedPricesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAddBatchPayloadInnerAdvancedPricesInnerWithDefaults() *ProductAddBatchPayloadInnerAdvancedPricesInner {
	this := ProductAddBatchPayloadInnerAdvancedPricesInner{}
	return &this
}

// GetValue returns the Value field value
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) SetValue(v float32) {
	o.Value = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetGroupId() int32 {
	if o == nil || IsNil(o.GroupId) {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetQuantity returns the Quantity field value
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) SetQuantity(v float32) {
	o.Quantity = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) SetStartTime(v string) {
	o.StartTime = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) SetExpireTime(v string) {
	o.ExpireTime = &v
}

func (o ProductAddBatchPayloadInnerAdvancedPricesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAddBatchPayloadInnerAdvancedPricesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expire_time"] = o.ExpireTime
	}
	return toSerialize, nil
}

func (o *ProductAddBatchPayloadInnerAdvancedPricesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"value",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductAddBatchPayloadInnerAdvancedPricesInner := _ProductAddBatchPayloadInnerAdvancedPricesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductAddBatchPayloadInnerAdvancedPricesInner)

	if err != nil {
		return err
	}

	*o = ProductAddBatchPayloadInnerAdvancedPricesInner(varProductAddBatchPayloadInnerAdvancedPricesInner)

	return err
}

type NullableProductAddBatchPayloadInnerAdvancedPricesInner struct {
	value *ProductAddBatchPayloadInnerAdvancedPricesInner
	isSet bool
}

func (v NullableProductAddBatchPayloadInnerAdvancedPricesInner) Get() *ProductAddBatchPayloadInnerAdvancedPricesInner {
	return v.value
}

func (v *NullableProductAddBatchPayloadInnerAdvancedPricesInner) Set(val *ProductAddBatchPayloadInnerAdvancedPricesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAddBatchPayloadInnerAdvancedPricesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAddBatchPayloadInnerAdvancedPricesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAddBatchPayloadInnerAdvancedPricesInner(val *ProductAddBatchPayloadInnerAdvancedPricesInner) *NullableProductAddBatchPayloadInnerAdvancedPricesInner {
	return &NullableProductAddBatchPayloadInnerAdvancedPricesInner{value: val, isSet: true}
}

func (v NullableProductAddBatchPayloadInnerAdvancedPricesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAddBatchPayloadInnerAdvancedPricesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


