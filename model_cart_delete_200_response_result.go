/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartDelete200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartDelete200ResponseResult{}

// CartDelete200ResponseResult struct for CartDelete200ResponseResult
type CartDelete200ResponseResult struct {
	Store *string `json:"store,omitempty"`
}

// NewCartDelete200ResponseResult instantiates a new CartDelete200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartDelete200ResponseResult() *CartDelete200ResponseResult {
	this := CartDelete200ResponseResult{}
	return &this
}

// NewCartDelete200ResponseResultWithDefaults instantiates a new CartDelete200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartDelete200ResponseResultWithDefaults() *CartDelete200ResponseResult {
	this := CartDelete200ResponseResult{}
	return &this
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *CartDelete200ResponseResult) GetStore() string {
	if o == nil || IsNil(o.Store) {
		var ret string
		return ret
	}
	return *o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartDelete200ResponseResult) GetStoreOk() (*string, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// HasStore returns a boolean if a field has been set.
func (o *CartDelete200ResponseResult) HasStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given string and assigns it to the Store field.
func (o *CartDelete200ResponseResult) SetStore(v string) {
	o.Store = &v
}

func (o CartDelete200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartDelete200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	return toSerialize, nil
}

type NullableCartDelete200ResponseResult struct {
	value *CartDelete200ResponseResult
	isSet bool
}

func (v NullableCartDelete200ResponseResult) Get() *CartDelete200ResponseResult {
	return v.value
}

func (v *NullableCartDelete200ResponseResult) Set(val *CartDelete200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCartDelete200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCartDelete200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartDelete200ResponseResult(val *CartDelete200ResponseResult) *NullableCartDelete200ResponseResult {
	return &NullableCartDelete200ResponseResult{value: val, isSet: true}
}

func (v NullableCartDelete200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartDelete200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


