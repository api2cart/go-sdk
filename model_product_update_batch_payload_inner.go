/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductUpdateBatchPayloadInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductUpdateBatchPayloadInner{}

// ProductUpdateBatchPayloadInner struct for ProductUpdateBatchPayloadInner
type ProductUpdateBatchPayloadInner struct {
	Id string `json:"id"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	Sku *string `json:"sku,omitempty"`
	Model *string `json:"model,omitempty"`
	Price *float32 `json:"price,omitempty"`
	SpecialPrice *float32 `json:"special_price,omitempty"`
	SpriceCreate *string `json:"sprice_create,omitempty"`
	SpriceExpire *string `json:"sprice_expire,omitempty"`
	CostPrice *float32 `json:"cost_price,omitempty"`
	OldPrice *float32 `json:"old_price,omitempty"`
	FixedCostShippingPrice *float32 `json:"fixed_cost_shipping_price,omitempty"`
	// If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
	AdvancedPrices []ProductUpdateBatchPayloadInnerAdvancedPricesInner `json:"advanced_prices,omitempty"`
	Quantity *float32 `json:"quantity,omitempty"`
	IncreaseQuantity *float32 `json:"increase_quantity,omitempty"`
	ReduceQuantity *float32 `json:"reduce_quantity,omitempty"`
	ReserveQuantity *float32 `json:"reserve_quantity,omitempty"`
	StoreId *string `json:"store_id,omitempty"`
	LangId *string `json:"lang_id,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	Condition *string `json:"condition,omitempty"`
	ConditionDescription *string `json:"condition_description,omitempty"`
	Visible *string `json:"visible,omitempty"`
	AvailableForView *bool `json:"available_for_view,omitempty"`
	AvailableForSale *bool `json:"available_for_sale,omitempty"`
	AvailFrom *string `json:"avail_from,omitempty"`
	Weight *float32 `json:"weight,omitempty"`
	Length *float32 `json:"length,omitempty"`
	Width *float32 `json:"width,omitempty"`
	Height *float32 `json:"height,omitempty"`
	DimensionsUnit *string `json:"dimensions_unit,omitempty"`
	WeightUnit *string `json:"weight_unit,omitempty"`
	ManageStock *bool `json:"manage_stock,omitempty"`
	InStock *bool `json:"in_stock,omitempty"`
	BackorderStatus *string `json:"backorder_status,omitempty"`
	IsFreeShipping *bool `json:"is_free_shipping,omitempty"`
	IsVirtual *bool `json:"is_virtual,omitempty"`
	Taxable *bool `json:"taxable,omitempty"`
	Downloadable *bool `json:"downloadable,omitempty"`
	WarehouseId *string `json:"warehouse_id,omitempty"`
	TaxClassId *string `json:"tax_class_id,omitempty"`
	CategoriesIds []string `json:"categories_ids,omitempty"`
	MetaTitle *string `json:"meta_title,omitempty"`
	MetaDescription *string `json:"meta_description,omitempty"`
	MetaKeywords []string `json:"meta_keywords,omitempty"`
	Url *string `json:"url,omitempty"`
	SeoUrl *string `json:"seo_url,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	ManufacturerId *string `json:"manufacturer_id,omitempty"`
	Mpn *string `json:"mpn,omitempty"`
	Gtin *string `json:"gtin,omitempty"`
	Upc *string `json:"upc,omitempty"`
	Isbn *string `json:"isbn,omitempty"`
	Ean *string `json:"ean,omitempty"`
	Barcode *string `json:"barcode,omitempty"`
	// Property 'nested_items_update_behaviour' does not apply. Specified items will be added to existing product images
	Images []ProductUpdateBatchPayloadInnerImagesInner `json:"images,omitempty"`
	// If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
	RelatedProductsIds []string `json:"related_products_ids,omitempty"`
	// If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
	UpSellProductsIds []string `json:"up_sell_products_ids,omitempty"`
	// If an empty array is passed, all entries will be deleted when the 'nested_items_update_behaviour' parameter is set to 'replace'.
	CrossSellProductsIds []string `json:"cross_sell_products_ids,omitempty"`
	Tags []string `json:"tags,omitempty"`
	SearchKeywords []string `json:"search_keywords,omitempty"`
	HarmonizedSystemCode *string `json:"harmonized_system_code,omitempty"`
}

type _ProductUpdateBatchPayloadInner ProductUpdateBatchPayloadInner

// NewProductUpdateBatchPayloadInner instantiates a new ProductUpdateBatchPayloadInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductUpdateBatchPayloadInner(id string) *ProductUpdateBatchPayloadInner {
	this := ProductUpdateBatchPayloadInner{}
	this.Id = id
	return &this
}

// NewProductUpdateBatchPayloadInnerWithDefaults instantiates a new ProductUpdateBatchPayloadInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductUpdateBatchPayloadInnerWithDefaults() *ProductUpdateBatchPayloadInner {
	this := ProductUpdateBatchPayloadInner{}
	return &this
}

// GetId returns the Id field value
func (o *ProductUpdateBatchPayloadInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProductUpdateBatchPayloadInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductUpdateBatchPayloadInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProductUpdateBatchPayloadInner) SetDescription(v string) {
	o.Description = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *ProductUpdateBatchPayloadInner) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *ProductUpdateBatchPayloadInner) SetSku(v string) {
	o.Sku = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ProductUpdateBatchPayloadInner) SetModel(v string) {
	o.Model = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ProductUpdateBatchPayloadInner) SetPrice(v float32) {
	o.Price = &v
}

// GetSpecialPrice returns the SpecialPrice field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetSpecialPrice() float32 {
	if o == nil || IsNil(o.SpecialPrice) {
		var ret float32
		return ret
	}
	return *o.SpecialPrice
}

// GetSpecialPriceOk returns a tuple with the SpecialPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetSpecialPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.SpecialPrice) {
		return nil, false
	}
	return o.SpecialPrice, true
}

// HasSpecialPrice returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasSpecialPrice() bool {
	if o != nil && !IsNil(o.SpecialPrice) {
		return true
	}

	return false
}

// SetSpecialPrice gets a reference to the given float32 and assigns it to the SpecialPrice field.
func (o *ProductUpdateBatchPayloadInner) SetSpecialPrice(v float32) {
	o.SpecialPrice = &v
}

// GetSpriceCreate returns the SpriceCreate field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetSpriceCreate() string {
	if o == nil || IsNil(o.SpriceCreate) {
		var ret string
		return ret
	}
	return *o.SpriceCreate
}

// GetSpriceCreateOk returns a tuple with the SpriceCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetSpriceCreateOk() (*string, bool) {
	if o == nil || IsNil(o.SpriceCreate) {
		return nil, false
	}
	return o.SpriceCreate, true
}

// HasSpriceCreate returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasSpriceCreate() bool {
	if o != nil && !IsNil(o.SpriceCreate) {
		return true
	}

	return false
}

// SetSpriceCreate gets a reference to the given string and assigns it to the SpriceCreate field.
func (o *ProductUpdateBatchPayloadInner) SetSpriceCreate(v string) {
	o.SpriceCreate = &v
}

// GetSpriceExpire returns the SpriceExpire field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetSpriceExpire() string {
	if o == nil || IsNil(o.SpriceExpire) {
		var ret string
		return ret
	}
	return *o.SpriceExpire
}

// GetSpriceExpireOk returns a tuple with the SpriceExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetSpriceExpireOk() (*string, bool) {
	if o == nil || IsNil(o.SpriceExpire) {
		return nil, false
	}
	return o.SpriceExpire, true
}

// HasSpriceExpire returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasSpriceExpire() bool {
	if o != nil && !IsNil(o.SpriceExpire) {
		return true
	}

	return false
}

// SetSpriceExpire gets a reference to the given string and assigns it to the SpriceExpire field.
func (o *ProductUpdateBatchPayloadInner) SetSpriceExpire(v string) {
	o.SpriceExpire = &v
}

// GetCostPrice returns the CostPrice field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetCostPrice() float32 {
	if o == nil || IsNil(o.CostPrice) {
		var ret float32
		return ret
	}
	return *o.CostPrice
}

// GetCostPriceOk returns a tuple with the CostPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetCostPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.CostPrice) {
		return nil, false
	}
	return o.CostPrice, true
}

// HasCostPrice returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasCostPrice() bool {
	if o != nil && !IsNil(o.CostPrice) {
		return true
	}

	return false
}

// SetCostPrice gets a reference to the given float32 and assigns it to the CostPrice field.
func (o *ProductUpdateBatchPayloadInner) SetCostPrice(v float32) {
	o.CostPrice = &v
}

// GetOldPrice returns the OldPrice field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetOldPrice() float32 {
	if o == nil || IsNil(o.OldPrice) {
		var ret float32
		return ret
	}
	return *o.OldPrice
}

// GetOldPriceOk returns a tuple with the OldPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetOldPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.OldPrice) {
		return nil, false
	}
	return o.OldPrice, true
}

// HasOldPrice returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasOldPrice() bool {
	if o != nil && !IsNil(o.OldPrice) {
		return true
	}

	return false
}

// SetOldPrice gets a reference to the given float32 and assigns it to the OldPrice field.
func (o *ProductUpdateBatchPayloadInner) SetOldPrice(v float32) {
	o.OldPrice = &v
}

// GetFixedCostShippingPrice returns the FixedCostShippingPrice field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetFixedCostShippingPrice() float32 {
	if o == nil || IsNil(o.FixedCostShippingPrice) {
		var ret float32
		return ret
	}
	return *o.FixedCostShippingPrice
}

// GetFixedCostShippingPriceOk returns a tuple with the FixedCostShippingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetFixedCostShippingPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.FixedCostShippingPrice) {
		return nil, false
	}
	return o.FixedCostShippingPrice, true
}

// HasFixedCostShippingPrice returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasFixedCostShippingPrice() bool {
	if o != nil && !IsNil(o.FixedCostShippingPrice) {
		return true
	}

	return false
}

// SetFixedCostShippingPrice gets a reference to the given float32 and assigns it to the FixedCostShippingPrice field.
func (o *ProductUpdateBatchPayloadInner) SetFixedCostShippingPrice(v float32) {
	o.FixedCostShippingPrice = &v
}

// GetAdvancedPrices returns the AdvancedPrices field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetAdvancedPrices() []ProductUpdateBatchPayloadInnerAdvancedPricesInner {
	if o == nil || IsNil(o.AdvancedPrices) {
		var ret []ProductUpdateBatchPayloadInnerAdvancedPricesInner
		return ret
	}
	return o.AdvancedPrices
}

// GetAdvancedPricesOk returns a tuple with the AdvancedPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetAdvancedPricesOk() ([]ProductUpdateBatchPayloadInnerAdvancedPricesInner, bool) {
	if o == nil || IsNil(o.AdvancedPrices) {
		return nil, false
	}
	return o.AdvancedPrices, true
}

// HasAdvancedPrices returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasAdvancedPrices() bool {
	if o != nil && !IsNil(o.AdvancedPrices) {
		return true
	}

	return false
}

// SetAdvancedPrices gets a reference to the given []ProductUpdateBatchPayloadInnerAdvancedPricesInner and assigns it to the AdvancedPrices field.
func (o *ProductUpdateBatchPayloadInner) SetAdvancedPrices(v []ProductUpdateBatchPayloadInnerAdvancedPricesInner) {
	o.AdvancedPrices = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *ProductUpdateBatchPayloadInner) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetIncreaseQuantity returns the IncreaseQuantity field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetIncreaseQuantity() float32 {
	if o == nil || IsNil(o.IncreaseQuantity) {
		var ret float32
		return ret
	}
	return *o.IncreaseQuantity
}

// GetIncreaseQuantityOk returns a tuple with the IncreaseQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetIncreaseQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.IncreaseQuantity) {
		return nil, false
	}
	return o.IncreaseQuantity, true
}

// HasIncreaseQuantity returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasIncreaseQuantity() bool {
	if o != nil && !IsNil(o.IncreaseQuantity) {
		return true
	}

	return false
}

// SetIncreaseQuantity gets a reference to the given float32 and assigns it to the IncreaseQuantity field.
func (o *ProductUpdateBatchPayloadInner) SetIncreaseQuantity(v float32) {
	o.IncreaseQuantity = &v
}

// GetReduceQuantity returns the ReduceQuantity field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetReduceQuantity() float32 {
	if o == nil || IsNil(o.ReduceQuantity) {
		var ret float32
		return ret
	}
	return *o.ReduceQuantity
}

// GetReduceQuantityOk returns a tuple with the ReduceQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetReduceQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.ReduceQuantity) {
		return nil, false
	}
	return o.ReduceQuantity, true
}

// HasReduceQuantity returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasReduceQuantity() bool {
	if o != nil && !IsNil(o.ReduceQuantity) {
		return true
	}

	return false
}

// SetReduceQuantity gets a reference to the given float32 and assigns it to the ReduceQuantity field.
func (o *ProductUpdateBatchPayloadInner) SetReduceQuantity(v float32) {
	o.ReduceQuantity = &v
}

// GetReserveQuantity returns the ReserveQuantity field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetReserveQuantity() float32 {
	if o == nil || IsNil(o.ReserveQuantity) {
		var ret float32
		return ret
	}
	return *o.ReserveQuantity
}

// GetReserveQuantityOk returns a tuple with the ReserveQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetReserveQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.ReserveQuantity) {
		return nil, false
	}
	return o.ReserveQuantity, true
}

// HasReserveQuantity returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasReserveQuantity() bool {
	if o != nil && !IsNil(o.ReserveQuantity) {
		return true
	}

	return false
}

// SetReserveQuantity gets a reference to the given float32 and assigns it to the ReserveQuantity field.
func (o *ProductUpdateBatchPayloadInner) SetReserveQuantity(v float32) {
	o.ReserveQuantity = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *ProductUpdateBatchPayloadInner) SetStoreId(v string) {
	o.StoreId = &v
}

// GetLangId returns the LangId field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetLangId() string {
	if o == nil || IsNil(o.LangId) {
		var ret string
		return ret
	}
	return *o.LangId
}

// GetLangIdOk returns a tuple with the LangId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetLangIdOk() (*string, bool) {
	if o == nil || IsNil(o.LangId) {
		return nil, false
	}
	return o.LangId, true
}

// HasLangId returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasLangId() bool {
	if o != nil && !IsNil(o.LangId) {
		return true
	}

	return false
}

// SetLangId gets a reference to the given string and assigns it to the LangId field.
func (o *ProductUpdateBatchPayloadInner) SetLangId(v string) {
	o.LangId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProductUpdateBatchPayloadInner) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ProductUpdateBatchPayloadInner) SetType(v string) {
	o.Type = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetCondition() string {
	if o == nil || IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetConditionOk() (*string, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *ProductUpdateBatchPayloadInner) SetCondition(v string) {
	o.Condition = &v
}

// GetConditionDescription returns the ConditionDescription field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetConditionDescription() string {
	if o == nil || IsNil(o.ConditionDescription) {
		var ret string
		return ret
	}
	return *o.ConditionDescription
}

// GetConditionDescriptionOk returns a tuple with the ConditionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetConditionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionDescription) {
		return nil, false
	}
	return o.ConditionDescription, true
}

// HasConditionDescription returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasConditionDescription() bool {
	if o != nil && !IsNil(o.ConditionDescription) {
		return true
	}

	return false
}

// SetConditionDescription gets a reference to the given string and assigns it to the ConditionDescription field.
func (o *ProductUpdateBatchPayloadInner) SetConditionDescription(v string) {
	o.ConditionDescription = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *ProductUpdateBatchPayloadInner) SetVisible(v string) {
	o.Visible = &v
}

// GetAvailableForView returns the AvailableForView field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetAvailableForView() bool {
	if o == nil || IsNil(o.AvailableForView) {
		var ret bool
		return ret
	}
	return *o.AvailableForView
}

// GetAvailableForViewOk returns a tuple with the AvailableForView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetAvailableForViewOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailableForView) {
		return nil, false
	}
	return o.AvailableForView, true
}

// HasAvailableForView returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasAvailableForView() bool {
	if o != nil && !IsNil(o.AvailableForView) {
		return true
	}

	return false
}

// SetAvailableForView gets a reference to the given bool and assigns it to the AvailableForView field.
func (o *ProductUpdateBatchPayloadInner) SetAvailableForView(v bool) {
	o.AvailableForView = &v
}

// GetAvailableForSale returns the AvailableForSale field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetAvailableForSale() bool {
	if o == nil || IsNil(o.AvailableForSale) {
		var ret bool
		return ret
	}
	return *o.AvailableForSale
}

// GetAvailableForSaleOk returns a tuple with the AvailableForSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetAvailableForSaleOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailableForSale) {
		return nil, false
	}
	return o.AvailableForSale, true
}

// HasAvailableForSale returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasAvailableForSale() bool {
	if o != nil && !IsNil(o.AvailableForSale) {
		return true
	}

	return false
}

// SetAvailableForSale gets a reference to the given bool and assigns it to the AvailableForSale field.
func (o *ProductUpdateBatchPayloadInner) SetAvailableForSale(v bool) {
	o.AvailableForSale = &v
}

// GetAvailFrom returns the AvailFrom field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetAvailFrom() string {
	if o == nil || IsNil(o.AvailFrom) {
		var ret string
		return ret
	}
	return *o.AvailFrom
}

// GetAvailFromOk returns a tuple with the AvailFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetAvailFromOk() (*string, bool) {
	if o == nil || IsNil(o.AvailFrom) {
		return nil, false
	}
	return o.AvailFrom, true
}

// HasAvailFrom returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasAvailFrom() bool {
	if o != nil && !IsNil(o.AvailFrom) {
		return true
	}

	return false
}

// SetAvailFrom gets a reference to the given string and assigns it to the AvailFrom field.
func (o *ProductUpdateBatchPayloadInner) SetAvailFrom(v string) {
	o.AvailFrom = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *ProductUpdateBatchPayloadInner) SetWeight(v float32) {
	o.Weight = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetLength() float32 {
	if o == nil || IsNil(o.Length) {
		var ret float32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given float32 and assigns it to the Length field.
func (o *ProductUpdateBatchPayloadInner) SetLength(v float32) {
	o.Length = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetWidth() float32 {
	if o == nil || IsNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetWidthOk() (*float32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *ProductUpdateBatchPayloadInner) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetHeight() float32 {
	if o == nil || IsNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *ProductUpdateBatchPayloadInner) SetHeight(v float32) {
	o.Height = &v
}

// GetDimensionsUnit returns the DimensionsUnit field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetDimensionsUnit() string {
	if o == nil || IsNil(o.DimensionsUnit) {
		var ret string
		return ret
	}
	return *o.DimensionsUnit
}

// GetDimensionsUnitOk returns a tuple with the DimensionsUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetDimensionsUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionsUnit) {
		return nil, false
	}
	return o.DimensionsUnit, true
}

// HasDimensionsUnit returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasDimensionsUnit() bool {
	if o != nil && !IsNil(o.DimensionsUnit) {
		return true
	}

	return false
}

// SetDimensionsUnit gets a reference to the given string and assigns it to the DimensionsUnit field.
func (o *ProductUpdateBatchPayloadInner) SetDimensionsUnit(v string) {
	o.DimensionsUnit = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetWeightUnit() string {
	if o == nil || IsNil(o.WeightUnit) {
		var ret string
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetWeightUnitOk() (*string, bool) {
	if o == nil || IsNil(o.WeightUnit) {
		return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasWeightUnit() bool {
	if o != nil && !IsNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given string and assigns it to the WeightUnit field.
func (o *ProductUpdateBatchPayloadInner) SetWeightUnit(v string) {
	o.WeightUnit = &v
}

// GetManageStock returns the ManageStock field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetManageStock() bool {
	if o == nil || IsNil(o.ManageStock) {
		var ret bool
		return ret
	}
	return *o.ManageStock
}

// GetManageStockOk returns a tuple with the ManageStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetManageStockOk() (*bool, bool) {
	if o == nil || IsNil(o.ManageStock) {
		return nil, false
	}
	return o.ManageStock, true
}

// HasManageStock returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasManageStock() bool {
	if o != nil && !IsNil(o.ManageStock) {
		return true
	}

	return false
}

// SetManageStock gets a reference to the given bool and assigns it to the ManageStock field.
func (o *ProductUpdateBatchPayloadInner) SetManageStock(v bool) {
	o.ManageStock = &v
}

// GetInStock returns the InStock field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetInStock() bool {
	if o == nil || IsNil(o.InStock) {
		var ret bool
		return ret
	}
	return *o.InStock
}

// GetInStockOk returns a tuple with the InStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetInStockOk() (*bool, bool) {
	if o == nil || IsNil(o.InStock) {
		return nil, false
	}
	return o.InStock, true
}

// HasInStock returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasInStock() bool {
	if o != nil && !IsNil(o.InStock) {
		return true
	}

	return false
}

// SetInStock gets a reference to the given bool and assigns it to the InStock field.
func (o *ProductUpdateBatchPayloadInner) SetInStock(v bool) {
	o.InStock = &v
}

// GetBackorderStatus returns the BackorderStatus field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetBackorderStatus() string {
	if o == nil || IsNil(o.BackorderStatus) {
		var ret string
		return ret
	}
	return *o.BackorderStatus
}

// GetBackorderStatusOk returns a tuple with the BackorderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetBackorderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BackorderStatus) {
		return nil, false
	}
	return o.BackorderStatus, true
}

// HasBackorderStatus returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasBackorderStatus() bool {
	if o != nil && !IsNil(o.BackorderStatus) {
		return true
	}

	return false
}

// SetBackorderStatus gets a reference to the given string and assigns it to the BackorderStatus field.
func (o *ProductUpdateBatchPayloadInner) SetBackorderStatus(v string) {
	o.BackorderStatus = &v
}

// GetIsFreeShipping returns the IsFreeShipping field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetIsFreeShipping() bool {
	if o == nil || IsNil(o.IsFreeShipping) {
		var ret bool
		return ret
	}
	return *o.IsFreeShipping
}

// GetIsFreeShippingOk returns a tuple with the IsFreeShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetIsFreeShippingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFreeShipping) {
		return nil, false
	}
	return o.IsFreeShipping, true
}

// HasIsFreeShipping returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasIsFreeShipping() bool {
	if o != nil && !IsNil(o.IsFreeShipping) {
		return true
	}

	return false
}

// SetIsFreeShipping gets a reference to the given bool and assigns it to the IsFreeShipping field.
func (o *ProductUpdateBatchPayloadInner) SetIsFreeShipping(v bool) {
	o.IsFreeShipping = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetIsVirtual() bool {
	if o == nil || IsNil(o.IsVirtual) {
		var ret bool
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetIsVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given bool and assigns it to the IsVirtual field.
func (o *ProductUpdateBatchPayloadInner) SetIsVirtual(v bool) {
	o.IsVirtual = &v
}

// GetTaxable returns the Taxable field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetTaxable() bool {
	if o == nil || IsNil(o.Taxable) {
		var ret bool
		return ret
	}
	return *o.Taxable
}

// GetTaxableOk returns a tuple with the Taxable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetTaxableOk() (*bool, bool) {
	if o == nil || IsNil(o.Taxable) {
		return nil, false
	}
	return o.Taxable, true
}

// HasTaxable returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasTaxable() bool {
	if o != nil && !IsNil(o.Taxable) {
		return true
	}

	return false
}

// SetTaxable gets a reference to the given bool and assigns it to the Taxable field.
func (o *ProductUpdateBatchPayloadInner) SetTaxable(v bool) {
	o.Taxable = &v
}

// GetDownloadable returns the Downloadable field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetDownloadable() bool {
	if o == nil || IsNil(o.Downloadable) {
		var ret bool
		return ret
	}
	return *o.Downloadable
}

// GetDownloadableOk returns a tuple with the Downloadable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetDownloadableOk() (*bool, bool) {
	if o == nil || IsNil(o.Downloadable) {
		return nil, false
	}
	return o.Downloadable, true
}

// HasDownloadable returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasDownloadable() bool {
	if o != nil && !IsNil(o.Downloadable) {
		return true
	}

	return false
}

// SetDownloadable gets a reference to the given bool and assigns it to the Downloadable field.
func (o *ProductUpdateBatchPayloadInner) SetDownloadable(v bool) {
	o.Downloadable = &v
}

// GetWarehouseId returns the WarehouseId field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetWarehouseId() string {
	if o == nil || IsNil(o.WarehouseId) {
		var ret string
		return ret
	}
	return *o.WarehouseId
}

// GetWarehouseIdOk returns a tuple with the WarehouseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetWarehouseIdOk() (*string, bool) {
	if o == nil || IsNil(o.WarehouseId) {
		return nil, false
	}
	return o.WarehouseId, true
}

// HasWarehouseId returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasWarehouseId() bool {
	if o != nil && !IsNil(o.WarehouseId) {
		return true
	}

	return false
}

// SetWarehouseId gets a reference to the given string and assigns it to the WarehouseId field.
func (o *ProductUpdateBatchPayloadInner) SetWarehouseId(v string) {
	o.WarehouseId = &v
}

// GetTaxClassId returns the TaxClassId field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetTaxClassId() string {
	if o == nil || IsNil(o.TaxClassId) {
		var ret string
		return ret
	}
	return *o.TaxClassId
}

// GetTaxClassIdOk returns a tuple with the TaxClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetTaxClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxClassId) {
		return nil, false
	}
	return o.TaxClassId, true
}

// HasTaxClassId returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasTaxClassId() bool {
	if o != nil && !IsNil(o.TaxClassId) {
		return true
	}

	return false
}

// SetTaxClassId gets a reference to the given string and assigns it to the TaxClassId field.
func (o *ProductUpdateBatchPayloadInner) SetTaxClassId(v string) {
	o.TaxClassId = &v
}

// GetCategoriesIds returns the CategoriesIds field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetCategoriesIds() []string {
	if o == nil || IsNil(o.CategoriesIds) {
		var ret []string
		return ret
	}
	return o.CategoriesIds
}

// GetCategoriesIdsOk returns a tuple with the CategoriesIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetCategoriesIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CategoriesIds) {
		return nil, false
	}
	return o.CategoriesIds, true
}

// HasCategoriesIds returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasCategoriesIds() bool {
	if o != nil && !IsNil(o.CategoriesIds) {
		return true
	}

	return false
}

// SetCategoriesIds gets a reference to the given []string and assigns it to the CategoriesIds field.
func (o *ProductUpdateBatchPayloadInner) SetCategoriesIds(v []string) {
	o.CategoriesIds = v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle) {
		var ret string
		return ret
	}
	return *o.MetaTitle
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetMetaTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MetaTitle) {
		return nil, false
	}
	return o.MetaTitle, true
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasMetaTitle() bool {
	if o != nil && !IsNil(o.MetaTitle) {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given string and assigns it to the MetaTitle field.
func (o *ProductUpdateBatchPayloadInner) SetMetaTitle(v string) {
	o.MetaTitle = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription) {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetaDescription) {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasMetaDescription() bool {
	if o != nil && !IsNil(o.MetaDescription) {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *ProductUpdateBatchPayloadInner) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetMetaKeywords() []string {
	if o == nil || IsNil(o.MetaKeywords) {
		var ret []string
		return ret
	}
	return o.MetaKeywords
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetMetaKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.MetaKeywords) {
		return nil, false
	}
	return o.MetaKeywords, true
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasMetaKeywords() bool {
	if o != nil && !IsNil(o.MetaKeywords) {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given []string and assigns it to the MetaKeywords field.
func (o *ProductUpdateBatchPayloadInner) SetMetaKeywords(v []string) {
	o.MetaKeywords = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ProductUpdateBatchPayloadInner) SetUrl(v string) {
	o.Url = &v
}

// GetSeoUrl returns the SeoUrl field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetSeoUrl() string {
	if o == nil || IsNil(o.SeoUrl) {
		var ret string
		return ret
	}
	return *o.SeoUrl
}

// GetSeoUrlOk returns a tuple with the SeoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetSeoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SeoUrl) {
		return nil, false
	}
	return o.SeoUrl, true
}

// HasSeoUrl returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasSeoUrl() bool {
	if o != nil && !IsNil(o.SeoUrl) {
		return true
	}

	return false
}

// SetSeoUrl gets a reference to the given string and assigns it to the SeoUrl field.
func (o *ProductUpdateBatchPayloadInner) SetSeoUrl(v string) {
	o.SeoUrl = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *ProductUpdateBatchPayloadInner) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetManufacturerId returns the ManufacturerId field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetManufacturerId() string {
	if o == nil || IsNil(o.ManufacturerId) {
		var ret string
		return ret
	}
	return *o.ManufacturerId
}

// GetManufacturerIdOk returns a tuple with the ManufacturerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetManufacturerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerId) {
		return nil, false
	}
	return o.ManufacturerId, true
}

// HasManufacturerId returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasManufacturerId() bool {
	if o != nil && !IsNil(o.ManufacturerId) {
		return true
	}

	return false
}

// SetManufacturerId gets a reference to the given string and assigns it to the ManufacturerId field.
func (o *ProductUpdateBatchPayloadInner) SetManufacturerId(v string) {
	o.ManufacturerId = &v
}

// GetMpn returns the Mpn field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetMpn() string {
	if o == nil || IsNil(o.Mpn) {
		var ret string
		return ret
	}
	return *o.Mpn
}

// GetMpnOk returns a tuple with the Mpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetMpnOk() (*string, bool) {
	if o == nil || IsNil(o.Mpn) {
		return nil, false
	}
	return o.Mpn, true
}

// HasMpn returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasMpn() bool {
	if o != nil && !IsNil(o.Mpn) {
		return true
	}

	return false
}

// SetMpn gets a reference to the given string and assigns it to the Mpn field.
func (o *ProductUpdateBatchPayloadInner) SetMpn(v string) {
	o.Mpn = &v
}

// GetGtin returns the Gtin field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetGtin() string {
	if o == nil || IsNil(o.Gtin) {
		var ret string
		return ret
	}
	return *o.Gtin
}

// GetGtinOk returns a tuple with the Gtin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetGtinOk() (*string, bool) {
	if o == nil || IsNil(o.Gtin) {
		return nil, false
	}
	return o.Gtin, true
}

// HasGtin returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasGtin() bool {
	if o != nil && !IsNil(o.Gtin) {
		return true
	}

	return false
}

// SetGtin gets a reference to the given string and assigns it to the Gtin field.
func (o *ProductUpdateBatchPayloadInner) SetGtin(v string) {
	o.Gtin = &v
}

// GetUpc returns the Upc field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetUpc() string {
	if o == nil || IsNil(o.Upc) {
		var ret string
		return ret
	}
	return *o.Upc
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetUpcOk() (*string, bool) {
	if o == nil || IsNil(o.Upc) {
		return nil, false
	}
	return o.Upc, true
}

// HasUpc returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasUpc() bool {
	if o != nil && !IsNil(o.Upc) {
		return true
	}

	return false
}

// SetUpc gets a reference to the given string and assigns it to the Upc field.
func (o *ProductUpdateBatchPayloadInner) SetUpc(v string) {
	o.Upc = &v
}

// GetIsbn returns the Isbn field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetIsbn() string {
	if o == nil || IsNil(o.Isbn) {
		var ret string
		return ret
	}
	return *o.Isbn
}

// GetIsbnOk returns a tuple with the Isbn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetIsbnOk() (*string, bool) {
	if o == nil || IsNil(o.Isbn) {
		return nil, false
	}
	return o.Isbn, true
}

// HasIsbn returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasIsbn() bool {
	if o != nil && !IsNil(o.Isbn) {
		return true
	}

	return false
}

// SetIsbn gets a reference to the given string and assigns it to the Isbn field.
func (o *ProductUpdateBatchPayloadInner) SetIsbn(v string) {
	o.Isbn = &v
}

// GetEan returns the Ean field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetEan() string {
	if o == nil || IsNil(o.Ean) {
		var ret string
		return ret
	}
	return *o.Ean
}

// GetEanOk returns a tuple with the Ean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetEanOk() (*string, bool) {
	if o == nil || IsNil(o.Ean) {
		return nil, false
	}
	return o.Ean, true
}

// HasEan returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasEan() bool {
	if o != nil && !IsNil(o.Ean) {
		return true
	}

	return false
}

// SetEan gets a reference to the given string and assigns it to the Ean field.
func (o *ProductUpdateBatchPayloadInner) SetEan(v string) {
	o.Ean = &v
}

// GetBarcode returns the Barcode field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetBarcode() string {
	if o == nil || IsNil(o.Barcode) {
		var ret string
		return ret
	}
	return *o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetBarcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Barcode) {
		return nil, false
	}
	return o.Barcode, true
}

// HasBarcode returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasBarcode() bool {
	if o != nil && !IsNil(o.Barcode) {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given string and assigns it to the Barcode field.
func (o *ProductUpdateBatchPayloadInner) SetBarcode(v string) {
	o.Barcode = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetImages() []ProductUpdateBatchPayloadInnerImagesInner {
	if o == nil || IsNil(o.Images) {
		var ret []ProductUpdateBatchPayloadInnerImagesInner
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetImagesOk() ([]ProductUpdateBatchPayloadInnerImagesInner, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ProductUpdateBatchPayloadInnerImagesInner and assigns it to the Images field.
func (o *ProductUpdateBatchPayloadInner) SetImages(v []ProductUpdateBatchPayloadInnerImagesInner) {
	o.Images = v
}

// GetRelatedProductsIds returns the RelatedProductsIds field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetRelatedProductsIds() []string {
	if o == nil || IsNil(o.RelatedProductsIds) {
		var ret []string
		return ret
	}
	return o.RelatedProductsIds
}

// GetRelatedProductsIdsOk returns a tuple with the RelatedProductsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetRelatedProductsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RelatedProductsIds) {
		return nil, false
	}
	return o.RelatedProductsIds, true
}

// HasRelatedProductsIds returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasRelatedProductsIds() bool {
	if o != nil && !IsNil(o.RelatedProductsIds) {
		return true
	}

	return false
}

// SetRelatedProductsIds gets a reference to the given []string and assigns it to the RelatedProductsIds field.
func (o *ProductUpdateBatchPayloadInner) SetRelatedProductsIds(v []string) {
	o.RelatedProductsIds = v
}

// GetUpSellProductsIds returns the UpSellProductsIds field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetUpSellProductsIds() []string {
	if o == nil || IsNil(o.UpSellProductsIds) {
		var ret []string
		return ret
	}
	return o.UpSellProductsIds
}

// GetUpSellProductsIdsOk returns a tuple with the UpSellProductsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetUpSellProductsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UpSellProductsIds) {
		return nil, false
	}
	return o.UpSellProductsIds, true
}

// HasUpSellProductsIds returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasUpSellProductsIds() bool {
	if o != nil && !IsNil(o.UpSellProductsIds) {
		return true
	}

	return false
}

// SetUpSellProductsIds gets a reference to the given []string and assigns it to the UpSellProductsIds field.
func (o *ProductUpdateBatchPayloadInner) SetUpSellProductsIds(v []string) {
	o.UpSellProductsIds = v
}

// GetCrossSellProductsIds returns the CrossSellProductsIds field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetCrossSellProductsIds() []string {
	if o == nil || IsNil(o.CrossSellProductsIds) {
		var ret []string
		return ret
	}
	return o.CrossSellProductsIds
}

// GetCrossSellProductsIdsOk returns a tuple with the CrossSellProductsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetCrossSellProductsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CrossSellProductsIds) {
		return nil, false
	}
	return o.CrossSellProductsIds, true
}

// HasCrossSellProductsIds returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasCrossSellProductsIds() bool {
	if o != nil && !IsNil(o.CrossSellProductsIds) {
		return true
	}

	return false
}

// SetCrossSellProductsIds gets a reference to the given []string and assigns it to the CrossSellProductsIds field.
func (o *ProductUpdateBatchPayloadInner) SetCrossSellProductsIds(v []string) {
	o.CrossSellProductsIds = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ProductUpdateBatchPayloadInner) SetTags(v []string) {
	o.Tags = v
}

// GetSearchKeywords returns the SearchKeywords field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetSearchKeywords() []string {
	if o == nil || IsNil(o.SearchKeywords) {
		var ret []string
		return ret
	}
	return o.SearchKeywords
}

// GetSearchKeywordsOk returns a tuple with the SearchKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetSearchKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.SearchKeywords) {
		return nil, false
	}
	return o.SearchKeywords, true
}

// HasSearchKeywords returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasSearchKeywords() bool {
	if o != nil && !IsNil(o.SearchKeywords) {
		return true
	}

	return false
}

// SetSearchKeywords gets a reference to the given []string and assigns it to the SearchKeywords field.
func (o *ProductUpdateBatchPayloadInner) SetSearchKeywords(v []string) {
	o.SearchKeywords = v
}

// GetHarmonizedSystemCode returns the HarmonizedSystemCode field value if set, zero value otherwise.
func (o *ProductUpdateBatchPayloadInner) GetHarmonizedSystemCode() string {
	if o == nil || IsNil(o.HarmonizedSystemCode) {
		var ret string
		return ret
	}
	return *o.HarmonizedSystemCode
}

// GetHarmonizedSystemCodeOk returns a tuple with the HarmonizedSystemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductUpdateBatchPayloadInner) GetHarmonizedSystemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.HarmonizedSystemCode) {
		return nil, false
	}
	return o.HarmonizedSystemCode, true
}

// HasHarmonizedSystemCode returns a boolean if a field has been set.
func (o *ProductUpdateBatchPayloadInner) HasHarmonizedSystemCode() bool {
	if o != nil && !IsNil(o.HarmonizedSystemCode) {
		return true
	}

	return false
}

// SetHarmonizedSystemCode gets a reference to the given string and assigns it to the HarmonizedSystemCode field.
func (o *ProductUpdateBatchPayloadInner) SetHarmonizedSystemCode(v string) {
	o.HarmonizedSystemCode = &v
}

func (o ProductUpdateBatchPayloadInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductUpdateBatchPayloadInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["short_description"] = o.ShortDescription
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.SpecialPrice) {
		toSerialize["special_price"] = o.SpecialPrice
	}
	if !IsNil(o.SpriceCreate) {
		toSerialize["sprice_create"] = o.SpriceCreate
	}
	if !IsNil(o.SpriceExpire) {
		toSerialize["sprice_expire"] = o.SpriceExpire
	}
	if !IsNil(o.CostPrice) {
		toSerialize["cost_price"] = o.CostPrice
	}
	if !IsNil(o.OldPrice) {
		toSerialize["old_price"] = o.OldPrice
	}
	if !IsNil(o.FixedCostShippingPrice) {
		toSerialize["fixed_cost_shipping_price"] = o.FixedCostShippingPrice
	}
	if !IsNil(o.AdvancedPrices) {
		toSerialize["advanced_prices"] = o.AdvancedPrices
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.IncreaseQuantity) {
		toSerialize["increase_quantity"] = o.IncreaseQuantity
	}
	if !IsNil(o.ReduceQuantity) {
		toSerialize["reduce_quantity"] = o.ReduceQuantity
	}
	if !IsNil(o.ReserveQuantity) {
		toSerialize["reserve_quantity"] = o.ReserveQuantity
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.LangId) {
		toSerialize["lang_id"] = o.LangId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.ConditionDescription) {
		toSerialize["condition_description"] = o.ConditionDescription
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.AvailableForView) {
		toSerialize["available_for_view"] = o.AvailableForView
	}
	if !IsNil(o.AvailableForSale) {
		toSerialize["available_for_sale"] = o.AvailableForSale
	}
	if !IsNil(o.AvailFrom) {
		toSerialize["avail_from"] = o.AvailFrom
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.DimensionsUnit) {
		toSerialize["dimensions_unit"] = o.DimensionsUnit
	}
	if !IsNil(o.WeightUnit) {
		toSerialize["weight_unit"] = o.WeightUnit
	}
	if !IsNil(o.ManageStock) {
		toSerialize["manage_stock"] = o.ManageStock
	}
	if !IsNil(o.InStock) {
		toSerialize["in_stock"] = o.InStock
	}
	if !IsNil(o.BackorderStatus) {
		toSerialize["backorder_status"] = o.BackorderStatus
	}
	if !IsNil(o.IsFreeShipping) {
		toSerialize["is_free_shipping"] = o.IsFreeShipping
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["is_virtual"] = o.IsVirtual
	}
	if !IsNil(o.Taxable) {
		toSerialize["taxable"] = o.Taxable
	}
	if !IsNil(o.Downloadable) {
		toSerialize["downloadable"] = o.Downloadable
	}
	if !IsNil(o.WarehouseId) {
		toSerialize["warehouse_id"] = o.WarehouseId
	}
	if !IsNil(o.TaxClassId) {
		toSerialize["tax_class_id"] = o.TaxClassId
	}
	if !IsNil(o.CategoriesIds) {
		toSerialize["categories_ids"] = o.CategoriesIds
	}
	if !IsNil(o.MetaTitle) {
		toSerialize["meta_title"] = o.MetaTitle
	}
	if !IsNil(o.MetaDescription) {
		toSerialize["meta_description"] = o.MetaDescription
	}
	if !IsNil(o.MetaKeywords) {
		toSerialize["meta_keywords"] = o.MetaKeywords
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.SeoUrl) {
		toSerialize["seo_url"] = o.SeoUrl
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.ManufacturerId) {
		toSerialize["manufacturer_id"] = o.ManufacturerId
	}
	if !IsNil(o.Mpn) {
		toSerialize["mpn"] = o.Mpn
	}
	if !IsNil(o.Gtin) {
		toSerialize["gtin"] = o.Gtin
	}
	if !IsNil(o.Upc) {
		toSerialize["upc"] = o.Upc
	}
	if !IsNil(o.Isbn) {
		toSerialize["isbn"] = o.Isbn
	}
	if !IsNil(o.Ean) {
		toSerialize["ean"] = o.Ean
	}
	if !IsNil(o.Barcode) {
		toSerialize["barcode"] = o.Barcode
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.RelatedProductsIds) {
		toSerialize["related_products_ids"] = o.RelatedProductsIds
	}
	if !IsNil(o.UpSellProductsIds) {
		toSerialize["up_sell_products_ids"] = o.UpSellProductsIds
	}
	if !IsNil(o.CrossSellProductsIds) {
		toSerialize["cross_sell_products_ids"] = o.CrossSellProductsIds
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.SearchKeywords) {
		toSerialize["search_keywords"] = o.SearchKeywords
	}
	if !IsNil(o.HarmonizedSystemCode) {
		toSerialize["harmonized_system_code"] = o.HarmonizedSystemCode
	}
	return toSerialize, nil
}

func (o *ProductUpdateBatchPayloadInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductUpdateBatchPayloadInner := _ProductUpdateBatchPayloadInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductUpdateBatchPayloadInner)

	if err != nil {
		return err
	}

	*o = ProductUpdateBatchPayloadInner(varProductUpdateBatchPayloadInner)

	return err
}

type NullableProductUpdateBatchPayloadInner struct {
	value *ProductUpdateBatchPayloadInner
	isSet bool
}

func (v NullableProductUpdateBatchPayloadInner) Get() *ProductUpdateBatchPayloadInner {
	return v.value
}

func (v *NullableProductUpdateBatchPayloadInner) Set(val *ProductUpdateBatchPayloadInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductUpdateBatchPayloadInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductUpdateBatchPayloadInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductUpdateBatchPayloadInner(val *ProductUpdateBatchPayloadInner) *NullableProductUpdateBatchPayloadInner {
	return &NullableProductUpdateBatchPayloadInner{value: val, isSet: true}
}

func (v NullableProductUpdateBatchPayloadInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductUpdateBatchPayloadInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


