/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductReview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductReview{}

// ProductReview struct for ProductReview
type ProductReview struct {
	Id *string `json:"id,omitempty"`
	ProductId NullableString `json:"product_id,omitempty"`
	CustomerId NullableString `json:"customer_id,omitempty"`
	NickName NullableString `json:"nick_name,omitempty"`
	Email NullableString `json:"email,omitempty"`
	Summary NullableString `json:"summary,omitempty"`
	Message NullableString `json:"message,omitempty"`
	Rating NullableFloat32 `json:"rating,omitempty"`
	Ratings []ProductReviewRating `json:"ratings,omitempty"`
	Status NullableString `json:"status,omitempty"`
	CreatedTime NullableA2CDateTime `json:"created_time,omitempty"`
	ModifiedTime NullableA2CDateTime `json:"modified_time,omitempty"`
	Medias []Media `json:"medias,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewProductReview instantiates a new ProductReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductReview() *ProductReview {
	this := ProductReview{}
	return &this
}

// NewProductReviewWithDefaults instantiates a new ProductReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductReviewWithDefaults() *ProductReview {
	this := ProductReview{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductReview) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductReview) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductReview) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductReview) SetId(v string) {
	o.Id = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetProductId() string {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret string
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductReview) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableString and assigns it to the ProductId field.
func (o *ProductReview) SetProductId(v string) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *ProductReview) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *ProductReview) UnsetProductId() {
	o.ProductId.Unset()
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ProductReview) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *ProductReview) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}
// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *ProductReview) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *ProductReview) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetNickName returns the NickName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetNickName() string {
	if o == nil || IsNil(o.NickName.Get()) {
		var ret string
		return ret
	}
	return *o.NickName.Get()
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetNickNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NickName.Get(), o.NickName.IsSet()
}

// HasNickName returns a boolean if a field has been set.
func (o *ProductReview) HasNickName() bool {
	if o != nil && o.NickName.IsSet() {
		return true
	}

	return false
}

// SetNickName gets a reference to the given NullableString and assigns it to the NickName field.
func (o *ProductReview) SetNickName(v string) {
	o.NickName.Set(&v)
}
// SetNickNameNil sets the value for NickName to be an explicit nil
func (o *ProductReview) SetNickNameNil() {
	o.NickName.Set(nil)
}

// UnsetNickName ensures that no value is present for NickName, not even an explicit nil
func (o *ProductReview) UnsetNickName() {
	o.NickName.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *ProductReview) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *ProductReview) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *ProductReview) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *ProductReview) UnsetEmail() {
	o.Email.Unset()
}

// GetSummary returns the Summary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetSummary() string {
	if o == nil || IsNil(o.Summary.Get()) {
		var ret string
		return ret
	}
	return *o.Summary.Get()
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Summary.Get(), o.Summary.IsSet()
}

// HasSummary returns a boolean if a field has been set.
func (o *ProductReview) HasSummary() bool {
	if o != nil && o.Summary.IsSet() {
		return true
	}

	return false
}

// SetSummary gets a reference to the given NullableString and assigns it to the Summary field.
func (o *ProductReview) SetSummary(v string) {
	o.Summary.Set(&v)
}
// SetSummaryNil sets the value for Summary to be an explicit nil
func (o *ProductReview) SetSummaryNil() {
	o.Summary.Set(nil)
}

// UnsetSummary ensures that no value is present for Summary, not even an explicit nil
func (o *ProductReview) UnsetSummary() {
	o.Summary.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *ProductReview) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *ProductReview) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *ProductReview) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *ProductReview) UnsetMessage() {
	o.Message.Unset()
}

// GetRating returns the Rating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetRating() float32 {
	if o == nil || IsNil(o.Rating.Get()) {
		var ret float32
		return ret
	}
	return *o.Rating.Get()
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rating.Get(), o.Rating.IsSet()
}

// HasRating returns a boolean if a field has been set.
func (o *ProductReview) HasRating() bool {
	if o != nil && o.Rating.IsSet() {
		return true
	}

	return false
}

// SetRating gets a reference to the given NullableFloat32 and assigns it to the Rating field.
func (o *ProductReview) SetRating(v float32) {
	o.Rating.Set(&v)
}
// SetRatingNil sets the value for Rating to be an explicit nil
func (o *ProductReview) SetRatingNil() {
	o.Rating.Set(nil)
}

// UnsetRating ensures that no value is present for Rating, not even an explicit nil
func (o *ProductReview) UnsetRating() {
	o.Rating.Unset()
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *ProductReview) GetRatings() []ProductReviewRating {
	if o == nil || IsNil(o.Ratings) {
		var ret []ProductReviewRating
		return ret
	}
	return o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductReview) GetRatingsOk() ([]ProductReviewRating, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *ProductReview) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given []ProductReviewRating and assigns it to the Ratings field.
func (o *ProductReview) SetRatings(v []ProductReviewRating) {
	o.Ratings = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductReview) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ProductReview) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ProductReview) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ProductReview) UnsetStatus() {
	o.Status.Unset()
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetCreatedTime() A2CDateTime {
	if o == nil || IsNil(o.CreatedTime.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.CreatedTime.Get()
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetCreatedTimeOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTime.Get(), o.CreatedTime.IsSet()
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *ProductReview) HasCreatedTime() bool {
	if o != nil && o.CreatedTime.IsSet() {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given NullableA2CDateTime and assigns it to the CreatedTime field.
func (o *ProductReview) SetCreatedTime(v A2CDateTime) {
	o.CreatedTime.Set(&v)
}
// SetCreatedTimeNil sets the value for CreatedTime to be an explicit nil
func (o *ProductReview) SetCreatedTimeNil() {
	o.CreatedTime.Set(nil)
}

// UnsetCreatedTime ensures that no value is present for CreatedTime, not even an explicit nil
func (o *ProductReview) UnsetCreatedTime() {
	o.CreatedTime.Unset()
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetModifiedTime() A2CDateTime {
	if o == nil || IsNil(o.ModifiedTime.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.ModifiedTime.Get()
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetModifiedTimeOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedTime.Get(), o.ModifiedTime.IsSet()
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *ProductReview) HasModifiedTime() bool {
	if o != nil && o.ModifiedTime.IsSet() {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given NullableA2CDateTime and assigns it to the ModifiedTime field.
func (o *ProductReview) SetModifiedTime(v A2CDateTime) {
	o.ModifiedTime.Set(&v)
}
// SetModifiedTimeNil sets the value for ModifiedTime to be an explicit nil
func (o *ProductReview) SetModifiedTimeNil() {
	o.ModifiedTime.Set(nil)
}

// UnsetModifiedTime ensures that no value is present for ModifiedTime, not even an explicit nil
func (o *ProductReview) UnsetModifiedTime() {
	o.ModifiedTime.Unset()
}

// GetMedias returns the Medias field value if set, zero value otherwise.
func (o *ProductReview) GetMedias() []Media {
	if o == nil || IsNil(o.Medias) {
		var ret []Media
		return ret
	}
	return o.Medias
}

// GetMediasOk returns a tuple with the Medias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductReview) GetMediasOk() ([]Media, bool) {
	if o == nil || IsNil(o.Medias) {
		return nil, false
	}
	return o.Medias, true
}

// HasMedias returns a boolean if a field has been set.
func (o *ProductReview) HasMedias() bool {
	if o != nil && !IsNil(o.Medias) {
		return true
	}

	return false
}

// SetMedias gets a reference to the given []Media and assigns it to the Medias field.
func (o *ProductReview) SetMedias(v []Media) {
	o.Medias = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ProductReview) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ProductReview) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductReview) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductReview) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ProductReview) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ProductReview) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ProductReview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductReview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ProductId.IsSet() {
		toSerialize["product_id"] = o.ProductId.Get()
	}
	if o.CustomerId.IsSet() {
		toSerialize["customer_id"] = o.CustomerId.Get()
	}
	if o.NickName.IsSet() {
		toSerialize["nick_name"] = o.NickName.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Summary.IsSet() {
		toSerialize["summary"] = o.Summary.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Rating.IsSet() {
		toSerialize["rating"] = o.Rating.Get()
	}
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.CreatedTime.IsSet() {
		toSerialize["created_time"] = o.CreatedTime.Get()
	}
	if o.ModifiedTime.IsSet() {
		toSerialize["modified_time"] = o.ModifiedTime.Get()
	}
	if !IsNil(o.Medias) {
		toSerialize["medias"] = o.Medias
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableProductReview struct {
	value *ProductReview
	isSet bool
}

func (v NullableProductReview) Get() *ProductReview {
	return v.value
}

func (v *NullableProductReview) Set(val *ProductReview) {
	v.value = val
	v.isSet = true
}

func (v NullableProductReview) IsSet() bool {
	return v.isSet
}

func (v *NullableProductReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductReview(val *ProductReview) *NullableProductReview {
	return &NullableProductReview{value: val, isSet: true}
}

func (v NullableProductReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


