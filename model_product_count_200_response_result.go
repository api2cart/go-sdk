/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductCount200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductCount200ResponseResult{}

// ProductCount200ResponseResult struct for ProductCount200ResponseResult
type ProductCount200ResponseResult struct {
	ProductsCount *int32 `json:"products_count,omitempty"`
}

// NewProductCount200ResponseResult instantiates a new ProductCount200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCount200ResponseResult() *ProductCount200ResponseResult {
	this := ProductCount200ResponseResult{}
	return &this
}

// NewProductCount200ResponseResultWithDefaults instantiates a new ProductCount200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCount200ResponseResultWithDefaults() *ProductCount200ResponseResult {
	this := ProductCount200ResponseResult{}
	return &this
}

// GetProductsCount returns the ProductsCount field value if set, zero value otherwise.
func (o *ProductCount200ResponseResult) GetProductsCount() int32 {
	if o == nil || IsNil(o.ProductsCount) {
		var ret int32
		return ret
	}
	return *o.ProductsCount
}

// GetProductsCountOk returns a tuple with the ProductsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCount200ResponseResult) GetProductsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductsCount) {
		return nil, false
	}
	return o.ProductsCount, true
}

// HasProductsCount returns a boolean if a field has been set.
func (o *ProductCount200ResponseResult) HasProductsCount() bool {
	if o != nil && !IsNil(o.ProductsCount) {
		return true
	}

	return false
}

// SetProductsCount gets a reference to the given int32 and assigns it to the ProductsCount field.
func (o *ProductCount200ResponseResult) SetProductsCount(v int32) {
	o.ProductsCount = &v
}

func (o ProductCount200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductCount200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductsCount) {
		toSerialize["products_count"] = o.ProductsCount
	}
	return toSerialize, nil
}

type NullableProductCount200ResponseResult struct {
	value *ProductCount200ResponseResult
	isSet bool
}

func (v NullableProductCount200ResponseResult) Get() *ProductCount200ResponseResult {
	return v.value
}

func (v *NullableProductCount200ResponseResult) Set(val *ProductCount200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCount200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCount200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCount200ResponseResult(val *ProductCount200ResponseResult) *NullableProductCount200ResponseResult {
	return &NullableProductCount200ResponseResult{value: val, isSet: true}
}

func (v NullableProductCount200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCount200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


