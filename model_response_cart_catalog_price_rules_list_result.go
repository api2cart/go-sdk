/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseCartCatalogPriceRulesListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCartCatalogPriceRulesListResult{}

// ResponseCartCatalogPriceRulesListResult struct for ResponseCartCatalogPriceRulesListResult
type ResponseCartCatalogPriceRulesListResult struct {
	CatalogPriceRulesCount NullableInt32 `json:"catalog_price_rules_count,omitempty"`
	CatalogPriceRules []CatalogPriceRule `json:"catalog_price_rules,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewResponseCartCatalogPriceRulesListResult instantiates a new ResponseCartCatalogPriceRulesListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCartCatalogPriceRulesListResult() *ResponseCartCatalogPriceRulesListResult {
	this := ResponseCartCatalogPriceRulesListResult{}
	return &this
}

// NewResponseCartCatalogPriceRulesListResultWithDefaults instantiates a new ResponseCartCatalogPriceRulesListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCartCatalogPriceRulesListResultWithDefaults() *ResponseCartCatalogPriceRulesListResult {
	this := ResponseCartCatalogPriceRulesListResult{}
	return &this
}

// GetCatalogPriceRulesCount returns the CatalogPriceRulesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseCartCatalogPriceRulesListResult) GetCatalogPriceRulesCount() int32 {
	if o == nil || IsNil(o.CatalogPriceRulesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.CatalogPriceRulesCount.Get()
}

// GetCatalogPriceRulesCountOk returns a tuple with the CatalogPriceRulesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseCartCatalogPriceRulesListResult) GetCatalogPriceRulesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogPriceRulesCount.Get(), o.CatalogPriceRulesCount.IsSet()
}

// HasCatalogPriceRulesCount returns a boolean if a field has been set.
func (o *ResponseCartCatalogPriceRulesListResult) HasCatalogPriceRulesCount() bool {
	if o != nil && o.CatalogPriceRulesCount.IsSet() {
		return true
	}

	return false
}

// SetCatalogPriceRulesCount gets a reference to the given NullableInt32 and assigns it to the CatalogPriceRulesCount field.
func (o *ResponseCartCatalogPriceRulesListResult) SetCatalogPriceRulesCount(v int32) {
	o.CatalogPriceRulesCount.Set(&v)
}
// SetCatalogPriceRulesCountNil sets the value for CatalogPriceRulesCount to be an explicit nil
func (o *ResponseCartCatalogPriceRulesListResult) SetCatalogPriceRulesCountNil() {
	o.CatalogPriceRulesCount.Set(nil)
}

// UnsetCatalogPriceRulesCount ensures that no value is present for CatalogPriceRulesCount, not even an explicit nil
func (o *ResponseCartCatalogPriceRulesListResult) UnsetCatalogPriceRulesCount() {
	o.CatalogPriceRulesCount.Unset()
}

// GetCatalogPriceRules returns the CatalogPriceRules field value if set, zero value otherwise.
func (o *ResponseCartCatalogPriceRulesListResult) GetCatalogPriceRules() []CatalogPriceRule {
	if o == nil || IsNil(o.CatalogPriceRules) {
		var ret []CatalogPriceRule
		return ret
	}
	return o.CatalogPriceRules
}

// GetCatalogPriceRulesOk returns a tuple with the CatalogPriceRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCartCatalogPriceRulesListResult) GetCatalogPriceRulesOk() ([]CatalogPriceRule, bool) {
	if o == nil || IsNil(o.CatalogPriceRules) {
		return nil, false
	}
	return o.CatalogPriceRules, true
}

// HasCatalogPriceRules returns a boolean if a field has been set.
func (o *ResponseCartCatalogPriceRulesListResult) HasCatalogPriceRules() bool {
	if o != nil && !IsNil(o.CatalogPriceRules) {
		return true
	}

	return false
}

// SetCatalogPriceRules gets a reference to the given []CatalogPriceRule and assigns it to the CatalogPriceRules field.
func (o *ResponseCartCatalogPriceRulesListResult) SetCatalogPriceRules(v []CatalogPriceRule) {
	o.CatalogPriceRules = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseCartCatalogPriceRulesListResult) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseCartCatalogPriceRulesListResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ResponseCartCatalogPriceRulesListResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ResponseCartCatalogPriceRulesListResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseCartCatalogPriceRulesListResult) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseCartCatalogPriceRulesListResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ResponseCartCatalogPriceRulesListResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ResponseCartCatalogPriceRulesListResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ResponseCartCatalogPriceRulesListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCartCatalogPriceRulesListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CatalogPriceRulesCount.IsSet() {
		toSerialize["catalog_price_rules_count"] = o.CatalogPriceRulesCount.Get()
	}
	if !IsNil(o.CatalogPriceRules) {
		toSerialize["catalog_price_rules"] = o.CatalogPriceRules
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableResponseCartCatalogPriceRulesListResult struct {
	value *ResponseCartCatalogPriceRulesListResult
	isSet bool
}

func (v NullableResponseCartCatalogPriceRulesListResult) Get() *ResponseCartCatalogPriceRulesListResult {
	return v.value
}

func (v *NullableResponseCartCatalogPriceRulesListResult) Set(val *ResponseCartCatalogPriceRulesListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCartCatalogPriceRulesListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCartCatalogPriceRulesListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCartCatalogPriceRulesListResult(val *ResponseCartCatalogPriceRulesListResult) *NullableResponseCartCatalogPriceRulesListResult {
	return &NullableResponseCartCatalogPriceRulesListResult{value: val, isSet: true}
}

func (v NullableResponseCartCatalogPriceRulesListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCartCatalogPriceRulesListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


