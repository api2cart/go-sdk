/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BasketLiveShippingServiceList200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BasketLiveShippingServiceList200ResponseResult{}

// BasketLiveShippingServiceList200ResponseResult struct for BasketLiveShippingServiceList200ResponseResult
type BasketLiveShippingServiceList200ResponseResult struct {
	LiveShippingServices []BasketLiveShippingService `json:"live_shipping_services,omitempty"`
}

// NewBasketLiveShippingServiceList200ResponseResult instantiates a new BasketLiveShippingServiceList200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasketLiveShippingServiceList200ResponseResult() *BasketLiveShippingServiceList200ResponseResult {
	this := BasketLiveShippingServiceList200ResponseResult{}
	return &this
}

// NewBasketLiveShippingServiceList200ResponseResultWithDefaults instantiates a new BasketLiveShippingServiceList200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasketLiveShippingServiceList200ResponseResultWithDefaults() *BasketLiveShippingServiceList200ResponseResult {
	this := BasketLiveShippingServiceList200ResponseResult{}
	return &this
}

// GetLiveShippingServices returns the LiveShippingServices field value if set, zero value otherwise.
func (o *BasketLiveShippingServiceList200ResponseResult) GetLiveShippingServices() []BasketLiveShippingService {
	if o == nil || IsNil(o.LiveShippingServices) {
		var ret []BasketLiveShippingService
		return ret
	}
	return o.LiveShippingServices
}

// GetLiveShippingServicesOk returns a tuple with the LiveShippingServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasketLiveShippingServiceList200ResponseResult) GetLiveShippingServicesOk() ([]BasketLiveShippingService, bool) {
	if o == nil || IsNil(o.LiveShippingServices) {
		return nil, false
	}
	return o.LiveShippingServices, true
}

// HasLiveShippingServices returns a boolean if a field has been set.
func (o *BasketLiveShippingServiceList200ResponseResult) HasLiveShippingServices() bool {
	if o != nil && !IsNil(o.LiveShippingServices) {
		return true
	}

	return false
}

// SetLiveShippingServices gets a reference to the given []BasketLiveShippingService and assigns it to the LiveShippingServices field.
func (o *BasketLiveShippingServiceList200ResponseResult) SetLiveShippingServices(v []BasketLiveShippingService) {
	o.LiveShippingServices = v
}

func (o BasketLiveShippingServiceList200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BasketLiveShippingServiceList200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LiveShippingServices) {
		toSerialize["live_shipping_services"] = o.LiveShippingServices
	}
	return toSerialize, nil
}

type NullableBasketLiveShippingServiceList200ResponseResult struct {
	value *BasketLiveShippingServiceList200ResponseResult
	isSet bool
}

func (v NullableBasketLiveShippingServiceList200ResponseResult) Get() *BasketLiveShippingServiceList200ResponseResult {
	return v.value
}

func (v *NullableBasketLiveShippingServiceList200ResponseResult) Set(val *BasketLiveShippingServiceList200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBasketLiveShippingServiceList200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBasketLiveShippingServiceList200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasketLiveShippingServiceList200ResponseResult(val *BasketLiveShippingServiceList200ResponseResult) *NullableBasketLiveShippingServiceList200ResponseResult {
	return &NullableBasketLiveShippingServiceList200ResponseResult{value: val, isSet: true}
}

func (v NullableBasketLiveShippingServiceList200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasketLiveShippingServiceList200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


