/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderStatusHistoryItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderStatusHistoryItem{}

// OrderStatusHistoryItem struct for OrderStatusHistoryItem
type OrderStatusHistoryItem struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ModifiedTime *A2CDateTime `json:"modified_time,omitempty"`
	Notify *bool `json:"notify,omitempty"`
	Comment *string `json:"comment,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewOrderStatusHistoryItem instantiates a new OrderStatusHistoryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderStatusHistoryItem() *OrderStatusHistoryItem {
	this := OrderStatusHistoryItem{}
	return &this
}

// NewOrderStatusHistoryItemWithDefaults instantiates a new OrderStatusHistoryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderStatusHistoryItemWithDefaults() *OrderStatusHistoryItem {
	this := OrderStatusHistoryItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrderStatusHistoryItem) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrderStatusHistoryItem) SetName(v string) {
	o.Name = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetModifiedTime() A2CDateTime {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret A2CDateTime
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetModifiedTimeOk() (*A2CDateTime, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given A2CDateTime and assigns it to the ModifiedTime field.
func (o *OrderStatusHistoryItem) SetModifiedTime(v A2CDateTime) {
	o.ModifiedTime = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetNotify() bool {
	if o == nil || IsNil(o.Notify) {
		var ret bool
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetNotifyOk() (*bool, bool) {
	if o == nil || IsNil(o.Notify) {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasNotify() bool {
	if o != nil && !IsNil(o.Notify) {
		return true
	}

	return false
}

// SetNotify gets a reference to the given bool and assigns it to the Notify field.
func (o *OrderStatusHistoryItem) SetNotify(v bool) {
	o.Notify = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *OrderStatusHistoryItem) SetComment(v string) {
	o.Comment = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *OrderStatusHistoryItem) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *OrderStatusHistoryItem) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusHistoryItem) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *OrderStatusHistoryItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *OrderStatusHistoryItem) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o OrderStatusHistoryItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderStatusHistoryItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	if !IsNil(o.Notify) {
		toSerialize["notify"] = o.Notify
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableOrderStatusHistoryItem struct {
	value *OrderStatusHistoryItem
	isSet bool
}

func (v NullableOrderStatusHistoryItem) Get() *OrderStatusHistoryItem {
	return v.value
}

func (v *NullableOrderStatusHistoryItem) Set(val *OrderStatusHistoryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderStatusHistoryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderStatusHistoryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderStatusHistoryItem(val *OrderStatusHistoryItem) *NullableOrderStatusHistoryItem {
	return &NullableOrderStatusHistoryItem{value: val, isSet: true}
}

func (v NullableOrderStatusHistoryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderStatusHistoryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


