/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductAddLogisticInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAddLogisticInfoInner{}

// ProductAddLogisticInfoInner struct for ProductAddLogisticInfoInner
type ProductAddLogisticInfoInner struct {
	LogisticId float32 `json:"logistic_id"`
	IsFree *bool `json:"is_free,omitempty"`
	ShippingFee *float32 `json:"shipping_fee,omitempty"`
	SizeId *float32 `json:"size_id,omitempty"`
}

type _ProductAddLogisticInfoInner ProductAddLogisticInfoInner

// NewProductAddLogisticInfoInner instantiates a new ProductAddLogisticInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAddLogisticInfoInner(logisticId float32) *ProductAddLogisticInfoInner {
	this := ProductAddLogisticInfoInner{}
	this.LogisticId = logisticId
	return &this
}

// NewProductAddLogisticInfoInnerWithDefaults instantiates a new ProductAddLogisticInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAddLogisticInfoInnerWithDefaults() *ProductAddLogisticInfoInner {
	this := ProductAddLogisticInfoInner{}
	return &this
}

// GetLogisticId returns the LogisticId field value
func (o *ProductAddLogisticInfoInner) GetLogisticId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LogisticId
}

// GetLogisticIdOk returns a tuple with the LogisticId field value
// and a boolean to check if the value has been set.
func (o *ProductAddLogisticInfoInner) GetLogisticIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogisticId, true
}

// SetLogisticId sets field value
func (o *ProductAddLogisticInfoInner) SetLogisticId(v float32) {
	o.LogisticId = v
}

// GetIsFree returns the IsFree field value if set, zero value otherwise.
func (o *ProductAddLogisticInfoInner) GetIsFree() bool {
	if o == nil || IsNil(o.IsFree) {
		var ret bool
		return ret
	}
	return *o.IsFree
}

// GetIsFreeOk returns a tuple with the IsFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddLogisticInfoInner) GetIsFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFree) {
		return nil, false
	}
	return o.IsFree, true
}

// HasIsFree returns a boolean if a field has been set.
func (o *ProductAddLogisticInfoInner) HasIsFree() bool {
	if o != nil && !IsNil(o.IsFree) {
		return true
	}

	return false
}

// SetIsFree gets a reference to the given bool and assigns it to the IsFree field.
func (o *ProductAddLogisticInfoInner) SetIsFree(v bool) {
	o.IsFree = &v
}

// GetShippingFee returns the ShippingFee field value if set, zero value otherwise.
func (o *ProductAddLogisticInfoInner) GetShippingFee() float32 {
	if o == nil || IsNil(o.ShippingFee) {
		var ret float32
		return ret
	}
	return *o.ShippingFee
}

// GetShippingFeeOk returns a tuple with the ShippingFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddLogisticInfoInner) GetShippingFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingFee) {
		return nil, false
	}
	return o.ShippingFee, true
}

// HasShippingFee returns a boolean if a field has been set.
func (o *ProductAddLogisticInfoInner) HasShippingFee() bool {
	if o != nil && !IsNil(o.ShippingFee) {
		return true
	}

	return false
}

// SetShippingFee gets a reference to the given float32 and assigns it to the ShippingFee field.
func (o *ProductAddLogisticInfoInner) SetShippingFee(v float32) {
	o.ShippingFee = &v
}

// GetSizeId returns the SizeId field value if set, zero value otherwise.
func (o *ProductAddLogisticInfoInner) GetSizeId() float32 {
	if o == nil || IsNil(o.SizeId) {
		var ret float32
		return ret
	}
	return *o.SizeId
}

// GetSizeIdOk returns a tuple with the SizeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAddLogisticInfoInner) GetSizeIdOk() (*float32, bool) {
	if o == nil || IsNil(o.SizeId) {
		return nil, false
	}
	return o.SizeId, true
}

// HasSizeId returns a boolean if a field has been set.
func (o *ProductAddLogisticInfoInner) HasSizeId() bool {
	if o != nil && !IsNil(o.SizeId) {
		return true
	}

	return false
}

// SetSizeId gets a reference to the given float32 and assigns it to the SizeId field.
func (o *ProductAddLogisticInfoInner) SetSizeId(v float32) {
	o.SizeId = &v
}

func (o ProductAddLogisticInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAddLogisticInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["logistic_id"] = o.LogisticId
	if !IsNil(o.IsFree) {
		toSerialize["is_free"] = o.IsFree
	}
	if !IsNil(o.ShippingFee) {
		toSerialize["shipping_fee"] = o.ShippingFee
	}
	if !IsNil(o.SizeId) {
		toSerialize["size_id"] = o.SizeId
	}
	return toSerialize, nil
}

func (o *ProductAddLogisticInfoInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logistic_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductAddLogisticInfoInner := _ProductAddLogisticInfoInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductAddLogisticInfoInner)

	if err != nil {
		return err
	}

	*o = ProductAddLogisticInfoInner(varProductAddLogisticInfoInner)

	return err
}

type NullableProductAddLogisticInfoInner struct {
	value *ProductAddLogisticInfoInner
	isSet bool
}

func (v NullableProductAddLogisticInfoInner) Get() *ProductAddLogisticInfoInner {
	return v.value
}

func (v *NullableProductAddLogisticInfoInner) Set(val *ProductAddLogisticInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAddLogisticInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAddLogisticInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAddLogisticInfoInner(val *ProductAddLogisticInfoInner) *NullableProductAddLogisticInfoInner {
	return &NullableProductAddLogisticInfoInner{value: val, isSet: true}
}

func (v NullableProductAddLogisticInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAddLogisticInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


