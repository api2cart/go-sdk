/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseProductCurrencyListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseProductCurrencyListResult{}

// ResponseProductCurrencyListResult struct for ResponseProductCurrencyListResult
type ResponseProductCurrencyListResult struct {
	TotalCount *int32 `json:"total_count,omitempty"`
	Currency []Currency `json:"currency,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewResponseProductCurrencyListResult instantiates a new ResponseProductCurrencyListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseProductCurrencyListResult() *ResponseProductCurrencyListResult {
	this := ResponseProductCurrencyListResult{}
	return &this
}

// NewResponseProductCurrencyListResultWithDefaults instantiates a new ResponseProductCurrencyListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseProductCurrencyListResultWithDefaults() *ResponseProductCurrencyListResult {
	this := ResponseProductCurrencyListResult{}
	return &this
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ResponseProductCurrencyListResult) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProductCurrencyListResult) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ResponseProductCurrencyListResult) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ResponseProductCurrencyListResult) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ResponseProductCurrencyListResult) GetCurrency() []Currency {
	if o == nil || IsNil(o.Currency) {
		var ret []Currency
		return ret
	}
	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProductCurrencyListResult) GetCurrencyOk() ([]Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ResponseProductCurrencyListResult) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given []Currency and assigns it to the Currency field.
func (o *ResponseProductCurrencyListResult) SetCurrency(v []Currency) {
	o.Currency = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *ResponseProductCurrencyListResult) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProductCurrencyListResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ResponseProductCurrencyListResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ResponseProductCurrencyListResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *ResponseProductCurrencyListResult) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseProductCurrencyListResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ResponseProductCurrencyListResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ResponseProductCurrencyListResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ResponseProductCurrencyListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseProductCurrencyListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableResponseProductCurrencyListResult struct {
	value *ResponseProductCurrencyListResult
	isSet bool
}

func (v NullableResponseProductCurrencyListResult) Get() *ResponseProductCurrencyListResult {
	return v.value
}

func (v *NullableResponseProductCurrencyListResult) Set(val *ResponseProductCurrencyListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseProductCurrencyListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseProductCurrencyListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseProductCurrencyListResult(val *ResponseProductCurrencyListResult) *NullableResponseProductCurrencyListResult {
	return &NullableResponseProductCurrencyListResult{value: val, isSet: true}
}

func (v NullableResponseProductCurrencyListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseProductCurrencyListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


