/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductOptionItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductOptionItem{}

// ProductOptionItem struct for ProductOptionItem
type ProductOptionItem struct {
	Id *string `json:"id,omitempty"`
	ProductOptionItemId *string `json:"product_option_item_id,omitempty"`
	Name *string `json:"name,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	Price *string `json:"price,omitempty"`
	Weight *string `json:"weight,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	TypePrice *string `json:"type_price,omitempty"`
	Sku *string `json:"sku,omitempty"`
	IsDefault *bool `json:"is_default,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewProductOptionItem instantiates a new ProductOptionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductOptionItem() *ProductOptionItem {
	this := ProductOptionItem{}
	return &this
}

// NewProductOptionItemWithDefaults instantiates a new ProductOptionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductOptionItemWithDefaults() *ProductOptionItem {
	this := ProductOptionItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductOptionItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductOptionItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductOptionItem) SetId(v string) {
	o.Id = &v
}

// GetProductOptionItemId returns the ProductOptionItemId field value if set, zero value otherwise.
func (o *ProductOptionItem) GetProductOptionItemId() string {
	if o == nil || IsNil(o.ProductOptionItemId) {
		var ret string
		return ret
	}
	return *o.ProductOptionItemId
}

// GetProductOptionItemIdOk returns a tuple with the ProductOptionItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetProductOptionItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductOptionItemId) {
		return nil, false
	}
	return o.ProductOptionItemId, true
}

// HasProductOptionItemId returns a boolean if a field has been set.
func (o *ProductOptionItem) HasProductOptionItemId() bool {
	if o != nil && !IsNil(o.ProductOptionItemId) {
		return true
	}

	return false
}

// SetProductOptionItemId gets a reference to the given string and assigns it to the ProductOptionItemId field.
func (o *ProductOptionItem) SetProductOptionItemId(v string) {
	o.ProductOptionItemId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductOptionItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductOptionItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductOptionItem) SetName(v string) {
	o.Name = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ProductOptionItem) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ProductOptionItem) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *ProductOptionItem) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductOptionItem) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductOptionItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *ProductOptionItem) SetPrice(v string) {
	o.Price = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ProductOptionItem) GetWeight() string {
	if o == nil || IsNil(o.Weight) {
		var ret string
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetWeightOk() (*string, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ProductOptionItem) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given string and assigns it to the Weight field.
func (o *ProductOptionItem) SetWeight(v string) {
	o.Weight = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ProductOptionItem) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ProductOptionItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ProductOptionItem) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetTypePrice returns the TypePrice field value if set, zero value otherwise.
func (o *ProductOptionItem) GetTypePrice() string {
	if o == nil || IsNil(o.TypePrice) {
		var ret string
		return ret
	}
	return *o.TypePrice
}

// GetTypePriceOk returns a tuple with the TypePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetTypePriceOk() (*string, bool) {
	if o == nil || IsNil(o.TypePrice) {
		return nil, false
	}
	return o.TypePrice, true
}

// HasTypePrice returns a boolean if a field has been set.
func (o *ProductOptionItem) HasTypePrice() bool {
	if o != nil && !IsNil(o.TypePrice) {
		return true
	}

	return false
}

// SetTypePrice gets a reference to the given string and assigns it to the TypePrice field.
func (o *ProductOptionItem) SetTypePrice(v string) {
	o.TypePrice = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *ProductOptionItem) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *ProductOptionItem) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *ProductOptionItem) SetSku(v string) {
	o.Sku = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *ProductOptionItem) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *ProductOptionItem) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *ProductOptionItem) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *ProductOptionItem) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ProductOptionItem) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ProductOptionItem) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *ProductOptionItem) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOptionItem) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ProductOptionItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ProductOptionItem) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ProductOptionItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductOptionItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProductOptionItemId) {
		toSerialize["product_option_item_id"] = o.ProductOptionItemId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.TypePrice) {
		toSerialize["type_price"] = o.TypePrice
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableProductOptionItem struct {
	value *ProductOptionItem
	isSet bool
}

func (v NullableProductOptionItem) Get() *ProductOptionItem {
	return v.value
}

func (v *NullableProductOptionItem) Set(val *ProductOptionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableProductOptionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableProductOptionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductOptionItem(val *ProductOptionItem) *NullableProductOptionItem {
	return &NullableProductOptionItem{value: val, isSet: true}
}

func (v NullableProductOptionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductOptionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


