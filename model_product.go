/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Product type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Product{}

// Product struct for Product
type Product struct {
	Id *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	UModel *string `json:"u_model,omitempty"`
	USku *string `json:"u_sku,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	Price *float32 `json:"price,omitempty"`
	AdvancedPrice []ProductAdvancedPrice `json:"advanced_price,omitempty"`
	CostPrice *float32 `json:"cost_price,omitempty"`
	Quantity *float32 `json:"quantity,omitempty"`
	Inventory []ProductInventory `json:"inventory,omitempty"`
	GroupItems []ProductGroupItem `json:"group_items,omitempty"`
	UBrandId *string `json:"u_brand_id,omitempty"`
	UBrand *string `json:"u_brand,omitempty"`
	CategoriesIds []string `json:"categories_ids,omitempty"`
	StoresIds []string `json:"stores_ids,omitempty"`
	Url *string `json:"url,omitempty"`
	SeoUrl *string `json:"seo_url,omitempty"`
	MetaTitle *string `json:"meta_title,omitempty"`
	MetaKeywords *string `json:"meta_keywords,omitempty"`
	MetaDescription *string `json:"meta_description,omitempty"`
	AvailSale *bool `json:"avail_sale,omitempty"`
	AvailView *bool `json:"avail_view,omitempty"`
	IsVirtual *bool `json:"is_virtual,omitempty"`
	IsDownloadable *bool `json:"is_downloadable,omitempty"`
	Weight *float32 `json:"weight,omitempty"`
	WeightUnit *string `json:"weight_unit,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	InStock *bool `json:"in_stock,omitempty"`
	Backorders *string `json:"backorders,omitempty"`
	ManageStock *string `json:"manage_stock,omitempty"`
	IsStockManaged *bool `json:"is_stock_managed,omitempty"`
	CreateAt *A2CDateTime `json:"create_at,omitempty"`
	ModifiedAt *A2CDateTime `json:"modified_at,omitempty"`
	TaxClassId *string `json:"tax_class_id,omitempty"`
	SpecialPrice *SpecialPrice `json:"special_price,omitempty"`
	TierPrice []ProductTierPrice `json:"tier_price,omitempty"`
	GroupPrice []ProductGroupPrice `json:"group_price,omitempty"`
	Images []Image `json:"images,omitempty"`
	ProductOptions []ProductOption `json:"product_options,omitempty"`
	UUpc *string `json:"u_upc,omitempty"`
	UMpn *string `json:"u_mpn,omitempty"`
	UGtin *string `json:"u_gtin,omitempty"`
	UIsbn *string `json:"u_isbn,omitempty"`
	UEan *string `json:"u_ean,omitempty"`
	RelatedProductsIds []string `json:"related_products_ids,omitempty"`
	UpSellProductsIds []string `json:"up_sell_products_ids,omitempty"`
	CrossSellProductsIds []string `json:"cross_sell_products_ids,omitempty"`
	DimensionsUnit *string `json:"dimensions_unit,omitempty"`
	Width *float32 `json:"width,omitempty"`
	Height *float32 `json:"height,omitempty"`
	Length *float32 `json:"length,omitempty"`
	Discounts []Discount `json:"discounts,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewProduct instantiates a new Product object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct() *Product {
	this := Product{}
	return &this
}

// NewProductWithDefaults instantiates a new Product object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWithDefaults() *Product {
	this := Product{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Product) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Product) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Product) SetType(v string) {
	o.Type = &v
}

// GetUModel returns the UModel field value if set, zero value otherwise.
func (o *Product) GetUModel() string {
	if o == nil || IsNil(o.UModel) {
		var ret string
		return ret
	}
	return *o.UModel
}

// GetUModelOk returns a tuple with the UModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUModelOk() (*string, bool) {
	if o == nil || IsNil(o.UModel) {
		return nil, false
	}
	return o.UModel, true
}

// HasUModel returns a boolean if a field has been set.
func (o *Product) HasUModel() bool {
	if o != nil && !IsNil(o.UModel) {
		return true
	}

	return false
}

// SetUModel gets a reference to the given string and assigns it to the UModel field.
func (o *Product) SetUModel(v string) {
	o.UModel = &v
}

// GetUSku returns the USku field value if set, zero value otherwise.
func (o *Product) GetUSku() string {
	if o == nil || IsNil(o.USku) {
		var ret string
		return ret
	}
	return *o.USku
}

// GetUSkuOk returns a tuple with the USku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUSkuOk() (*string, bool) {
	if o == nil || IsNil(o.USku) {
		return nil, false
	}
	return o.USku, true
}

// HasUSku returns a boolean if a field has been set.
func (o *Product) HasUSku() bool {
	if o != nil && !IsNil(o.USku) {
		return true
	}

	return false
}

// SetUSku gets a reference to the given string and assigns it to the USku field.
func (o *Product) SetUSku(v string) {
	o.USku = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Product) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Product) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Product) SetDescription(v string) {
	o.Description = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *Product) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *Product) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *Product) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Product) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Product) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *Product) SetPrice(v float32) {
	o.Price = &v
}

// GetAdvancedPrice returns the AdvancedPrice field value if set, zero value otherwise.
func (o *Product) GetAdvancedPrice() []ProductAdvancedPrice {
	if o == nil || IsNil(o.AdvancedPrice) {
		var ret []ProductAdvancedPrice
		return ret
	}
	return o.AdvancedPrice
}

// GetAdvancedPriceOk returns a tuple with the AdvancedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetAdvancedPriceOk() ([]ProductAdvancedPrice, bool) {
	if o == nil || IsNil(o.AdvancedPrice) {
		return nil, false
	}
	return o.AdvancedPrice, true
}

// HasAdvancedPrice returns a boolean if a field has been set.
func (o *Product) HasAdvancedPrice() bool {
	if o != nil && !IsNil(o.AdvancedPrice) {
		return true
	}

	return false
}

// SetAdvancedPrice gets a reference to the given []ProductAdvancedPrice and assigns it to the AdvancedPrice field.
func (o *Product) SetAdvancedPrice(v []ProductAdvancedPrice) {
	o.AdvancedPrice = v
}

// GetCostPrice returns the CostPrice field value if set, zero value otherwise.
func (o *Product) GetCostPrice() float32 {
	if o == nil || IsNil(o.CostPrice) {
		var ret float32
		return ret
	}
	return *o.CostPrice
}

// GetCostPriceOk returns a tuple with the CostPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetCostPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.CostPrice) {
		return nil, false
	}
	return o.CostPrice, true
}

// HasCostPrice returns a boolean if a field has been set.
func (o *Product) HasCostPrice() bool {
	if o != nil && !IsNil(o.CostPrice) {
		return true
	}

	return false
}

// SetCostPrice gets a reference to the given float32 and assigns it to the CostPrice field.
func (o *Product) SetCostPrice(v float32) {
	o.CostPrice = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *Product) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *Product) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *Product) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *Product) GetInventory() []ProductInventory {
	if o == nil || IsNil(o.Inventory) {
		var ret []ProductInventory
		return ret
	}
	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetInventoryOk() ([]ProductInventory, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *Product) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given []ProductInventory and assigns it to the Inventory field.
func (o *Product) SetInventory(v []ProductInventory) {
	o.Inventory = v
}

// GetGroupItems returns the GroupItems field value if set, zero value otherwise.
func (o *Product) GetGroupItems() []ProductGroupItem {
	if o == nil || IsNil(o.GroupItems) {
		var ret []ProductGroupItem
		return ret
	}
	return o.GroupItems
}

// GetGroupItemsOk returns a tuple with the GroupItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetGroupItemsOk() ([]ProductGroupItem, bool) {
	if o == nil || IsNil(o.GroupItems) {
		return nil, false
	}
	return o.GroupItems, true
}

// HasGroupItems returns a boolean if a field has been set.
func (o *Product) HasGroupItems() bool {
	if o != nil && !IsNil(o.GroupItems) {
		return true
	}

	return false
}

// SetGroupItems gets a reference to the given []ProductGroupItem and assigns it to the GroupItems field.
func (o *Product) SetGroupItems(v []ProductGroupItem) {
	o.GroupItems = v
}

// GetUBrandId returns the UBrandId field value if set, zero value otherwise.
func (o *Product) GetUBrandId() string {
	if o == nil || IsNil(o.UBrandId) {
		var ret string
		return ret
	}
	return *o.UBrandId
}

// GetUBrandIdOk returns a tuple with the UBrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUBrandIdOk() (*string, bool) {
	if o == nil || IsNil(o.UBrandId) {
		return nil, false
	}
	return o.UBrandId, true
}

// HasUBrandId returns a boolean if a field has been set.
func (o *Product) HasUBrandId() bool {
	if o != nil && !IsNil(o.UBrandId) {
		return true
	}

	return false
}

// SetUBrandId gets a reference to the given string and assigns it to the UBrandId field.
func (o *Product) SetUBrandId(v string) {
	o.UBrandId = &v
}

// GetUBrand returns the UBrand field value if set, zero value otherwise.
func (o *Product) GetUBrand() string {
	if o == nil || IsNil(o.UBrand) {
		var ret string
		return ret
	}
	return *o.UBrand
}

// GetUBrandOk returns a tuple with the UBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUBrandOk() (*string, bool) {
	if o == nil || IsNil(o.UBrand) {
		return nil, false
	}
	return o.UBrand, true
}

// HasUBrand returns a boolean if a field has been set.
func (o *Product) HasUBrand() bool {
	if o != nil && !IsNil(o.UBrand) {
		return true
	}

	return false
}

// SetUBrand gets a reference to the given string and assigns it to the UBrand field.
func (o *Product) SetUBrand(v string) {
	o.UBrand = &v
}

// GetCategoriesIds returns the CategoriesIds field value if set, zero value otherwise.
func (o *Product) GetCategoriesIds() []string {
	if o == nil || IsNil(o.CategoriesIds) {
		var ret []string
		return ret
	}
	return o.CategoriesIds
}

// GetCategoriesIdsOk returns a tuple with the CategoriesIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetCategoriesIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CategoriesIds) {
		return nil, false
	}
	return o.CategoriesIds, true
}

// HasCategoriesIds returns a boolean if a field has been set.
func (o *Product) HasCategoriesIds() bool {
	if o != nil && !IsNil(o.CategoriesIds) {
		return true
	}

	return false
}

// SetCategoriesIds gets a reference to the given []string and assigns it to the CategoriesIds field.
func (o *Product) SetCategoriesIds(v []string) {
	o.CategoriesIds = v
}

// GetStoresIds returns the StoresIds field value if set, zero value otherwise.
func (o *Product) GetStoresIds() []string {
	if o == nil || IsNil(o.StoresIds) {
		var ret []string
		return ret
	}
	return o.StoresIds
}

// GetStoresIdsOk returns a tuple with the StoresIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetStoresIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.StoresIds) {
		return nil, false
	}
	return o.StoresIds, true
}

// HasStoresIds returns a boolean if a field has been set.
func (o *Product) HasStoresIds() bool {
	if o != nil && !IsNil(o.StoresIds) {
		return true
	}

	return false
}

// SetStoresIds gets a reference to the given []string and assigns it to the StoresIds field.
func (o *Product) SetStoresIds(v []string) {
	o.StoresIds = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Product) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Product) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Product) SetUrl(v string) {
	o.Url = &v
}

// GetSeoUrl returns the SeoUrl field value if set, zero value otherwise.
func (o *Product) GetSeoUrl() string {
	if o == nil || IsNil(o.SeoUrl) {
		var ret string
		return ret
	}
	return *o.SeoUrl
}

// GetSeoUrlOk returns a tuple with the SeoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetSeoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SeoUrl) {
		return nil, false
	}
	return o.SeoUrl, true
}

// HasSeoUrl returns a boolean if a field has been set.
func (o *Product) HasSeoUrl() bool {
	if o != nil && !IsNil(o.SeoUrl) {
		return true
	}

	return false
}

// SetSeoUrl gets a reference to the given string and assigns it to the SeoUrl field.
func (o *Product) SetSeoUrl(v string) {
	o.SeoUrl = &v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise.
func (o *Product) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle) {
		var ret string
		return ret
	}
	return *o.MetaTitle
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetMetaTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MetaTitle) {
		return nil, false
	}
	return o.MetaTitle, true
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *Product) HasMetaTitle() bool {
	if o != nil && !IsNil(o.MetaTitle) {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given string and assigns it to the MetaTitle field.
func (o *Product) SetMetaTitle(v string) {
	o.MetaTitle = &v
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise.
func (o *Product) GetMetaKeywords() string {
	if o == nil || IsNil(o.MetaKeywords) {
		var ret string
		return ret
	}
	return *o.MetaKeywords
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetMetaKeywordsOk() (*string, bool) {
	if o == nil || IsNil(o.MetaKeywords) {
		return nil, false
	}
	return o.MetaKeywords, true
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *Product) HasMetaKeywords() bool {
	if o != nil && !IsNil(o.MetaKeywords) {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given string and assigns it to the MetaKeywords field.
func (o *Product) SetMetaKeywords(v string) {
	o.MetaKeywords = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *Product) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription) {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetaDescription) {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *Product) HasMetaDescription() bool {
	if o != nil && !IsNil(o.MetaDescription) {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *Product) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetAvailSale returns the AvailSale field value if set, zero value otherwise.
func (o *Product) GetAvailSale() bool {
	if o == nil || IsNil(o.AvailSale) {
		var ret bool
		return ret
	}
	return *o.AvailSale
}

// GetAvailSaleOk returns a tuple with the AvailSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetAvailSaleOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailSale) {
		return nil, false
	}
	return o.AvailSale, true
}

// HasAvailSale returns a boolean if a field has been set.
func (o *Product) HasAvailSale() bool {
	if o != nil && !IsNil(o.AvailSale) {
		return true
	}

	return false
}

// SetAvailSale gets a reference to the given bool and assigns it to the AvailSale field.
func (o *Product) SetAvailSale(v bool) {
	o.AvailSale = &v
}

// GetAvailView returns the AvailView field value if set, zero value otherwise.
func (o *Product) GetAvailView() bool {
	if o == nil || IsNil(o.AvailView) {
		var ret bool
		return ret
	}
	return *o.AvailView
}

// GetAvailViewOk returns a tuple with the AvailView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetAvailViewOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailView) {
		return nil, false
	}
	return o.AvailView, true
}

// HasAvailView returns a boolean if a field has been set.
func (o *Product) HasAvailView() bool {
	if o != nil && !IsNil(o.AvailView) {
		return true
	}

	return false
}

// SetAvailView gets a reference to the given bool and assigns it to the AvailView field.
func (o *Product) SetAvailView(v bool) {
	o.AvailView = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *Product) GetIsVirtual() bool {
	if o == nil || IsNil(o.IsVirtual) {
		var ret bool
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetIsVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *Product) HasIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given bool and assigns it to the IsVirtual field.
func (o *Product) SetIsVirtual(v bool) {
	o.IsVirtual = &v
}

// GetIsDownloadable returns the IsDownloadable field value if set, zero value otherwise.
func (o *Product) GetIsDownloadable() bool {
	if o == nil || IsNil(o.IsDownloadable) {
		var ret bool
		return ret
	}
	return *o.IsDownloadable
}

// GetIsDownloadableOk returns a tuple with the IsDownloadable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetIsDownloadableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDownloadable) {
		return nil, false
	}
	return o.IsDownloadable, true
}

// HasIsDownloadable returns a boolean if a field has been set.
func (o *Product) HasIsDownloadable() bool {
	if o != nil && !IsNil(o.IsDownloadable) {
		return true
	}

	return false
}

// SetIsDownloadable gets a reference to the given bool and assigns it to the IsDownloadable field.
func (o *Product) SetIsDownloadable(v bool) {
	o.IsDownloadable = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *Product) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *Product) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *Product) SetWeight(v float32) {
	o.Weight = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *Product) GetWeightUnit() string {
	if o == nil || IsNil(o.WeightUnit) {
		var ret string
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetWeightUnitOk() (*string, bool) {
	if o == nil || IsNil(o.WeightUnit) {
		return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *Product) HasWeightUnit() bool {
	if o != nil && !IsNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given string and assigns it to the WeightUnit field.
func (o *Product) SetWeightUnit(v string) {
	o.WeightUnit = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *Product) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *Product) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *Product) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetInStock returns the InStock field value if set, zero value otherwise.
func (o *Product) GetInStock() bool {
	if o == nil || IsNil(o.InStock) {
		var ret bool
		return ret
	}
	return *o.InStock
}

// GetInStockOk returns a tuple with the InStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetInStockOk() (*bool, bool) {
	if o == nil || IsNil(o.InStock) {
		return nil, false
	}
	return o.InStock, true
}

// HasInStock returns a boolean if a field has been set.
func (o *Product) HasInStock() bool {
	if o != nil && !IsNil(o.InStock) {
		return true
	}

	return false
}

// SetInStock gets a reference to the given bool and assigns it to the InStock field.
func (o *Product) SetInStock(v bool) {
	o.InStock = &v
}

// GetBackorders returns the Backorders field value if set, zero value otherwise.
func (o *Product) GetBackorders() string {
	if o == nil || IsNil(o.Backorders) {
		var ret string
		return ret
	}
	return *o.Backorders
}

// GetBackordersOk returns a tuple with the Backorders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetBackordersOk() (*string, bool) {
	if o == nil || IsNil(o.Backorders) {
		return nil, false
	}
	return o.Backorders, true
}

// HasBackorders returns a boolean if a field has been set.
func (o *Product) HasBackorders() bool {
	if o != nil && !IsNil(o.Backorders) {
		return true
	}

	return false
}

// SetBackorders gets a reference to the given string and assigns it to the Backorders field.
func (o *Product) SetBackorders(v string) {
	o.Backorders = &v
}

// GetManageStock returns the ManageStock field value if set, zero value otherwise.
func (o *Product) GetManageStock() string {
	if o == nil || IsNil(o.ManageStock) {
		var ret string
		return ret
	}
	return *o.ManageStock
}

// GetManageStockOk returns a tuple with the ManageStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetManageStockOk() (*string, bool) {
	if o == nil || IsNil(o.ManageStock) {
		return nil, false
	}
	return o.ManageStock, true
}

// HasManageStock returns a boolean if a field has been set.
func (o *Product) HasManageStock() bool {
	if o != nil && !IsNil(o.ManageStock) {
		return true
	}

	return false
}

// SetManageStock gets a reference to the given string and assigns it to the ManageStock field.
func (o *Product) SetManageStock(v string) {
	o.ManageStock = &v
}

// GetIsStockManaged returns the IsStockManaged field value if set, zero value otherwise.
func (o *Product) GetIsStockManaged() bool {
	if o == nil || IsNil(o.IsStockManaged) {
		var ret bool
		return ret
	}
	return *o.IsStockManaged
}

// GetIsStockManagedOk returns a tuple with the IsStockManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetIsStockManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsStockManaged) {
		return nil, false
	}
	return o.IsStockManaged, true
}

// HasIsStockManaged returns a boolean if a field has been set.
func (o *Product) HasIsStockManaged() bool {
	if o != nil && !IsNil(o.IsStockManaged) {
		return true
	}

	return false
}

// SetIsStockManaged gets a reference to the given bool and assigns it to the IsStockManaged field.
func (o *Product) SetIsStockManaged(v bool) {
	o.IsStockManaged = &v
}

// GetCreateAt returns the CreateAt field value if set, zero value otherwise.
func (o *Product) GetCreateAt() A2CDateTime {
	if o == nil || IsNil(o.CreateAt) {
		var ret A2CDateTime
		return ret
	}
	return *o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetCreateAtOk() (*A2CDateTime, bool) {
	if o == nil || IsNil(o.CreateAt) {
		return nil, false
	}
	return o.CreateAt, true
}

// HasCreateAt returns a boolean if a field has been set.
func (o *Product) HasCreateAt() bool {
	if o != nil && !IsNil(o.CreateAt) {
		return true
	}

	return false
}

// SetCreateAt gets a reference to the given A2CDateTime and assigns it to the CreateAt field.
func (o *Product) SetCreateAt(v A2CDateTime) {
	o.CreateAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *Product) GetModifiedAt() A2CDateTime {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret A2CDateTime
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetModifiedAtOk() (*A2CDateTime, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *Product) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given A2CDateTime and assigns it to the ModifiedAt field.
func (o *Product) SetModifiedAt(v A2CDateTime) {
	o.ModifiedAt = &v
}

// GetTaxClassId returns the TaxClassId field value if set, zero value otherwise.
func (o *Product) GetTaxClassId() string {
	if o == nil || IsNil(o.TaxClassId) {
		var ret string
		return ret
	}
	return *o.TaxClassId
}

// GetTaxClassIdOk returns a tuple with the TaxClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetTaxClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxClassId) {
		return nil, false
	}
	return o.TaxClassId, true
}

// HasTaxClassId returns a boolean if a field has been set.
func (o *Product) HasTaxClassId() bool {
	if o != nil && !IsNil(o.TaxClassId) {
		return true
	}

	return false
}

// SetTaxClassId gets a reference to the given string and assigns it to the TaxClassId field.
func (o *Product) SetTaxClassId(v string) {
	o.TaxClassId = &v
}

// GetSpecialPrice returns the SpecialPrice field value if set, zero value otherwise.
func (o *Product) GetSpecialPrice() SpecialPrice {
	if o == nil || IsNil(o.SpecialPrice) {
		var ret SpecialPrice
		return ret
	}
	return *o.SpecialPrice
}

// GetSpecialPriceOk returns a tuple with the SpecialPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetSpecialPriceOk() (*SpecialPrice, bool) {
	if o == nil || IsNil(o.SpecialPrice) {
		return nil, false
	}
	return o.SpecialPrice, true
}

// HasSpecialPrice returns a boolean if a field has been set.
func (o *Product) HasSpecialPrice() bool {
	if o != nil && !IsNil(o.SpecialPrice) {
		return true
	}

	return false
}

// SetSpecialPrice gets a reference to the given SpecialPrice and assigns it to the SpecialPrice field.
func (o *Product) SetSpecialPrice(v SpecialPrice) {
	o.SpecialPrice = &v
}

// GetTierPrice returns the TierPrice field value if set, zero value otherwise.
func (o *Product) GetTierPrice() []ProductTierPrice {
	if o == nil || IsNil(o.TierPrice) {
		var ret []ProductTierPrice
		return ret
	}
	return o.TierPrice
}

// GetTierPriceOk returns a tuple with the TierPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetTierPriceOk() ([]ProductTierPrice, bool) {
	if o == nil || IsNil(o.TierPrice) {
		return nil, false
	}
	return o.TierPrice, true
}

// HasTierPrice returns a boolean if a field has been set.
func (o *Product) HasTierPrice() bool {
	if o != nil && !IsNil(o.TierPrice) {
		return true
	}

	return false
}

// SetTierPrice gets a reference to the given []ProductTierPrice and assigns it to the TierPrice field.
func (o *Product) SetTierPrice(v []ProductTierPrice) {
	o.TierPrice = v
}

// GetGroupPrice returns the GroupPrice field value if set, zero value otherwise.
func (o *Product) GetGroupPrice() []ProductGroupPrice {
	if o == nil || IsNil(o.GroupPrice) {
		var ret []ProductGroupPrice
		return ret
	}
	return o.GroupPrice
}

// GetGroupPriceOk returns a tuple with the GroupPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetGroupPriceOk() ([]ProductGroupPrice, bool) {
	if o == nil || IsNil(o.GroupPrice) {
		return nil, false
	}
	return o.GroupPrice, true
}

// HasGroupPrice returns a boolean if a field has been set.
func (o *Product) HasGroupPrice() bool {
	if o != nil && !IsNil(o.GroupPrice) {
		return true
	}

	return false
}

// SetGroupPrice gets a reference to the given []ProductGroupPrice and assigns it to the GroupPrice field.
func (o *Product) SetGroupPrice(v []ProductGroupPrice) {
	o.GroupPrice = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *Product) GetImages() []Image {
	if o == nil || IsNil(o.Images) {
		var ret []Image
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetImagesOk() ([]Image, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *Product) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []Image and assigns it to the Images field.
func (o *Product) SetImages(v []Image) {
	o.Images = v
}

// GetProductOptions returns the ProductOptions field value if set, zero value otherwise.
func (o *Product) GetProductOptions() []ProductOption {
	if o == nil || IsNil(o.ProductOptions) {
		var ret []ProductOption
		return ret
	}
	return o.ProductOptions
}

// GetProductOptionsOk returns a tuple with the ProductOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetProductOptionsOk() ([]ProductOption, bool) {
	if o == nil || IsNil(o.ProductOptions) {
		return nil, false
	}
	return o.ProductOptions, true
}

// HasProductOptions returns a boolean if a field has been set.
func (o *Product) HasProductOptions() bool {
	if o != nil && !IsNil(o.ProductOptions) {
		return true
	}

	return false
}

// SetProductOptions gets a reference to the given []ProductOption and assigns it to the ProductOptions field.
func (o *Product) SetProductOptions(v []ProductOption) {
	o.ProductOptions = v
}

// GetUUpc returns the UUpc field value if set, zero value otherwise.
func (o *Product) GetUUpc() string {
	if o == nil || IsNil(o.UUpc) {
		var ret string
		return ret
	}
	return *o.UUpc
}

// GetUUpcOk returns a tuple with the UUpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUUpcOk() (*string, bool) {
	if o == nil || IsNil(o.UUpc) {
		return nil, false
	}
	return o.UUpc, true
}

// HasUUpc returns a boolean if a field has been set.
func (o *Product) HasUUpc() bool {
	if o != nil && !IsNil(o.UUpc) {
		return true
	}

	return false
}

// SetUUpc gets a reference to the given string and assigns it to the UUpc field.
func (o *Product) SetUUpc(v string) {
	o.UUpc = &v
}

// GetUMpn returns the UMpn field value if set, zero value otherwise.
func (o *Product) GetUMpn() string {
	if o == nil || IsNil(o.UMpn) {
		var ret string
		return ret
	}
	return *o.UMpn
}

// GetUMpnOk returns a tuple with the UMpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUMpnOk() (*string, bool) {
	if o == nil || IsNil(o.UMpn) {
		return nil, false
	}
	return o.UMpn, true
}

// HasUMpn returns a boolean if a field has been set.
func (o *Product) HasUMpn() bool {
	if o != nil && !IsNil(o.UMpn) {
		return true
	}

	return false
}

// SetUMpn gets a reference to the given string and assigns it to the UMpn field.
func (o *Product) SetUMpn(v string) {
	o.UMpn = &v
}

// GetUGtin returns the UGtin field value if set, zero value otherwise.
func (o *Product) GetUGtin() string {
	if o == nil || IsNil(o.UGtin) {
		var ret string
		return ret
	}
	return *o.UGtin
}

// GetUGtinOk returns a tuple with the UGtin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUGtinOk() (*string, bool) {
	if o == nil || IsNil(o.UGtin) {
		return nil, false
	}
	return o.UGtin, true
}

// HasUGtin returns a boolean if a field has been set.
func (o *Product) HasUGtin() bool {
	if o != nil && !IsNil(o.UGtin) {
		return true
	}

	return false
}

// SetUGtin gets a reference to the given string and assigns it to the UGtin field.
func (o *Product) SetUGtin(v string) {
	o.UGtin = &v
}

// GetUIsbn returns the UIsbn field value if set, zero value otherwise.
func (o *Product) GetUIsbn() string {
	if o == nil || IsNil(o.UIsbn) {
		var ret string
		return ret
	}
	return *o.UIsbn
}

// GetUIsbnOk returns a tuple with the UIsbn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUIsbnOk() (*string, bool) {
	if o == nil || IsNil(o.UIsbn) {
		return nil, false
	}
	return o.UIsbn, true
}

// HasUIsbn returns a boolean if a field has been set.
func (o *Product) HasUIsbn() bool {
	if o != nil && !IsNil(o.UIsbn) {
		return true
	}

	return false
}

// SetUIsbn gets a reference to the given string and assigns it to the UIsbn field.
func (o *Product) SetUIsbn(v string) {
	o.UIsbn = &v
}

// GetUEan returns the UEan field value if set, zero value otherwise.
func (o *Product) GetUEan() string {
	if o == nil || IsNil(o.UEan) {
		var ret string
		return ret
	}
	return *o.UEan
}

// GetUEanOk returns a tuple with the UEan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUEanOk() (*string, bool) {
	if o == nil || IsNil(o.UEan) {
		return nil, false
	}
	return o.UEan, true
}

// HasUEan returns a boolean if a field has been set.
func (o *Product) HasUEan() bool {
	if o != nil && !IsNil(o.UEan) {
		return true
	}

	return false
}

// SetUEan gets a reference to the given string and assigns it to the UEan field.
func (o *Product) SetUEan(v string) {
	o.UEan = &v
}

// GetRelatedProductsIds returns the RelatedProductsIds field value if set, zero value otherwise.
func (o *Product) GetRelatedProductsIds() []string {
	if o == nil || IsNil(o.RelatedProductsIds) {
		var ret []string
		return ret
	}
	return o.RelatedProductsIds
}

// GetRelatedProductsIdsOk returns a tuple with the RelatedProductsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetRelatedProductsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RelatedProductsIds) {
		return nil, false
	}
	return o.RelatedProductsIds, true
}

// HasRelatedProductsIds returns a boolean if a field has been set.
func (o *Product) HasRelatedProductsIds() bool {
	if o != nil && !IsNil(o.RelatedProductsIds) {
		return true
	}

	return false
}

// SetRelatedProductsIds gets a reference to the given []string and assigns it to the RelatedProductsIds field.
func (o *Product) SetRelatedProductsIds(v []string) {
	o.RelatedProductsIds = v
}

// GetUpSellProductsIds returns the UpSellProductsIds field value if set, zero value otherwise.
func (o *Product) GetUpSellProductsIds() []string {
	if o == nil || IsNil(o.UpSellProductsIds) {
		var ret []string
		return ret
	}
	return o.UpSellProductsIds
}

// GetUpSellProductsIdsOk returns a tuple with the UpSellProductsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetUpSellProductsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UpSellProductsIds) {
		return nil, false
	}
	return o.UpSellProductsIds, true
}

// HasUpSellProductsIds returns a boolean if a field has been set.
func (o *Product) HasUpSellProductsIds() bool {
	if o != nil && !IsNil(o.UpSellProductsIds) {
		return true
	}

	return false
}

// SetUpSellProductsIds gets a reference to the given []string and assigns it to the UpSellProductsIds field.
func (o *Product) SetUpSellProductsIds(v []string) {
	o.UpSellProductsIds = v
}

// GetCrossSellProductsIds returns the CrossSellProductsIds field value if set, zero value otherwise.
func (o *Product) GetCrossSellProductsIds() []string {
	if o == nil || IsNil(o.CrossSellProductsIds) {
		var ret []string
		return ret
	}
	return o.CrossSellProductsIds
}

// GetCrossSellProductsIdsOk returns a tuple with the CrossSellProductsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetCrossSellProductsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CrossSellProductsIds) {
		return nil, false
	}
	return o.CrossSellProductsIds, true
}

// HasCrossSellProductsIds returns a boolean if a field has been set.
func (o *Product) HasCrossSellProductsIds() bool {
	if o != nil && !IsNil(o.CrossSellProductsIds) {
		return true
	}

	return false
}

// SetCrossSellProductsIds gets a reference to the given []string and assigns it to the CrossSellProductsIds field.
func (o *Product) SetCrossSellProductsIds(v []string) {
	o.CrossSellProductsIds = v
}

// GetDimensionsUnit returns the DimensionsUnit field value if set, zero value otherwise.
func (o *Product) GetDimensionsUnit() string {
	if o == nil || IsNil(o.DimensionsUnit) {
		var ret string
		return ret
	}
	return *o.DimensionsUnit
}

// GetDimensionsUnitOk returns a tuple with the DimensionsUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetDimensionsUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionsUnit) {
		return nil, false
	}
	return o.DimensionsUnit, true
}

// HasDimensionsUnit returns a boolean if a field has been set.
func (o *Product) HasDimensionsUnit() bool {
	if o != nil && !IsNil(o.DimensionsUnit) {
		return true
	}

	return false
}

// SetDimensionsUnit gets a reference to the given string and assigns it to the DimensionsUnit field.
func (o *Product) SetDimensionsUnit(v string) {
	o.DimensionsUnit = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *Product) GetWidth() float32 {
	if o == nil || IsNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetWidthOk() (*float32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *Product) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *Product) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *Product) GetHeight() float32 {
	if o == nil || IsNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *Product) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *Product) SetHeight(v float32) {
	o.Height = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *Product) GetLength() float32 {
	if o == nil || IsNil(o.Length) {
		var ret float32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *Product) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given float32 and assigns it to the Length field.
func (o *Product) SetLength(v float32) {
	o.Length = &v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *Product) GetDiscounts() []Discount {
	if o == nil || IsNil(o.Discounts) {
		var ret []Discount
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetDiscountsOk() ([]Discount, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *Product) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []Discount and assigns it to the Discounts field.
func (o *Product) SetDiscounts(v []Discount) {
	o.Discounts = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *Product) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *Product) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *Product) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Product) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Product) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Product) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o Product) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Product) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UModel) {
		toSerialize["u_model"] = o.UModel
	}
	if !IsNil(o.USku) {
		toSerialize["u_sku"] = o.USku
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["short_description"] = o.ShortDescription
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.AdvancedPrice) {
		toSerialize["advanced_price"] = o.AdvancedPrice
	}
	if !IsNil(o.CostPrice) {
		toSerialize["cost_price"] = o.CostPrice
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.GroupItems) {
		toSerialize["group_items"] = o.GroupItems
	}
	if !IsNil(o.UBrandId) {
		toSerialize["u_brand_id"] = o.UBrandId
	}
	if !IsNil(o.UBrand) {
		toSerialize["u_brand"] = o.UBrand
	}
	if !IsNil(o.CategoriesIds) {
		toSerialize["categories_ids"] = o.CategoriesIds
	}
	if !IsNil(o.StoresIds) {
		toSerialize["stores_ids"] = o.StoresIds
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.SeoUrl) {
		toSerialize["seo_url"] = o.SeoUrl
	}
	if !IsNil(o.MetaTitle) {
		toSerialize["meta_title"] = o.MetaTitle
	}
	if !IsNil(o.MetaKeywords) {
		toSerialize["meta_keywords"] = o.MetaKeywords
	}
	if !IsNil(o.MetaDescription) {
		toSerialize["meta_description"] = o.MetaDescription
	}
	if !IsNil(o.AvailSale) {
		toSerialize["avail_sale"] = o.AvailSale
	}
	if !IsNil(o.AvailView) {
		toSerialize["avail_view"] = o.AvailView
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["is_virtual"] = o.IsVirtual
	}
	if !IsNil(o.IsDownloadable) {
		toSerialize["is_downloadable"] = o.IsDownloadable
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.WeightUnit) {
		toSerialize["weight_unit"] = o.WeightUnit
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.InStock) {
		toSerialize["in_stock"] = o.InStock
	}
	if !IsNil(o.Backorders) {
		toSerialize["backorders"] = o.Backorders
	}
	if !IsNil(o.ManageStock) {
		toSerialize["manage_stock"] = o.ManageStock
	}
	if !IsNil(o.IsStockManaged) {
		toSerialize["is_stock_managed"] = o.IsStockManaged
	}
	if !IsNil(o.CreateAt) {
		toSerialize["create_at"] = o.CreateAt
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if !IsNil(o.TaxClassId) {
		toSerialize["tax_class_id"] = o.TaxClassId
	}
	if !IsNil(o.SpecialPrice) {
		toSerialize["special_price"] = o.SpecialPrice
	}
	if !IsNil(o.TierPrice) {
		toSerialize["tier_price"] = o.TierPrice
	}
	if !IsNil(o.GroupPrice) {
		toSerialize["group_price"] = o.GroupPrice
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.ProductOptions) {
		toSerialize["product_options"] = o.ProductOptions
	}
	if !IsNil(o.UUpc) {
		toSerialize["u_upc"] = o.UUpc
	}
	if !IsNil(o.UMpn) {
		toSerialize["u_mpn"] = o.UMpn
	}
	if !IsNil(o.UGtin) {
		toSerialize["u_gtin"] = o.UGtin
	}
	if !IsNil(o.UIsbn) {
		toSerialize["u_isbn"] = o.UIsbn
	}
	if !IsNil(o.UEan) {
		toSerialize["u_ean"] = o.UEan
	}
	if !IsNil(o.RelatedProductsIds) {
		toSerialize["related_products_ids"] = o.RelatedProductsIds
	}
	if !IsNil(o.UpSellProductsIds) {
		toSerialize["up_sell_products_ids"] = o.UpSellProductsIds
	}
	if !IsNil(o.CrossSellProductsIds) {
		toSerialize["cross_sell_products_ids"] = o.CrossSellProductsIds
	}
	if !IsNil(o.DimensionsUnit) {
		toSerialize["dimensions_unit"] = o.DimensionsUnit
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableProduct struct {
	value *Product
	isSet bool
}

func (v NullableProduct) Get() *Product {
	return v.value
}

func (v *NullableProduct) Set(val *Product) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct(val *Product) *NullableProduct {
	return &NullableProduct{value: val, isSet: true}
}

func (v NullableProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


