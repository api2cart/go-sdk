/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CategoryAddBatchPayloadInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryAddBatchPayloadInner{}

// CategoryAddBatchPayloadInner struct for CategoryAddBatchPayloadInner
type CategoryAddBatchPayloadInner struct {
	Name string `json:"name"`
	Avail *bool `json:"avail,omitempty"`
	Description *string `json:"description,omitempty"`
	MetaTitle *string `json:"meta_title,omitempty"`
	MetaDescription *string `json:"meta_description,omitempty"`
	MetaKeywords []string `json:"meta_keywords,omitempty"`
	ParentId *string `json:"parent_id,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	SeoUrl *string `json:"seo_url,omitempty"`
	StoreId *string `json:"store_id,omitempty"`
	Images []CategoryAddBatchPayloadInnerImagesInner `json:"images,omitempty"`
	StoresIds []string `json:"stores_ids,omitempty"`
}

type _CategoryAddBatchPayloadInner CategoryAddBatchPayloadInner

// NewCategoryAddBatchPayloadInner instantiates a new CategoryAddBatchPayloadInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryAddBatchPayloadInner(name string) *CategoryAddBatchPayloadInner {
	this := CategoryAddBatchPayloadInner{}
	this.Name = name
	return &this
}

// NewCategoryAddBatchPayloadInnerWithDefaults instantiates a new CategoryAddBatchPayloadInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryAddBatchPayloadInnerWithDefaults() *CategoryAddBatchPayloadInner {
	this := CategoryAddBatchPayloadInner{}
	return &this
}

// GetName returns the Name field value
func (o *CategoryAddBatchPayloadInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CategoryAddBatchPayloadInner) SetName(v string) {
	o.Name = v
}

// GetAvail returns the Avail field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetAvail() bool {
	if o == nil || IsNil(o.Avail) {
		var ret bool
		return ret
	}
	return *o.Avail
}

// GetAvailOk returns a tuple with the Avail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetAvailOk() (*bool, bool) {
	if o == nil || IsNil(o.Avail) {
		return nil, false
	}
	return o.Avail, true
}

// HasAvail returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasAvail() bool {
	if o != nil && !IsNil(o.Avail) {
		return true
	}

	return false
}

// SetAvail gets a reference to the given bool and assigns it to the Avail field.
func (o *CategoryAddBatchPayloadInner) SetAvail(v bool) {
	o.Avail = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CategoryAddBatchPayloadInner) SetDescription(v string) {
	o.Description = &v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle) {
		var ret string
		return ret
	}
	return *o.MetaTitle
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetMetaTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MetaTitle) {
		return nil, false
	}
	return o.MetaTitle, true
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasMetaTitle() bool {
	if o != nil && !IsNil(o.MetaTitle) {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given string and assigns it to the MetaTitle field.
func (o *CategoryAddBatchPayloadInner) SetMetaTitle(v string) {
	o.MetaTitle = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription) {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetaDescription) {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasMetaDescription() bool {
	if o != nil && !IsNil(o.MetaDescription) {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *CategoryAddBatchPayloadInner) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetMetaKeywords() []string {
	if o == nil || IsNil(o.MetaKeywords) {
		var ret []string
		return ret
	}
	return o.MetaKeywords
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetMetaKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.MetaKeywords) {
		return nil, false
	}
	return o.MetaKeywords, true
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasMetaKeywords() bool {
	if o != nil && !IsNil(o.MetaKeywords) {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given []string and assigns it to the MetaKeywords field.
func (o *CategoryAddBatchPayloadInner) SetMetaKeywords(v []string) {
	o.MetaKeywords = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CategoryAddBatchPayloadInner) SetParentId(v string) {
	o.ParentId = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *CategoryAddBatchPayloadInner) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetSeoUrl returns the SeoUrl field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetSeoUrl() string {
	if o == nil || IsNil(o.SeoUrl) {
		var ret string
		return ret
	}
	return *o.SeoUrl
}

// GetSeoUrlOk returns a tuple with the SeoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetSeoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SeoUrl) {
		return nil, false
	}
	return o.SeoUrl, true
}

// HasSeoUrl returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasSeoUrl() bool {
	if o != nil && !IsNil(o.SeoUrl) {
		return true
	}

	return false
}

// SetSeoUrl gets a reference to the given string and assigns it to the SeoUrl field.
func (o *CategoryAddBatchPayloadInner) SetSeoUrl(v string) {
	o.SeoUrl = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *CategoryAddBatchPayloadInner) SetStoreId(v string) {
	o.StoreId = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetImages() []CategoryAddBatchPayloadInnerImagesInner {
	if o == nil || IsNil(o.Images) {
		var ret []CategoryAddBatchPayloadInnerImagesInner
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetImagesOk() ([]CategoryAddBatchPayloadInnerImagesInner, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []CategoryAddBatchPayloadInnerImagesInner and assigns it to the Images field.
func (o *CategoryAddBatchPayloadInner) SetImages(v []CategoryAddBatchPayloadInnerImagesInner) {
	o.Images = v
}

// GetStoresIds returns the StoresIds field value if set, zero value otherwise.
func (o *CategoryAddBatchPayloadInner) GetStoresIds() []string {
	if o == nil || IsNil(o.StoresIds) {
		var ret []string
		return ret
	}
	return o.StoresIds
}

// GetStoresIdsOk returns a tuple with the StoresIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAddBatchPayloadInner) GetStoresIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.StoresIds) {
		return nil, false
	}
	return o.StoresIds, true
}

// HasStoresIds returns a boolean if a field has been set.
func (o *CategoryAddBatchPayloadInner) HasStoresIds() bool {
	if o != nil && !IsNil(o.StoresIds) {
		return true
	}

	return false
}

// SetStoresIds gets a reference to the given []string and assigns it to the StoresIds field.
func (o *CategoryAddBatchPayloadInner) SetStoresIds(v []string) {
	o.StoresIds = v
}

func (o CategoryAddBatchPayloadInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryAddBatchPayloadInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Avail) {
		toSerialize["avail"] = o.Avail
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MetaTitle) {
		toSerialize["meta_title"] = o.MetaTitle
	}
	if !IsNil(o.MetaDescription) {
		toSerialize["meta_description"] = o.MetaDescription
	}
	if !IsNil(o.MetaKeywords) {
		toSerialize["meta_keywords"] = o.MetaKeywords
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.SeoUrl) {
		toSerialize["seo_url"] = o.SeoUrl
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.StoresIds) {
		toSerialize["stores_ids"] = o.StoresIds
	}
	return toSerialize, nil
}

func (o *CategoryAddBatchPayloadInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCategoryAddBatchPayloadInner := _CategoryAddBatchPayloadInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCategoryAddBatchPayloadInner)

	if err != nil {
		return err
	}

	*o = CategoryAddBatchPayloadInner(varCategoryAddBatchPayloadInner)

	return err
}

type NullableCategoryAddBatchPayloadInner struct {
	value *CategoryAddBatchPayloadInner
	isSet bool
}

func (v NullableCategoryAddBatchPayloadInner) Get() *CategoryAddBatchPayloadInner {
	return v.value
}

func (v *NullableCategoryAddBatchPayloadInner) Set(val *CategoryAddBatchPayloadInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryAddBatchPayloadInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryAddBatchPayloadInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryAddBatchPayloadInner(val *CategoryAddBatchPayloadInner) *NullableCategoryAddBatchPayloadInner {
	return &NullableCategoryAddBatchPayloadInner{value: val, isSet: true}
}

func (v NullableCategoryAddBatchPayloadInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryAddBatchPayloadInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


