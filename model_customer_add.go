/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerAdd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerAdd{}

// CustomerAdd struct for CustomerAdd
type CustomerAdd struct {
	// Defines customer's email
	Email string `json:"email"`
	// Defines customer's first name
	FirstName string `json:"first_name"`
	// Defines customer's last name
	LastName string `json:"last_name"`
	// Defines customer's unique password
	Password *string `json:"password,omitempty"`
	// Defines the group where the customer
	Group *string `json:"group,omitempty"`
	// Groups that will be assigned to a customer
	GroupIds *string `json:"group_ids,omitempty"`
	// Entity's date creation
	CreatedTime *string `json:"created_time,omitempty"`
	// Entity's date modification
	ModifiedTime *string `json:"modified_time,omitempty"`
	// Specifies customer's login name
	Login *string `json:"login,omitempty"`
	// Defines customer's last login time
	LastLogin *string `json:"last_login,omitempty"`
	// Defines customer's birthday
	BirthDay *string `json:"birth_day,omitempty"`
	// Defines customer's status
	Status *string `json:"status,omitempty"`
	// Defines whether the newsletter subscription is available for the user
	NewsLetterSubscription *bool `json:"news_letter_subscription,omitempty"`
	// Defines consents to notifications
	Consents []CustomerAddConsentsInner `json:"consents,omitempty"`
	// Defines customer's gender
	Gender *string `json:"gender,omitempty"`
	// Link to customer website
	Website *string `json:"website,omitempty"`
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Defines customer's fax
	Fax *string `json:"fax,omitempty"`
	// Defines customer's company
	Company *string `json:"company,omitempty"`
	// Defines customer's phone number
	Phone *string `json:"phone,omitempty"`
	// The customer note.
	Note *string `json:"note,omitempty"`
	// Specifies ISO code or name of country
	Country *string `json:"country,omitempty"`
	Address []CustomerAddAddressInner `json:"address,omitempty"`
}

type _CustomerAdd CustomerAdd

// NewCustomerAdd instantiates a new CustomerAdd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerAdd(email string, firstName string, lastName string) *CustomerAdd {
	this := CustomerAdd{}
	this.Email = email
	this.FirstName = firstName
	this.LastName = lastName
	var status string = "enabled"
	this.Status = &status
	var newsLetterSubscription bool = false
	this.NewsLetterSubscription = &newsLetterSubscription
	return &this
}

// NewCustomerAddWithDefaults instantiates a new CustomerAdd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerAddWithDefaults() *CustomerAdd {
	this := CustomerAdd{}
	var status string = "enabled"
	this.Status = &status
	var newsLetterSubscription bool = false
	this.NewsLetterSubscription = &newsLetterSubscription
	return &this
}

// GetEmail returns the Email field value
func (o *CustomerAdd) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CustomerAdd) SetEmail(v string) {
	o.Email = v
}

// GetFirstName returns the FirstName field value
func (o *CustomerAdd) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CustomerAdd) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *CustomerAdd) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CustomerAdd) SetLastName(v string) {
	o.LastName = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CustomerAdd) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CustomerAdd) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CustomerAdd) SetPassword(v string) {
	o.Password = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *CustomerAdd) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *CustomerAdd) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *CustomerAdd) SetGroup(v string) {
	o.Group = &v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *CustomerAdd) GetGroupIds() string {
	if o == nil || IsNil(o.GroupIds) {
		var ret string
		return ret
	}
	return *o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetGroupIdsOk() (*string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *CustomerAdd) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given string and assigns it to the GroupIds field.
func (o *CustomerAdd) SetGroupIds(v string) {
	o.GroupIds = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *CustomerAdd) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *CustomerAdd) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *CustomerAdd) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *CustomerAdd) GetModifiedTime() string {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret string
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetModifiedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *CustomerAdd) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given string and assigns it to the ModifiedTime field.
func (o *CustomerAdd) SetModifiedTime(v string) {
	o.ModifiedTime = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *CustomerAdd) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *CustomerAdd) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *CustomerAdd) SetLogin(v string) {
	o.Login = &v
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *CustomerAdd) GetLastLogin() string {
	if o == nil || IsNil(o.LastLogin) {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetLastLoginOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *CustomerAdd) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *CustomerAdd) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetBirthDay returns the BirthDay field value if set, zero value otherwise.
func (o *CustomerAdd) GetBirthDay() string {
	if o == nil || IsNil(o.BirthDay) {
		var ret string
		return ret
	}
	return *o.BirthDay
}

// GetBirthDayOk returns a tuple with the BirthDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetBirthDayOk() (*string, bool) {
	if o == nil || IsNil(o.BirthDay) {
		return nil, false
	}
	return o.BirthDay, true
}

// HasBirthDay returns a boolean if a field has been set.
func (o *CustomerAdd) HasBirthDay() bool {
	if o != nil && !IsNil(o.BirthDay) {
		return true
	}

	return false
}

// SetBirthDay gets a reference to the given string and assigns it to the BirthDay field.
func (o *CustomerAdd) SetBirthDay(v string) {
	o.BirthDay = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CustomerAdd) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CustomerAdd) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CustomerAdd) SetStatus(v string) {
	o.Status = &v
}

// GetNewsLetterSubscription returns the NewsLetterSubscription field value if set, zero value otherwise.
func (o *CustomerAdd) GetNewsLetterSubscription() bool {
	if o == nil || IsNil(o.NewsLetterSubscription) {
		var ret bool
		return ret
	}
	return *o.NewsLetterSubscription
}

// GetNewsLetterSubscriptionOk returns a tuple with the NewsLetterSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetNewsLetterSubscriptionOk() (*bool, bool) {
	if o == nil || IsNil(o.NewsLetterSubscription) {
		return nil, false
	}
	return o.NewsLetterSubscription, true
}

// HasNewsLetterSubscription returns a boolean if a field has been set.
func (o *CustomerAdd) HasNewsLetterSubscription() bool {
	if o != nil && !IsNil(o.NewsLetterSubscription) {
		return true
	}

	return false
}

// SetNewsLetterSubscription gets a reference to the given bool and assigns it to the NewsLetterSubscription field.
func (o *CustomerAdd) SetNewsLetterSubscription(v bool) {
	o.NewsLetterSubscription = &v
}

// GetConsents returns the Consents field value if set, zero value otherwise.
func (o *CustomerAdd) GetConsents() []CustomerAddConsentsInner {
	if o == nil || IsNil(o.Consents) {
		var ret []CustomerAddConsentsInner
		return ret
	}
	return o.Consents
}

// GetConsentsOk returns a tuple with the Consents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetConsentsOk() ([]CustomerAddConsentsInner, bool) {
	if o == nil || IsNil(o.Consents) {
		return nil, false
	}
	return o.Consents, true
}

// HasConsents returns a boolean if a field has been set.
func (o *CustomerAdd) HasConsents() bool {
	if o != nil && !IsNil(o.Consents) {
		return true
	}

	return false
}

// SetConsents gets a reference to the given []CustomerAddConsentsInner and assigns it to the Consents field.
func (o *CustomerAdd) SetConsents(v []CustomerAddConsentsInner) {
	o.Consents = v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *CustomerAdd) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *CustomerAdd) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *CustomerAdd) SetGender(v string) {
	o.Gender = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CustomerAdd) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CustomerAdd) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CustomerAdd) SetWebsite(v string) {
	o.Website = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *CustomerAdd) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *CustomerAdd) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *CustomerAdd) SetStoreId(v string) {
	o.StoreId = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *CustomerAdd) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *CustomerAdd) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *CustomerAdd) SetFax(v string) {
	o.Fax = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *CustomerAdd) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *CustomerAdd) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *CustomerAdd) SetCompany(v string) {
	o.Company = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CustomerAdd) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CustomerAdd) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CustomerAdd) SetPhone(v string) {
	o.Phone = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CustomerAdd) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CustomerAdd) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CustomerAdd) SetNote(v string) {
	o.Note = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CustomerAdd) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CustomerAdd) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CustomerAdd) SetCountry(v string) {
	o.Country = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CustomerAdd) GetAddress() []CustomerAddAddressInner {
	if o == nil || IsNil(o.Address) {
		var ret []CustomerAddAddressInner
		return ret
	}
	return o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAdd) GetAddressOk() ([]CustomerAddAddressInner, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CustomerAdd) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given []CustomerAddAddressInner and assigns it to the Address field.
func (o *CustomerAdd) SetAddress(v []CustomerAddAddressInner) {
	o.Address = v
}

func (o CustomerAdd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerAdd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.GroupIds) {
		toSerialize["group_ids"] = o.GroupIds
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.LastLogin) {
		toSerialize["last_login"] = o.LastLogin
	}
	if !IsNil(o.BirthDay) {
		toSerialize["birth_day"] = o.BirthDay
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.NewsLetterSubscription) {
		toSerialize["news_letter_subscription"] = o.NewsLetterSubscription
	}
	if !IsNil(o.Consents) {
		toSerialize["consents"] = o.Consents
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

func (o *CustomerAdd) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"first_name",
		"last_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerAdd := _CustomerAdd{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerAdd)

	if err != nil {
		return err
	}

	*o = CustomerAdd(varCustomerAdd)

	return err
}

type NullableCustomerAdd struct {
	value *CustomerAdd
	isSet bool
}

func (v NullableCustomerAdd) Get() *CustomerAdd {
	return v.value
}

func (v *NullableCustomerAdd) Set(val *CustomerAdd) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerAdd) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerAdd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerAdd(val *CustomerAdd) *NullableCustomerAdd {
	return &NullableCustomerAdd{value: val, isSet: true}
}

func (v NullableCustomerAdd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerAdd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


