/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Child type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Child{}

// Child struct for Child
type Child struct {
	Id *string `json:"id,omitempty"`
	ParentId *string `json:"parent_id,omitempty"`
	Sku *string `json:"sku,omitempty"`
	Upc *string `json:"upc,omitempty"`
	Ean *string `json:"ean,omitempty"`
	Mpn *string `json:"mpn,omitempty"`
	Gtin *string `json:"gtin,omitempty"`
	Isbn *string `json:"isbn,omitempty"`
	Url *string `json:"url,omitempty"`
	SeoUrl *string `json:"seo_url,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	CreatedTime *A2CDateTime `json:"created_time,omitempty"`
	ModifiedTime *A2CDateTime `json:"modified_time,omitempty"`
	Name *string `json:"name,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	FullDescription *string `json:"full_description,omitempty"`
	Images []Image `json:"images,omitempty"`
	Combination []ProductChildItemCombination `json:"combination,omitempty"`
	DefaultPrice *float32 `json:"default_price,omitempty"`
	CostPrice *float32 `json:"cost_price,omitempty"`
	ListPrice *float32 `json:"list_price,omitempty"`
	WholesalePrice *float32 `json:"wholesale_price,omitempty"`
	AdvancedPrice []ProductAdvancedPrice `json:"advanced_price,omitempty"`
	TaxClassId *string `json:"tax_class_id,omitempty"`
	AvailForSale *bool `json:"avail_for_sale,omitempty"`
	AllowBackorders *bool `json:"allow_backorders,omitempty"`
	InStock *bool `json:"in_stock,omitempty"`
	OnSale *bool `json:"on_sale,omitempty"`
	ManageStock *bool `json:"manage_stock,omitempty"`
	InventoryLevel *float32 `json:"inventory_level,omitempty"`
	Inventory []ProductInventory `json:"inventory,omitempty"`
	MinQuantity *float32 `json:"min_quantity,omitempty"`
	DefaultQtyInPack *float32 `json:"default_qty_in_pack,omitempty"`
	IsQtyInPackFixed *bool `json:"is_qty_in_pack_fixed,omitempty"`
	WeightUnit *string `json:"weight_unit,omitempty"`
	Weight *float32 `json:"weight,omitempty"`
	DimensionsUnit *string `json:"dimensions_unit,omitempty"`
	Width *float32 `json:"width,omitempty"`
	Height *float32 `json:"height,omitempty"`
	Length *float32 `json:"length,omitempty"`
	MetaTitle *string `json:"meta_title,omitempty"`
	MetaDescription *string `json:"meta_description,omitempty"`
	MetaKeywords *string `json:"meta_keywords,omitempty"`
	Discounts []Discount `json:"discounts,omitempty"`
	IsVirtual *bool `json:"is_virtual,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewChild instantiates a new Child object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChild() *Child {
	this := Child{}
	return &this
}

// NewChildWithDefaults instantiates a new Child object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChildWithDefaults() *Child {
	this := Child{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Child) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Child) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Child) SetId(v string) {
	o.Id = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *Child) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *Child) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *Child) SetParentId(v string) {
	o.ParentId = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *Child) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *Child) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *Child) SetSku(v string) {
	o.Sku = &v
}

// GetUpc returns the Upc field value if set, zero value otherwise.
func (o *Child) GetUpc() string {
	if o == nil || IsNil(o.Upc) {
		var ret string
		return ret
	}
	return *o.Upc
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetUpcOk() (*string, bool) {
	if o == nil || IsNil(o.Upc) {
		return nil, false
	}
	return o.Upc, true
}

// HasUpc returns a boolean if a field has been set.
func (o *Child) HasUpc() bool {
	if o != nil && !IsNil(o.Upc) {
		return true
	}

	return false
}

// SetUpc gets a reference to the given string and assigns it to the Upc field.
func (o *Child) SetUpc(v string) {
	o.Upc = &v
}

// GetEan returns the Ean field value if set, zero value otherwise.
func (o *Child) GetEan() string {
	if o == nil || IsNil(o.Ean) {
		var ret string
		return ret
	}
	return *o.Ean
}

// GetEanOk returns a tuple with the Ean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetEanOk() (*string, bool) {
	if o == nil || IsNil(o.Ean) {
		return nil, false
	}
	return o.Ean, true
}

// HasEan returns a boolean if a field has been set.
func (o *Child) HasEan() bool {
	if o != nil && !IsNil(o.Ean) {
		return true
	}

	return false
}

// SetEan gets a reference to the given string and assigns it to the Ean field.
func (o *Child) SetEan(v string) {
	o.Ean = &v
}

// GetMpn returns the Mpn field value if set, zero value otherwise.
func (o *Child) GetMpn() string {
	if o == nil || IsNil(o.Mpn) {
		var ret string
		return ret
	}
	return *o.Mpn
}

// GetMpnOk returns a tuple with the Mpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetMpnOk() (*string, bool) {
	if o == nil || IsNil(o.Mpn) {
		return nil, false
	}
	return o.Mpn, true
}

// HasMpn returns a boolean if a field has been set.
func (o *Child) HasMpn() bool {
	if o != nil && !IsNil(o.Mpn) {
		return true
	}

	return false
}

// SetMpn gets a reference to the given string and assigns it to the Mpn field.
func (o *Child) SetMpn(v string) {
	o.Mpn = &v
}

// GetGtin returns the Gtin field value if set, zero value otherwise.
func (o *Child) GetGtin() string {
	if o == nil || IsNil(o.Gtin) {
		var ret string
		return ret
	}
	return *o.Gtin
}

// GetGtinOk returns a tuple with the Gtin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetGtinOk() (*string, bool) {
	if o == nil || IsNil(o.Gtin) {
		return nil, false
	}
	return o.Gtin, true
}

// HasGtin returns a boolean if a field has been set.
func (o *Child) HasGtin() bool {
	if o != nil && !IsNil(o.Gtin) {
		return true
	}

	return false
}

// SetGtin gets a reference to the given string and assigns it to the Gtin field.
func (o *Child) SetGtin(v string) {
	o.Gtin = &v
}

// GetIsbn returns the Isbn field value if set, zero value otherwise.
func (o *Child) GetIsbn() string {
	if o == nil || IsNil(o.Isbn) {
		var ret string
		return ret
	}
	return *o.Isbn
}

// GetIsbnOk returns a tuple with the Isbn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetIsbnOk() (*string, bool) {
	if o == nil || IsNil(o.Isbn) {
		return nil, false
	}
	return o.Isbn, true
}

// HasIsbn returns a boolean if a field has been set.
func (o *Child) HasIsbn() bool {
	if o != nil && !IsNil(o.Isbn) {
		return true
	}

	return false
}

// SetIsbn gets a reference to the given string and assigns it to the Isbn field.
func (o *Child) SetIsbn(v string) {
	o.Isbn = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Child) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Child) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Child) SetUrl(v string) {
	o.Url = &v
}

// GetSeoUrl returns the SeoUrl field value if set, zero value otherwise.
func (o *Child) GetSeoUrl() string {
	if o == nil || IsNil(o.SeoUrl) {
		var ret string
		return ret
	}
	return *o.SeoUrl
}

// GetSeoUrlOk returns a tuple with the SeoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetSeoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SeoUrl) {
		return nil, false
	}
	return o.SeoUrl, true
}

// HasSeoUrl returns a boolean if a field has been set.
func (o *Child) HasSeoUrl() bool {
	if o != nil && !IsNil(o.SeoUrl) {
		return true
	}

	return false
}

// SetSeoUrl gets a reference to the given string and assigns it to the SeoUrl field.
func (o *Child) SetSeoUrl(v string) {
	o.SeoUrl = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *Child) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *Child) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *Child) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Child) GetCreatedTime() A2CDateTime {
	if o == nil || IsNil(o.CreatedTime) {
		var ret A2CDateTime
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetCreatedTimeOk() (*A2CDateTime, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Child) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given A2CDateTime and assigns it to the CreatedTime field.
func (o *Child) SetCreatedTime(v A2CDateTime) {
	o.CreatedTime = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *Child) GetModifiedTime() A2CDateTime {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret A2CDateTime
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetModifiedTimeOk() (*A2CDateTime, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *Child) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given A2CDateTime and assigns it to the ModifiedTime field.
func (o *Child) SetModifiedTime(v A2CDateTime) {
	o.ModifiedTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Child) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Child) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Child) SetName(v string) {
	o.Name = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *Child) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *Child) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *Child) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetFullDescription returns the FullDescription field value if set, zero value otherwise.
func (o *Child) GetFullDescription() string {
	if o == nil || IsNil(o.FullDescription) {
		var ret string
		return ret
	}
	return *o.FullDescription
}

// GetFullDescriptionOk returns a tuple with the FullDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetFullDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FullDescription) {
		return nil, false
	}
	return o.FullDescription, true
}

// HasFullDescription returns a boolean if a field has been set.
func (o *Child) HasFullDescription() bool {
	if o != nil && !IsNil(o.FullDescription) {
		return true
	}

	return false
}

// SetFullDescription gets a reference to the given string and assigns it to the FullDescription field.
func (o *Child) SetFullDescription(v string) {
	o.FullDescription = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *Child) GetImages() []Image {
	if o == nil || IsNil(o.Images) {
		var ret []Image
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetImagesOk() ([]Image, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *Child) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []Image and assigns it to the Images field.
func (o *Child) SetImages(v []Image) {
	o.Images = v
}

// GetCombination returns the Combination field value if set, zero value otherwise.
func (o *Child) GetCombination() []ProductChildItemCombination {
	if o == nil || IsNil(o.Combination) {
		var ret []ProductChildItemCombination
		return ret
	}
	return o.Combination
}

// GetCombinationOk returns a tuple with the Combination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetCombinationOk() ([]ProductChildItemCombination, bool) {
	if o == nil || IsNil(o.Combination) {
		return nil, false
	}
	return o.Combination, true
}

// HasCombination returns a boolean if a field has been set.
func (o *Child) HasCombination() bool {
	if o != nil && !IsNil(o.Combination) {
		return true
	}

	return false
}

// SetCombination gets a reference to the given []ProductChildItemCombination and assigns it to the Combination field.
func (o *Child) SetCombination(v []ProductChildItemCombination) {
	o.Combination = v
}

// GetDefaultPrice returns the DefaultPrice field value if set, zero value otherwise.
func (o *Child) GetDefaultPrice() float32 {
	if o == nil || IsNil(o.DefaultPrice) {
		var ret float32
		return ret
	}
	return *o.DefaultPrice
}

// GetDefaultPriceOk returns a tuple with the DefaultPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetDefaultPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.DefaultPrice) {
		return nil, false
	}
	return o.DefaultPrice, true
}

// HasDefaultPrice returns a boolean if a field has been set.
func (o *Child) HasDefaultPrice() bool {
	if o != nil && !IsNil(o.DefaultPrice) {
		return true
	}

	return false
}

// SetDefaultPrice gets a reference to the given float32 and assigns it to the DefaultPrice field.
func (o *Child) SetDefaultPrice(v float32) {
	o.DefaultPrice = &v
}

// GetCostPrice returns the CostPrice field value if set, zero value otherwise.
func (o *Child) GetCostPrice() float32 {
	if o == nil || IsNil(o.CostPrice) {
		var ret float32
		return ret
	}
	return *o.CostPrice
}

// GetCostPriceOk returns a tuple with the CostPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetCostPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.CostPrice) {
		return nil, false
	}
	return o.CostPrice, true
}

// HasCostPrice returns a boolean if a field has been set.
func (o *Child) HasCostPrice() bool {
	if o != nil && !IsNil(o.CostPrice) {
		return true
	}

	return false
}

// SetCostPrice gets a reference to the given float32 and assigns it to the CostPrice field.
func (o *Child) SetCostPrice(v float32) {
	o.CostPrice = &v
}

// GetListPrice returns the ListPrice field value if set, zero value otherwise.
func (o *Child) GetListPrice() float32 {
	if o == nil || IsNil(o.ListPrice) {
		var ret float32
		return ret
	}
	return *o.ListPrice
}

// GetListPriceOk returns a tuple with the ListPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetListPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ListPrice) {
		return nil, false
	}
	return o.ListPrice, true
}

// HasListPrice returns a boolean if a field has been set.
func (o *Child) HasListPrice() bool {
	if o != nil && !IsNil(o.ListPrice) {
		return true
	}

	return false
}

// SetListPrice gets a reference to the given float32 and assigns it to the ListPrice field.
func (o *Child) SetListPrice(v float32) {
	o.ListPrice = &v
}

// GetWholesalePrice returns the WholesalePrice field value if set, zero value otherwise.
func (o *Child) GetWholesalePrice() float32 {
	if o == nil || IsNil(o.WholesalePrice) {
		var ret float32
		return ret
	}
	return *o.WholesalePrice
}

// GetWholesalePriceOk returns a tuple with the WholesalePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetWholesalePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.WholesalePrice) {
		return nil, false
	}
	return o.WholesalePrice, true
}

// HasWholesalePrice returns a boolean if a field has been set.
func (o *Child) HasWholesalePrice() bool {
	if o != nil && !IsNil(o.WholesalePrice) {
		return true
	}

	return false
}

// SetWholesalePrice gets a reference to the given float32 and assigns it to the WholesalePrice field.
func (o *Child) SetWholesalePrice(v float32) {
	o.WholesalePrice = &v
}

// GetAdvancedPrice returns the AdvancedPrice field value if set, zero value otherwise.
func (o *Child) GetAdvancedPrice() []ProductAdvancedPrice {
	if o == nil || IsNil(o.AdvancedPrice) {
		var ret []ProductAdvancedPrice
		return ret
	}
	return o.AdvancedPrice
}

// GetAdvancedPriceOk returns a tuple with the AdvancedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetAdvancedPriceOk() ([]ProductAdvancedPrice, bool) {
	if o == nil || IsNil(o.AdvancedPrice) {
		return nil, false
	}
	return o.AdvancedPrice, true
}

// HasAdvancedPrice returns a boolean if a field has been set.
func (o *Child) HasAdvancedPrice() bool {
	if o != nil && !IsNil(o.AdvancedPrice) {
		return true
	}

	return false
}

// SetAdvancedPrice gets a reference to the given []ProductAdvancedPrice and assigns it to the AdvancedPrice field.
func (o *Child) SetAdvancedPrice(v []ProductAdvancedPrice) {
	o.AdvancedPrice = v
}

// GetTaxClassId returns the TaxClassId field value if set, zero value otherwise.
func (o *Child) GetTaxClassId() string {
	if o == nil || IsNil(o.TaxClassId) {
		var ret string
		return ret
	}
	return *o.TaxClassId
}

// GetTaxClassIdOk returns a tuple with the TaxClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetTaxClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxClassId) {
		return nil, false
	}
	return o.TaxClassId, true
}

// HasTaxClassId returns a boolean if a field has been set.
func (o *Child) HasTaxClassId() bool {
	if o != nil && !IsNil(o.TaxClassId) {
		return true
	}

	return false
}

// SetTaxClassId gets a reference to the given string and assigns it to the TaxClassId field.
func (o *Child) SetTaxClassId(v string) {
	o.TaxClassId = &v
}

// GetAvailForSale returns the AvailForSale field value if set, zero value otherwise.
func (o *Child) GetAvailForSale() bool {
	if o == nil || IsNil(o.AvailForSale) {
		var ret bool
		return ret
	}
	return *o.AvailForSale
}

// GetAvailForSaleOk returns a tuple with the AvailForSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetAvailForSaleOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailForSale) {
		return nil, false
	}
	return o.AvailForSale, true
}

// HasAvailForSale returns a boolean if a field has been set.
func (o *Child) HasAvailForSale() bool {
	if o != nil && !IsNil(o.AvailForSale) {
		return true
	}

	return false
}

// SetAvailForSale gets a reference to the given bool and assigns it to the AvailForSale field.
func (o *Child) SetAvailForSale(v bool) {
	o.AvailForSale = &v
}

// GetAllowBackorders returns the AllowBackorders field value if set, zero value otherwise.
func (o *Child) GetAllowBackorders() bool {
	if o == nil || IsNil(o.AllowBackorders) {
		var ret bool
		return ret
	}
	return *o.AllowBackorders
}

// GetAllowBackordersOk returns a tuple with the AllowBackorders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetAllowBackordersOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowBackorders) {
		return nil, false
	}
	return o.AllowBackorders, true
}

// HasAllowBackorders returns a boolean if a field has been set.
func (o *Child) HasAllowBackorders() bool {
	if o != nil && !IsNil(o.AllowBackorders) {
		return true
	}

	return false
}

// SetAllowBackorders gets a reference to the given bool and assigns it to the AllowBackorders field.
func (o *Child) SetAllowBackorders(v bool) {
	o.AllowBackorders = &v
}

// GetInStock returns the InStock field value if set, zero value otherwise.
func (o *Child) GetInStock() bool {
	if o == nil || IsNil(o.InStock) {
		var ret bool
		return ret
	}
	return *o.InStock
}

// GetInStockOk returns a tuple with the InStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetInStockOk() (*bool, bool) {
	if o == nil || IsNil(o.InStock) {
		return nil, false
	}
	return o.InStock, true
}

// HasInStock returns a boolean if a field has been set.
func (o *Child) HasInStock() bool {
	if o != nil && !IsNil(o.InStock) {
		return true
	}

	return false
}

// SetInStock gets a reference to the given bool and assigns it to the InStock field.
func (o *Child) SetInStock(v bool) {
	o.InStock = &v
}

// GetOnSale returns the OnSale field value if set, zero value otherwise.
func (o *Child) GetOnSale() bool {
	if o == nil || IsNil(o.OnSale) {
		var ret bool
		return ret
	}
	return *o.OnSale
}

// GetOnSaleOk returns a tuple with the OnSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetOnSaleOk() (*bool, bool) {
	if o == nil || IsNil(o.OnSale) {
		return nil, false
	}
	return o.OnSale, true
}

// HasOnSale returns a boolean if a field has been set.
func (o *Child) HasOnSale() bool {
	if o != nil && !IsNil(o.OnSale) {
		return true
	}

	return false
}

// SetOnSale gets a reference to the given bool and assigns it to the OnSale field.
func (o *Child) SetOnSale(v bool) {
	o.OnSale = &v
}

// GetManageStock returns the ManageStock field value if set, zero value otherwise.
func (o *Child) GetManageStock() bool {
	if o == nil || IsNil(o.ManageStock) {
		var ret bool
		return ret
	}
	return *o.ManageStock
}

// GetManageStockOk returns a tuple with the ManageStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetManageStockOk() (*bool, bool) {
	if o == nil || IsNil(o.ManageStock) {
		return nil, false
	}
	return o.ManageStock, true
}

// HasManageStock returns a boolean if a field has been set.
func (o *Child) HasManageStock() bool {
	if o != nil && !IsNil(o.ManageStock) {
		return true
	}

	return false
}

// SetManageStock gets a reference to the given bool and assigns it to the ManageStock field.
func (o *Child) SetManageStock(v bool) {
	o.ManageStock = &v
}

// GetInventoryLevel returns the InventoryLevel field value if set, zero value otherwise.
func (o *Child) GetInventoryLevel() float32 {
	if o == nil || IsNil(o.InventoryLevel) {
		var ret float32
		return ret
	}
	return *o.InventoryLevel
}

// GetInventoryLevelOk returns a tuple with the InventoryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetInventoryLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.InventoryLevel) {
		return nil, false
	}
	return o.InventoryLevel, true
}

// HasInventoryLevel returns a boolean if a field has been set.
func (o *Child) HasInventoryLevel() bool {
	if o != nil && !IsNil(o.InventoryLevel) {
		return true
	}

	return false
}

// SetInventoryLevel gets a reference to the given float32 and assigns it to the InventoryLevel field.
func (o *Child) SetInventoryLevel(v float32) {
	o.InventoryLevel = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *Child) GetInventory() []ProductInventory {
	if o == nil || IsNil(o.Inventory) {
		var ret []ProductInventory
		return ret
	}
	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetInventoryOk() ([]ProductInventory, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *Child) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given []ProductInventory and assigns it to the Inventory field.
func (o *Child) SetInventory(v []ProductInventory) {
	o.Inventory = v
}

// GetMinQuantity returns the MinQuantity field value if set, zero value otherwise.
func (o *Child) GetMinQuantity() float32 {
	if o == nil || IsNil(o.MinQuantity) {
		var ret float32
		return ret
	}
	return *o.MinQuantity
}

// GetMinQuantityOk returns a tuple with the MinQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetMinQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.MinQuantity) {
		return nil, false
	}
	return o.MinQuantity, true
}

// HasMinQuantity returns a boolean if a field has been set.
func (o *Child) HasMinQuantity() bool {
	if o != nil && !IsNil(o.MinQuantity) {
		return true
	}

	return false
}

// SetMinQuantity gets a reference to the given float32 and assigns it to the MinQuantity field.
func (o *Child) SetMinQuantity(v float32) {
	o.MinQuantity = &v
}

// GetDefaultQtyInPack returns the DefaultQtyInPack field value if set, zero value otherwise.
func (o *Child) GetDefaultQtyInPack() float32 {
	if o == nil || IsNil(o.DefaultQtyInPack) {
		var ret float32
		return ret
	}
	return *o.DefaultQtyInPack
}

// GetDefaultQtyInPackOk returns a tuple with the DefaultQtyInPack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetDefaultQtyInPackOk() (*float32, bool) {
	if o == nil || IsNil(o.DefaultQtyInPack) {
		return nil, false
	}
	return o.DefaultQtyInPack, true
}

// HasDefaultQtyInPack returns a boolean if a field has been set.
func (o *Child) HasDefaultQtyInPack() bool {
	if o != nil && !IsNil(o.DefaultQtyInPack) {
		return true
	}

	return false
}

// SetDefaultQtyInPack gets a reference to the given float32 and assigns it to the DefaultQtyInPack field.
func (o *Child) SetDefaultQtyInPack(v float32) {
	o.DefaultQtyInPack = &v
}

// GetIsQtyInPackFixed returns the IsQtyInPackFixed field value if set, zero value otherwise.
func (o *Child) GetIsQtyInPackFixed() bool {
	if o == nil || IsNil(o.IsQtyInPackFixed) {
		var ret bool
		return ret
	}
	return *o.IsQtyInPackFixed
}

// GetIsQtyInPackFixedOk returns a tuple with the IsQtyInPackFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetIsQtyInPackFixedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQtyInPackFixed) {
		return nil, false
	}
	return o.IsQtyInPackFixed, true
}

// HasIsQtyInPackFixed returns a boolean if a field has been set.
func (o *Child) HasIsQtyInPackFixed() bool {
	if o != nil && !IsNil(o.IsQtyInPackFixed) {
		return true
	}

	return false
}

// SetIsQtyInPackFixed gets a reference to the given bool and assigns it to the IsQtyInPackFixed field.
func (o *Child) SetIsQtyInPackFixed(v bool) {
	o.IsQtyInPackFixed = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *Child) GetWeightUnit() string {
	if o == nil || IsNil(o.WeightUnit) {
		var ret string
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetWeightUnitOk() (*string, bool) {
	if o == nil || IsNil(o.WeightUnit) {
		return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *Child) HasWeightUnit() bool {
	if o != nil && !IsNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given string and assigns it to the WeightUnit field.
func (o *Child) SetWeightUnit(v string) {
	o.WeightUnit = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *Child) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *Child) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *Child) SetWeight(v float32) {
	o.Weight = &v
}

// GetDimensionsUnit returns the DimensionsUnit field value if set, zero value otherwise.
func (o *Child) GetDimensionsUnit() string {
	if o == nil || IsNil(o.DimensionsUnit) {
		var ret string
		return ret
	}
	return *o.DimensionsUnit
}

// GetDimensionsUnitOk returns a tuple with the DimensionsUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetDimensionsUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionsUnit) {
		return nil, false
	}
	return o.DimensionsUnit, true
}

// HasDimensionsUnit returns a boolean if a field has been set.
func (o *Child) HasDimensionsUnit() bool {
	if o != nil && !IsNil(o.DimensionsUnit) {
		return true
	}

	return false
}

// SetDimensionsUnit gets a reference to the given string and assigns it to the DimensionsUnit field.
func (o *Child) SetDimensionsUnit(v string) {
	o.DimensionsUnit = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *Child) GetWidth() float32 {
	if o == nil || IsNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetWidthOk() (*float32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *Child) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *Child) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *Child) GetHeight() float32 {
	if o == nil || IsNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *Child) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *Child) SetHeight(v float32) {
	o.Height = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *Child) GetLength() float32 {
	if o == nil || IsNil(o.Length) {
		var ret float32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *Child) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given float32 and assigns it to the Length field.
func (o *Child) SetLength(v float32) {
	o.Length = &v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise.
func (o *Child) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle) {
		var ret string
		return ret
	}
	return *o.MetaTitle
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetMetaTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MetaTitle) {
		return nil, false
	}
	return o.MetaTitle, true
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *Child) HasMetaTitle() bool {
	if o != nil && !IsNil(o.MetaTitle) {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given string and assigns it to the MetaTitle field.
func (o *Child) SetMetaTitle(v string) {
	o.MetaTitle = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *Child) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription) {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetaDescription) {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *Child) HasMetaDescription() bool {
	if o != nil && !IsNil(o.MetaDescription) {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *Child) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise.
func (o *Child) GetMetaKeywords() string {
	if o == nil || IsNil(o.MetaKeywords) {
		var ret string
		return ret
	}
	return *o.MetaKeywords
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetMetaKeywordsOk() (*string, bool) {
	if o == nil || IsNil(o.MetaKeywords) {
		return nil, false
	}
	return o.MetaKeywords, true
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *Child) HasMetaKeywords() bool {
	if o != nil && !IsNil(o.MetaKeywords) {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given string and assigns it to the MetaKeywords field.
func (o *Child) SetMetaKeywords(v string) {
	o.MetaKeywords = &v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *Child) GetDiscounts() []Discount {
	if o == nil || IsNil(o.Discounts) {
		var ret []Discount
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetDiscountsOk() ([]Discount, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *Child) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []Discount and assigns it to the Discounts field.
func (o *Child) SetDiscounts(v []Discount) {
	o.Discounts = v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *Child) GetIsVirtual() bool {
	if o == nil || IsNil(o.IsVirtual) {
		var ret bool
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetIsVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *Child) HasIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given bool and assigns it to the IsVirtual field.
func (o *Child) SetIsVirtual(v bool) {
	o.IsVirtual = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *Child) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *Child) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *Child) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Child) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Child) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Child) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Child) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o Child) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Child) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Upc) {
		toSerialize["upc"] = o.Upc
	}
	if !IsNil(o.Ean) {
		toSerialize["ean"] = o.Ean
	}
	if !IsNil(o.Mpn) {
		toSerialize["mpn"] = o.Mpn
	}
	if !IsNil(o.Gtin) {
		toSerialize["gtin"] = o.Gtin
	}
	if !IsNil(o.Isbn) {
		toSerialize["isbn"] = o.Isbn
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.SeoUrl) {
		toSerialize["seo_url"] = o.SeoUrl
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["short_description"] = o.ShortDescription
	}
	if !IsNil(o.FullDescription) {
		toSerialize["full_description"] = o.FullDescription
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Combination) {
		toSerialize["combination"] = o.Combination
	}
	if !IsNil(o.DefaultPrice) {
		toSerialize["default_price"] = o.DefaultPrice
	}
	if !IsNil(o.CostPrice) {
		toSerialize["cost_price"] = o.CostPrice
	}
	if !IsNil(o.ListPrice) {
		toSerialize["list_price"] = o.ListPrice
	}
	if !IsNil(o.WholesalePrice) {
		toSerialize["wholesale_price"] = o.WholesalePrice
	}
	if !IsNil(o.AdvancedPrice) {
		toSerialize["advanced_price"] = o.AdvancedPrice
	}
	if !IsNil(o.TaxClassId) {
		toSerialize["tax_class_id"] = o.TaxClassId
	}
	if !IsNil(o.AvailForSale) {
		toSerialize["avail_for_sale"] = o.AvailForSale
	}
	if !IsNil(o.AllowBackorders) {
		toSerialize["allow_backorders"] = o.AllowBackorders
	}
	if !IsNil(o.InStock) {
		toSerialize["in_stock"] = o.InStock
	}
	if !IsNil(o.OnSale) {
		toSerialize["on_sale"] = o.OnSale
	}
	if !IsNil(o.ManageStock) {
		toSerialize["manage_stock"] = o.ManageStock
	}
	if !IsNil(o.InventoryLevel) {
		toSerialize["inventory_level"] = o.InventoryLevel
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.MinQuantity) {
		toSerialize["min_quantity"] = o.MinQuantity
	}
	if !IsNil(o.DefaultQtyInPack) {
		toSerialize["default_qty_in_pack"] = o.DefaultQtyInPack
	}
	if !IsNil(o.IsQtyInPackFixed) {
		toSerialize["is_qty_in_pack_fixed"] = o.IsQtyInPackFixed
	}
	if !IsNil(o.WeightUnit) {
		toSerialize["weight_unit"] = o.WeightUnit
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.DimensionsUnit) {
		toSerialize["dimensions_unit"] = o.DimensionsUnit
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.MetaTitle) {
		toSerialize["meta_title"] = o.MetaTitle
	}
	if !IsNil(o.MetaDescription) {
		toSerialize["meta_description"] = o.MetaDescription
	}
	if !IsNil(o.MetaKeywords) {
		toSerialize["meta_keywords"] = o.MetaKeywords
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["is_virtual"] = o.IsVirtual
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableChild struct {
	value *Child
	isSet bool
}

func (v NullableChild) Get() *Child {
	return v.value
}

func (v *NullableChild) Set(val *Child) {
	v.value = val
	v.isSet = true
}

func (v NullableChild) IsSet() bool {
	return v.isSet
}

func (v *NullableChild) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChild(val *Child) *NullableChild {
	return &NullableChild{value: val, isSet: true}
}

func (v NullableChild) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChild) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


