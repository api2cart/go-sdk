/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Webhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhook{}

// Webhook struct for Webhook
type Webhook struct {
	Id NullableInt32 `json:"id,omitempty"`
	Label NullableString `json:"label,omitempty"`
	StoreId NullableString `json:"store_id,omitempty"`
	LangId NullableString `json:"lang_id,omitempty"`
	Active NullableBool `json:"active,omitempty"`
	Callback NullableString `json:"callback,omitempty"`
	Fields NullableString `json:"fields,omitempty"`
	ResponseFields NullableString `json:"response_fields,omitempty"`
	CreatedAt NullableString `json:"created_at,omitempty"`
	UpdatedAt NullableString `json:"updated_at,omitempty"`
	Entity NullableString `json:"entity,omitempty"`
	Action NullableString `json:"action,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook() *Webhook {
	this := Webhook{}
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *Webhook) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *Webhook) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *Webhook) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *Webhook) UnsetId() {
	o.Id.Unset()
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetLabel() string {
	if o == nil || IsNil(o.Label.Get()) {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *Webhook) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *Webhook) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *Webhook) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *Webhook) UnsetLabel() {
	o.Label.Unset()
}

// GetStoreId returns the StoreId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetStoreId() string {
	if o == nil || IsNil(o.StoreId.Get()) {
		var ret string
		return ret
	}
	return *o.StoreId.Get()
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetStoreIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreId.Get(), o.StoreId.IsSet()
}

// HasStoreId returns a boolean if a field has been set.
func (o *Webhook) HasStoreId() bool {
	if o != nil && o.StoreId.IsSet() {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given NullableString and assigns it to the StoreId field.
func (o *Webhook) SetStoreId(v string) {
	o.StoreId.Set(&v)
}
// SetStoreIdNil sets the value for StoreId to be an explicit nil
func (o *Webhook) SetStoreIdNil() {
	o.StoreId.Set(nil)
}

// UnsetStoreId ensures that no value is present for StoreId, not even an explicit nil
func (o *Webhook) UnsetStoreId() {
	o.StoreId.Unset()
}

// GetLangId returns the LangId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetLangId() string {
	if o == nil || IsNil(o.LangId.Get()) {
		var ret string
		return ret
	}
	return *o.LangId.Get()
}

// GetLangIdOk returns a tuple with the LangId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetLangIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LangId.Get(), o.LangId.IsSet()
}

// HasLangId returns a boolean if a field has been set.
func (o *Webhook) HasLangId() bool {
	if o != nil && o.LangId.IsSet() {
		return true
	}

	return false
}

// SetLangId gets a reference to the given NullableString and assigns it to the LangId field.
func (o *Webhook) SetLangId(v string) {
	o.LangId.Set(&v)
}
// SetLangIdNil sets the value for LangId to be an explicit nil
func (o *Webhook) SetLangIdNil() {
	o.LangId.Set(nil)
}

// UnsetLangId ensures that no value is present for LangId, not even an explicit nil
func (o *Webhook) UnsetLangId() {
	o.LangId.Unset()
}

// GetActive returns the Active field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetActive() bool {
	if o == nil || IsNil(o.Active.Get()) {
		var ret bool
		return ret
	}
	return *o.Active.Get()
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Active.Get(), o.Active.IsSet()
}

// HasActive returns a boolean if a field has been set.
func (o *Webhook) HasActive() bool {
	if o != nil && o.Active.IsSet() {
		return true
	}

	return false
}

// SetActive gets a reference to the given NullableBool and assigns it to the Active field.
func (o *Webhook) SetActive(v bool) {
	o.Active.Set(&v)
}
// SetActiveNil sets the value for Active to be an explicit nil
func (o *Webhook) SetActiveNil() {
	o.Active.Set(nil)
}

// UnsetActive ensures that no value is present for Active, not even an explicit nil
func (o *Webhook) UnsetActive() {
	o.Active.Unset()
}

// GetCallback returns the Callback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetCallback() string {
	if o == nil || IsNil(o.Callback.Get()) {
		var ret string
		return ret
	}
	return *o.Callback.Get()
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetCallbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Callback.Get(), o.Callback.IsSet()
}

// HasCallback returns a boolean if a field has been set.
func (o *Webhook) HasCallback() bool {
	if o != nil && o.Callback.IsSet() {
		return true
	}

	return false
}

// SetCallback gets a reference to the given NullableString and assigns it to the Callback field.
func (o *Webhook) SetCallback(v string) {
	o.Callback.Set(&v)
}
// SetCallbackNil sets the value for Callback to be an explicit nil
func (o *Webhook) SetCallbackNil() {
	o.Callback.Set(nil)
}

// UnsetCallback ensures that no value is present for Callback, not even an explicit nil
func (o *Webhook) UnsetCallback() {
	o.Callback.Unset()
}

// GetFields returns the Fields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetFields() string {
	if o == nil || IsNil(o.Fields.Get()) {
		var ret string
		return ret
	}
	return *o.Fields.Get()
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetFieldsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields.Get(), o.Fields.IsSet()
}

// HasFields returns a boolean if a field has been set.
func (o *Webhook) HasFields() bool {
	if o != nil && o.Fields.IsSet() {
		return true
	}

	return false
}

// SetFields gets a reference to the given NullableString and assigns it to the Fields field.
func (o *Webhook) SetFields(v string) {
	o.Fields.Set(&v)
}
// SetFieldsNil sets the value for Fields to be an explicit nil
func (o *Webhook) SetFieldsNil() {
	o.Fields.Set(nil)
}

// UnsetFields ensures that no value is present for Fields, not even an explicit nil
func (o *Webhook) UnsetFields() {
	o.Fields.Unset()
}

// GetResponseFields returns the ResponseFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetResponseFields() string {
	if o == nil || IsNil(o.ResponseFields.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseFields.Get()
}

// GetResponseFieldsOk returns a tuple with the ResponseFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetResponseFieldsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseFields.Get(), o.ResponseFields.IsSet()
}

// HasResponseFields returns a boolean if a field has been set.
func (o *Webhook) HasResponseFields() bool {
	if o != nil && o.ResponseFields.IsSet() {
		return true
	}

	return false
}

// SetResponseFields gets a reference to the given NullableString and assigns it to the ResponseFields field.
func (o *Webhook) SetResponseFields(v string) {
	o.ResponseFields.Set(&v)
}
// SetResponseFieldsNil sets the value for ResponseFields to be an explicit nil
func (o *Webhook) SetResponseFieldsNil() {
	o.ResponseFields.Set(nil)
}

// UnsetResponseFields ensures that no value is present for ResponseFields, not even an explicit nil
func (o *Webhook) UnsetResponseFields() {
	o.ResponseFields.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Webhook) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *Webhook) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *Webhook) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *Webhook) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Webhook) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *Webhook) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *Webhook) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *Webhook) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetEntity returns the Entity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetEntity() string {
	if o == nil || IsNil(o.Entity.Get()) {
		var ret string
		return ret
	}
	return *o.Entity.Get()
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetEntityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entity.Get(), o.Entity.IsSet()
}

// HasEntity returns a boolean if a field has been set.
func (o *Webhook) HasEntity() bool {
	if o != nil && o.Entity.IsSet() {
		return true
	}

	return false
}

// SetEntity gets a reference to the given NullableString and assigns it to the Entity field.
func (o *Webhook) SetEntity(v string) {
	o.Entity.Set(&v)
}
// SetEntityNil sets the value for Entity to be an explicit nil
func (o *Webhook) SetEntityNil() {
	o.Entity.Set(nil)
}

// UnsetEntity ensures that no value is present for Entity, not even an explicit nil
func (o *Webhook) UnsetEntity() {
	o.Entity.Unset()
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetAction() string {
	if o == nil || IsNil(o.Action.Get()) {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *Webhook) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *Webhook) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *Webhook) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *Webhook) UnsetAction() {
	o.Action.Unset()
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *Webhook) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *Webhook) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Webhook) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Webhook) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Webhook) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Webhook) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if o.StoreId.IsSet() {
		toSerialize["store_id"] = o.StoreId.Get()
	}
	if o.LangId.IsSet() {
		toSerialize["lang_id"] = o.LangId.Get()
	}
	if o.Active.IsSet() {
		toSerialize["active"] = o.Active.Get()
	}
	if o.Callback.IsSet() {
		toSerialize["callback"] = o.Callback.Get()
	}
	if o.Fields.IsSet() {
		toSerialize["fields"] = o.Fields.Get()
	}
	if o.ResponseFields.IsSet() {
		toSerialize["response_fields"] = o.ResponseFields.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.Entity.IsSet() {
		toSerialize["entity"] = o.Entity.Get()
	}
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


