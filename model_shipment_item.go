/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShipmentItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentItem{}

// ShipmentItem struct for ShipmentItem
type ShipmentItem struct {
	OrderProductId NullableString `json:"order_product_id,omitempty"`
	ProductId NullableString `json:"product_id,omitempty"`
	VariantId NullableString `json:"variant_id,omitempty"`
	Model NullableString `json:"model,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Price NullableFloat32 `json:"price,omitempty"`
	Quantity NullableFloat32 `json:"quantity,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewShipmentItem instantiates a new ShipmentItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentItem() *ShipmentItem {
	this := ShipmentItem{}
	return &this
}

// NewShipmentItemWithDefaults instantiates a new ShipmentItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentItemWithDefaults() *ShipmentItem {
	this := ShipmentItem{}
	return &this
}

// GetOrderProductId returns the OrderProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetOrderProductId() string {
	if o == nil || IsNil(o.OrderProductId.Get()) {
		var ret string
		return ret
	}
	return *o.OrderProductId.Get()
}

// GetOrderProductIdOk returns a tuple with the OrderProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetOrderProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderProductId.Get(), o.OrderProductId.IsSet()
}

// HasOrderProductId returns a boolean if a field has been set.
func (o *ShipmentItem) HasOrderProductId() bool {
	if o != nil && o.OrderProductId.IsSet() {
		return true
	}

	return false
}

// SetOrderProductId gets a reference to the given NullableString and assigns it to the OrderProductId field.
func (o *ShipmentItem) SetOrderProductId(v string) {
	o.OrderProductId.Set(&v)
}
// SetOrderProductIdNil sets the value for OrderProductId to be an explicit nil
func (o *ShipmentItem) SetOrderProductIdNil() {
	o.OrderProductId.Set(nil)
}

// UnsetOrderProductId ensures that no value is present for OrderProductId, not even an explicit nil
func (o *ShipmentItem) UnsetOrderProductId() {
	o.OrderProductId.Unset()
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetProductId() string {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret string
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *ShipmentItem) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableString and assigns it to the ProductId field.
func (o *ShipmentItem) SetProductId(v string) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *ShipmentItem) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *ShipmentItem) UnsetProductId() {
	o.ProductId.Unset()
}

// GetVariantId returns the VariantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetVariantId() string {
	if o == nil || IsNil(o.VariantId.Get()) {
		var ret string
		return ret
	}
	return *o.VariantId.Get()
}

// GetVariantIdOk returns a tuple with the VariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetVariantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VariantId.Get(), o.VariantId.IsSet()
}

// HasVariantId returns a boolean if a field has been set.
func (o *ShipmentItem) HasVariantId() bool {
	if o != nil && o.VariantId.IsSet() {
		return true
	}

	return false
}

// SetVariantId gets a reference to the given NullableString and assigns it to the VariantId field.
func (o *ShipmentItem) SetVariantId(v string) {
	o.VariantId.Set(&v)
}
// SetVariantIdNil sets the value for VariantId to be an explicit nil
func (o *ShipmentItem) SetVariantIdNil() {
	o.VariantId.Set(nil)
}

// UnsetVariantId ensures that no value is present for VariantId, not even an explicit nil
func (o *ShipmentItem) UnsetVariantId() {
	o.VariantId.Unset()
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetModel() string {
	if o == nil || IsNil(o.Model.Get()) {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *ShipmentItem) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *ShipmentItem) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *ShipmentItem) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *ShipmentItem) UnsetModel() {
	o.Model.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ShipmentItem) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ShipmentItem) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ShipmentItem) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ShipmentItem) UnsetName() {
	o.Name.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetPrice() float32 {
	if o == nil || IsNil(o.Price.Get()) {
		var ret float32
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *ShipmentItem) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat32 and assigns it to the Price field.
func (o *ShipmentItem) SetPrice(v float32) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *ShipmentItem) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *ShipmentItem) UnsetPrice() {
	o.Price.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity.Get()) {
		var ret float32
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *ShipmentItem) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableFloat32 and assigns it to the Quantity field.
func (o *ShipmentItem) SetQuantity(v float32) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *ShipmentItem) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *ShipmentItem) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ShipmentItem) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ShipmentItem) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShipmentItem) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShipmentItem) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ShipmentItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ShipmentItem) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ShipmentItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderProductId.IsSet() {
		toSerialize["order_product_id"] = o.OrderProductId.Get()
	}
	if o.ProductId.IsSet() {
		toSerialize["product_id"] = o.ProductId.Get()
	}
	if o.VariantId.IsSet() {
		toSerialize["variant_id"] = o.VariantId.Get()
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableShipmentItem struct {
	value *ShipmentItem
	isSet bool
}

func (v NullableShipmentItem) Get() *ShipmentItem {
	return v.value
}

func (v *NullableShipmentItem) Set(val *ShipmentItem) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentItem) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentItem(val *ShipmentItem) *NullableShipmentItem {
	return &NullableShipmentItem{value: val, isSet: true}
}

func (v NullableShipmentItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


