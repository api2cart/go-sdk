/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductVariantAddAttributesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductVariantAddAttributesInner{}

// ProductVariantAddAttributesInner struct for ProductVariantAddAttributesInner
type ProductVariantAddAttributesInner struct {
	AttributeName *string `json:"attribute_name,omitempty"`
	AttributeValue *string `json:"attribute_value,omitempty"`
	AttributePrice *float32 `json:"attribute_price,omitempty"`
}

// NewProductVariantAddAttributesInner instantiates a new ProductVariantAddAttributesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductVariantAddAttributesInner() *ProductVariantAddAttributesInner {
	this := ProductVariantAddAttributesInner{}
	return &this
}

// NewProductVariantAddAttributesInnerWithDefaults instantiates a new ProductVariantAddAttributesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductVariantAddAttributesInnerWithDefaults() *ProductVariantAddAttributesInner {
	this := ProductVariantAddAttributesInner{}
	return &this
}

// GetAttributeName returns the AttributeName field value if set, zero value otherwise.
func (o *ProductVariantAddAttributesInner) GetAttributeName() string {
	if o == nil || IsNil(o.AttributeName) {
		var ret string
		return ret
	}
	return *o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductVariantAddAttributesInner) GetAttributeNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeName) {
		return nil, false
	}
	return o.AttributeName, true
}

// HasAttributeName returns a boolean if a field has been set.
func (o *ProductVariantAddAttributesInner) HasAttributeName() bool {
	if o != nil && !IsNil(o.AttributeName) {
		return true
	}

	return false
}

// SetAttributeName gets a reference to the given string and assigns it to the AttributeName field.
func (o *ProductVariantAddAttributesInner) SetAttributeName(v string) {
	o.AttributeName = &v
}

// GetAttributeValue returns the AttributeValue field value if set, zero value otherwise.
func (o *ProductVariantAddAttributesInner) GetAttributeValue() string {
	if o == nil || IsNil(o.AttributeValue) {
		var ret string
		return ret
	}
	return *o.AttributeValue
}

// GetAttributeValueOk returns a tuple with the AttributeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductVariantAddAttributesInner) GetAttributeValueOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeValue) {
		return nil, false
	}
	return o.AttributeValue, true
}

// HasAttributeValue returns a boolean if a field has been set.
func (o *ProductVariantAddAttributesInner) HasAttributeValue() bool {
	if o != nil && !IsNil(o.AttributeValue) {
		return true
	}

	return false
}

// SetAttributeValue gets a reference to the given string and assigns it to the AttributeValue field.
func (o *ProductVariantAddAttributesInner) SetAttributeValue(v string) {
	o.AttributeValue = &v
}

// GetAttributePrice returns the AttributePrice field value if set, zero value otherwise.
func (o *ProductVariantAddAttributesInner) GetAttributePrice() float32 {
	if o == nil || IsNil(o.AttributePrice) {
		var ret float32
		return ret
	}
	return *o.AttributePrice
}

// GetAttributePriceOk returns a tuple with the AttributePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductVariantAddAttributesInner) GetAttributePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AttributePrice) {
		return nil, false
	}
	return o.AttributePrice, true
}

// HasAttributePrice returns a boolean if a field has been set.
func (o *ProductVariantAddAttributesInner) HasAttributePrice() bool {
	if o != nil && !IsNil(o.AttributePrice) {
		return true
	}

	return false
}

// SetAttributePrice gets a reference to the given float32 and assigns it to the AttributePrice field.
func (o *ProductVariantAddAttributesInner) SetAttributePrice(v float32) {
	o.AttributePrice = &v
}

func (o ProductVariantAddAttributesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductVariantAddAttributesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeName) {
		toSerialize["attribute_name"] = o.AttributeName
	}
	if !IsNil(o.AttributeValue) {
		toSerialize["attribute_value"] = o.AttributeValue
	}
	if !IsNil(o.AttributePrice) {
		toSerialize["attribute_price"] = o.AttributePrice
	}
	return toSerialize, nil
}

type NullableProductVariantAddAttributesInner struct {
	value *ProductVariantAddAttributesInner
	isSet bool
}

func (v NullableProductVariantAddAttributesInner) Get() *ProductVariantAddAttributesInner {
	return v.value
}

func (v *NullableProductVariantAddAttributesInner) Set(val *ProductVariantAddAttributesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductVariantAddAttributesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductVariantAddAttributesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductVariantAddAttributesInner(val *ProductVariantAddAttributesInner) *NullableProductVariantAddAttributesInner {
	return &NullableProductVariantAddAttributesInner{value: val, isSet: true}
}

func (v NullableProductVariantAddAttributesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductVariantAddAttributesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


