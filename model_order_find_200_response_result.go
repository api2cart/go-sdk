/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderFind200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderFind200ResponseResult{}

// OrderFind200ResponseResult struct for OrderFind200ResponseResult
type OrderFind200ResponseResult struct {
	Order []Order `json:"order,omitempty"`
}

// NewOrderFind200ResponseResult instantiates a new OrderFind200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderFind200ResponseResult() *OrderFind200ResponseResult {
	this := OrderFind200ResponseResult{}
	return &this
}

// NewOrderFind200ResponseResultWithDefaults instantiates a new OrderFind200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderFind200ResponseResultWithDefaults() *OrderFind200ResponseResult {
	this := OrderFind200ResponseResult{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *OrderFind200ResponseResult) GetOrder() []Order {
	if o == nil || IsNil(o.Order) {
		var ret []Order
		return ret
	}
	return o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFind200ResponseResult) GetOrderOk() ([]Order, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *OrderFind200ResponseResult) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given []Order and assigns it to the Order field.
func (o *OrderFind200ResponseResult) SetOrder(v []Order) {
	o.Order = v
}

func (o OrderFind200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderFind200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableOrderFind200ResponseResult struct {
	value *OrderFind200ResponseResult
	isSet bool
}

func (v NullableOrderFind200ResponseResult) Get() *OrderFind200ResponseResult {
	return v.value
}

func (v *NullableOrderFind200ResponseResult) Set(val *OrderFind200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderFind200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderFind200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderFind200ResponseResult(val *OrderFind200ResponseResult) *NullableOrderFind200ResponseResult {
	return &NullableOrderFind200ResponseResult{value: val, isSet: true}
}

func (v NullableOrderFind200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderFind200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


