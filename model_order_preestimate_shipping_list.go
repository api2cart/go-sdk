/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderPreestimateShippingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderPreestimateShippingList{}

// OrderPreestimateShippingList struct for OrderPreestimateShippingList
type OrderPreestimateShippingList struct {
	// This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
	WarehouseId *string `json:"warehouse_id,omitempty"`
	// Retrieves orders specified by customer id
	CustomerId *string `json:"customer_id,omitempty"`
	// Retrieves orders specified by customer email
	CustomerEmail *string `json:"customer_email,omitempty"`
	// Store Id
	StoreId *string `json:"store_id,omitempty"`
	// Specifies first shipping address
	ShippAddress1 *string `json:"shipp_address_1,omitempty"`
	// Specifies shipping city
	ShippCity *string `json:"shipp_city,omitempty"`
	// Specifies shipping postcode
	ShippPostcode *string `json:"shipp_postcode,omitempty"`
	// Specifies shipping state code
	ShippState *string `json:"shipp_state,omitempty"`
	// Specifies shipping country code
	ShippCountry string `json:"shipp_country"`
	// Set this parameter in order to choose which entity fields you want to retrieve
	Params *string `json:"params,omitempty"`
	// Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
	Exclude *string `json:"exclude,omitempty"`
	OrderItem []OrderPreestimateShippingListOrderItemInner `json:"order_item"`
}

type _OrderPreestimateShippingList OrderPreestimateShippingList

// NewOrderPreestimateShippingList instantiates a new OrderPreestimateShippingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderPreestimateShippingList(shippCountry string, orderItem []OrderPreestimateShippingListOrderItemInner) *OrderPreestimateShippingList {
	this := OrderPreestimateShippingList{}
	this.ShippCountry = shippCountry
	var params string = "force_all"
	this.Params = &params
	this.OrderItem = orderItem
	return &this
}

// NewOrderPreestimateShippingListWithDefaults instantiates a new OrderPreestimateShippingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderPreestimateShippingListWithDefaults() *OrderPreestimateShippingList {
	this := OrderPreestimateShippingList{}
	var params string = "force_all"
	this.Params = &params
	return &this
}

// GetWarehouseId returns the WarehouseId field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetWarehouseId() string {
	if o == nil || IsNil(o.WarehouseId) {
		var ret string
		return ret
	}
	return *o.WarehouseId
}

// GetWarehouseIdOk returns a tuple with the WarehouseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetWarehouseIdOk() (*string, bool) {
	if o == nil || IsNil(o.WarehouseId) {
		return nil, false
	}
	return o.WarehouseId, true
}

// HasWarehouseId returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasWarehouseId() bool {
	if o != nil && !IsNil(o.WarehouseId) {
		return true
	}

	return false
}

// SetWarehouseId gets a reference to the given string and assigns it to the WarehouseId field.
func (o *OrderPreestimateShippingList) SetWarehouseId(v string) {
	o.WarehouseId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *OrderPreestimateShippingList) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetCustomerEmail() string {
	if o == nil || IsNil(o.CustomerEmail) {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetCustomerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerEmail) {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasCustomerEmail() bool {
	if o != nil && !IsNil(o.CustomerEmail) {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *OrderPreestimateShippingList) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *OrderPreestimateShippingList) SetStoreId(v string) {
	o.StoreId = &v
}

// GetShippAddress1 returns the ShippAddress1 field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetShippAddress1() string {
	if o == nil || IsNil(o.ShippAddress1) {
		var ret string
		return ret
	}
	return *o.ShippAddress1
}

// GetShippAddress1Ok returns a tuple with the ShippAddress1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetShippAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.ShippAddress1) {
		return nil, false
	}
	return o.ShippAddress1, true
}

// HasShippAddress1 returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasShippAddress1() bool {
	if o != nil && !IsNil(o.ShippAddress1) {
		return true
	}

	return false
}

// SetShippAddress1 gets a reference to the given string and assigns it to the ShippAddress1 field.
func (o *OrderPreestimateShippingList) SetShippAddress1(v string) {
	o.ShippAddress1 = &v
}

// GetShippCity returns the ShippCity field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetShippCity() string {
	if o == nil || IsNil(o.ShippCity) {
		var ret string
		return ret
	}
	return *o.ShippCity
}

// GetShippCityOk returns a tuple with the ShippCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetShippCityOk() (*string, bool) {
	if o == nil || IsNil(o.ShippCity) {
		return nil, false
	}
	return o.ShippCity, true
}

// HasShippCity returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasShippCity() bool {
	if o != nil && !IsNil(o.ShippCity) {
		return true
	}

	return false
}

// SetShippCity gets a reference to the given string and assigns it to the ShippCity field.
func (o *OrderPreestimateShippingList) SetShippCity(v string) {
	o.ShippCity = &v
}

// GetShippPostcode returns the ShippPostcode field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetShippPostcode() string {
	if o == nil || IsNil(o.ShippPostcode) {
		var ret string
		return ret
	}
	return *o.ShippPostcode
}

// GetShippPostcodeOk returns a tuple with the ShippPostcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetShippPostcodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShippPostcode) {
		return nil, false
	}
	return o.ShippPostcode, true
}

// HasShippPostcode returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasShippPostcode() bool {
	if o != nil && !IsNil(o.ShippPostcode) {
		return true
	}

	return false
}

// SetShippPostcode gets a reference to the given string and assigns it to the ShippPostcode field.
func (o *OrderPreestimateShippingList) SetShippPostcode(v string) {
	o.ShippPostcode = &v
}

// GetShippState returns the ShippState field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetShippState() string {
	if o == nil || IsNil(o.ShippState) {
		var ret string
		return ret
	}
	return *o.ShippState
}

// GetShippStateOk returns a tuple with the ShippState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetShippStateOk() (*string, bool) {
	if o == nil || IsNil(o.ShippState) {
		return nil, false
	}
	return o.ShippState, true
}

// HasShippState returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasShippState() bool {
	if o != nil && !IsNil(o.ShippState) {
		return true
	}

	return false
}

// SetShippState gets a reference to the given string and assigns it to the ShippState field.
func (o *OrderPreestimateShippingList) SetShippState(v string) {
	o.ShippState = &v
}

// GetShippCountry returns the ShippCountry field value
func (o *OrderPreestimateShippingList) GetShippCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippCountry
}

// GetShippCountryOk returns a tuple with the ShippCountry field value
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetShippCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippCountry, true
}

// SetShippCountry sets field value
func (o *OrderPreestimateShippingList) SetShippCountry(v string) {
	o.ShippCountry = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetParams() string {
	if o == nil || IsNil(o.Params) {
		var ret string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetParamsOk() (*string, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given string and assigns it to the Params field.
func (o *OrderPreestimateShippingList) SetParams(v string) {
	o.Params = &v
}

// GetExclude returns the Exclude field value if set, zero value otherwise.
func (o *OrderPreestimateShippingList) GetExclude() string {
	if o == nil || IsNil(o.Exclude) {
		var ret string
		return ret
	}
	return *o.Exclude
}

// GetExcludeOk returns a tuple with the Exclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetExcludeOk() (*string, bool) {
	if o == nil || IsNil(o.Exclude) {
		return nil, false
	}
	return o.Exclude, true
}

// HasExclude returns a boolean if a field has been set.
func (o *OrderPreestimateShippingList) HasExclude() bool {
	if o != nil && !IsNil(o.Exclude) {
		return true
	}

	return false
}

// SetExclude gets a reference to the given string and assigns it to the Exclude field.
func (o *OrderPreestimateShippingList) SetExclude(v string) {
	o.Exclude = &v
}

// GetOrderItem returns the OrderItem field value
func (o *OrderPreestimateShippingList) GetOrderItem() []OrderPreestimateShippingListOrderItemInner {
	if o == nil {
		var ret []OrderPreestimateShippingListOrderItemInner
		return ret
	}

	return o.OrderItem
}

// GetOrderItemOk returns a tuple with the OrderItem field value
// and a boolean to check if the value has been set.
func (o *OrderPreestimateShippingList) GetOrderItemOk() ([]OrderPreestimateShippingListOrderItemInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderItem, true
}

// SetOrderItem sets field value
func (o *OrderPreestimateShippingList) SetOrderItem(v []OrderPreestimateShippingListOrderItemInner) {
	o.OrderItem = v
}

func (o OrderPreestimateShippingList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderPreestimateShippingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WarehouseId) {
		toSerialize["warehouse_id"] = o.WarehouseId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.CustomerEmail) {
		toSerialize["customer_email"] = o.CustomerEmail
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.ShippAddress1) {
		toSerialize["shipp_address_1"] = o.ShippAddress1
	}
	if !IsNil(o.ShippCity) {
		toSerialize["shipp_city"] = o.ShippCity
	}
	if !IsNil(o.ShippPostcode) {
		toSerialize["shipp_postcode"] = o.ShippPostcode
	}
	if !IsNil(o.ShippState) {
		toSerialize["shipp_state"] = o.ShippState
	}
	toSerialize["shipp_country"] = o.ShippCountry
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !IsNil(o.Exclude) {
		toSerialize["exclude"] = o.Exclude
	}
	toSerialize["order_item"] = o.OrderItem
	return toSerialize, nil
}

func (o *OrderPreestimateShippingList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shipp_country",
		"order_item",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderPreestimateShippingList := _OrderPreestimateShippingList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderPreestimateShippingList)

	if err != nil {
		return err
	}

	*o = OrderPreestimateShippingList(varOrderPreestimateShippingList)

	return err
}

type NullableOrderPreestimateShippingList struct {
	value *OrderPreestimateShippingList
	isSet bool
}

func (v NullableOrderPreestimateShippingList) Get() *OrderPreestimateShippingList {
	return v.value
}

func (v *NullableOrderPreestimateShippingList) Set(val *OrderPreestimateShippingList) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderPreestimateShippingList) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderPreestimateShippingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderPreestimateShippingList(val *OrderPreestimateShippingList) *NullableOrderPreestimateShippingList {
	return &NullableOrderPreestimateShippingList{value: val, isSet: true}
}

func (v NullableOrderPreestimateShippingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderPreestimateShippingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


