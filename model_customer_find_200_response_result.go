/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomerFind200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerFind200ResponseResult{}

// CustomerFind200ResponseResult struct for CustomerFind200ResponseResult
type CustomerFind200ResponseResult struct {
	Id *string `json:"id,omitempty"`
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	LastName *string `json:"last_name,omitempty"`
}

// NewCustomerFind200ResponseResult instantiates a new CustomerFind200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerFind200ResponseResult() *CustomerFind200ResponseResult {
	this := CustomerFind200ResponseResult{}
	return &this
}

// NewCustomerFind200ResponseResultWithDefaults instantiates a new CustomerFind200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerFind200ResponseResultWithDefaults() *CustomerFind200ResponseResult {
	this := CustomerFind200ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerFind200ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFind200ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerFind200ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomerFind200ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CustomerFind200ResponseResult) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFind200ResponseResult) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CustomerFind200ResponseResult) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CustomerFind200ResponseResult) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CustomerFind200ResponseResult) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFind200ResponseResult) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CustomerFind200ResponseResult) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CustomerFind200ResponseResult) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CustomerFind200ResponseResult) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFind200ResponseResult) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CustomerFind200ResponseResult) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *CustomerFind200ResponseResult) SetLastName(v string) {
	o.LastName = &v
}

func (o CustomerFind200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerFind200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	return toSerialize, nil
}

type NullableCustomerFind200ResponseResult struct {
	value *CustomerFind200ResponseResult
	isSet bool
}

func (v NullableCustomerFind200ResponseResult) Get() *CustomerFind200ResponseResult {
	return v.value
}

func (v *NullableCustomerFind200ResponseResult) Set(val *CustomerFind200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerFind200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerFind200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerFind200ResponseResult(val *CustomerFind200ResponseResult) *NullableCustomerFind200ResponseResult {
	return &NullableCustomerFind200ResponseResult{value: val, isSet: true}
}

func (v NullableCustomerFind200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerFind200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


