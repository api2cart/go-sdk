/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderCalculateOrderItemInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCalculateOrderItemInner{}

// OrderCalculateOrderItemInner struct for OrderCalculateOrderItemInner
type OrderCalculateOrderItemInner struct {
	// Defines orders specified by order item id
	OrderItemId string `json:"order_item_id"`
	// Defines orders specified by order item quantity
	OrderItemQuantity int32 `json:"order_item_quantity"`
	// Ordered product variant. Where x is order item ID
	OrderItemVariantId *string `json:"order_item_variant_id,omitempty"`
	// Index of the parent grouped/bundle product
	OrderItemParent *int32 `json:"order_item_parent,omitempty"`
	// Option name of the parent grouped/bundle product
	OrderItemParentOptionName *string `json:"order_item_parent_option_name,omitempty"`
	OrderItemOption []OrderCalculateOrderItemInnerOrderItemOptionInner `json:"order_item_option,omitempty"`
}

type _OrderCalculateOrderItemInner OrderCalculateOrderItemInner

// NewOrderCalculateOrderItemInner instantiates a new OrderCalculateOrderItemInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCalculateOrderItemInner(orderItemId string, orderItemQuantity int32) *OrderCalculateOrderItemInner {
	this := OrderCalculateOrderItemInner{}
	this.OrderItemId = orderItemId
	this.OrderItemQuantity = orderItemQuantity
	return &this
}

// NewOrderCalculateOrderItemInnerWithDefaults instantiates a new OrderCalculateOrderItemInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCalculateOrderItemInnerWithDefaults() *OrderCalculateOrderItemInner {
	this := OrderCalculateOrderItemInner{}
	return &this
}

// GetOrderItemId returns the OrderItemId field value
func (o *OrderCalculateOrderItemInner) GetOrderItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderItemId
}

// GetOrderItemIdOk returns a tuple with the OrderItemId field value
// and a boolean to check if the value has been set.
func (o *OrderCalculateOrderItemInner) GetOrderItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderItemId, true
}

// SetOrderItemId sets field value
func (o *OrderCalculateOrderItemInner) SetOrderItemId(v string) {
	o.OrderItemId = v
}

// GetOrderItemQuantity returns the OrderItemQuantity field value
func (o *OrderCalculateOrderItemInner) GetOrderItemQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderItemQuantity
}

// GetOrderItemQuantityOk returns a tuple with the OrderItemQuantity field value
// and a boolean to check if the value has been set.
func (o *OrderCalculateOrderItemInner) GetOrderItemQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderItemQuantity, true
}

// SetOrderItemQuantity sets field value
func (o *OrderCalculateOrderItemInner) SetOrderItemQuantity(v int32) {
	o.OrderItemQuantity = v
}

// GetOrderItemVariantId returns the OrderItemVariantId field value if set, zero value otherwise.
func (o *OrderCalculateOrderItemInner) GetOrderItemVariantId() string {
	if o == nil || IsNil(o.OrderItemVariantId) {
		var ret string
		return ret
	}
	return *o.OrderItemVariantId
}

// GetOrderItemVariantIdOk returns a tuple with the OrderItemVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateOrderItemInner) GetOrderItemVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderItemVariantId) {
		return nil, false
	}
	return o.OrderItemVariantId, true
}

// HasOrderItemVariantId returns a boolean if a field has been set.
func (o *OrderCalculateOrderItemInner) HasOrderItemVariantId() bool {
	if o != nil && !IsNil(o.OrderItemVariantId) {
		return true
	}

	return false
}

// SetOrderItemVariantId gets a reference to the given string and assigns it to the OrderItemVariantId field.
func (o *OrderCalculateOrderItemInner) SetOrderItemVariantId(v string) {
	o.OrderItemVariantId = &v
}

// GetOrderItemParent returns the OrderItemParent field value if set, zero value otherwise.
func (o *OrderCalculateOrderItemInner) GetOrderItemParent() int32 {
	if o == nil || IsNil(o.OrderItemParent) {
		var ret int32
		return ret
	}
	return *o.OrderItemParent
}

// GetOrderItemParentOk returns a tuple with the OrderItemParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateOrderItemInner) GetOrderItemParentOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderItemParent) {
		return nil, false
	}
	return o.OrderItemParent, true
}

// HasOrderItemParent returns a boolean if a field has been set.
func (o *OrderCalculateOrderItemInner) HasOrderItemParent() bool {
	if o != nil && !IsNil(o.OrderItemParent) {
		return true
	}

	return false
}

// SetOrderItemParent gets a reference to the given int32 and assigns it to the OrderItemParent field.
func (o *OrderCalculateOrderItemInner) SetOrderItemParent(v int32) {
	o.OrderItemParent = &v
}

// GetOrderItemParentOptionName returns the OrderItemParentOptionName field value if set, zero value otherwise.
func (o *OrderCalculateOrderItemInner) GetOrderItemParentOptionName() string {
	if o == nil || IsNil(o.OrderItemParentOptionName) {
		var ret string
		return ret
	}
	return *o.OrderItemParentOptionName
}

// GetOrderItemParentOptionNameOk returns a tuple with the OrderItemParentOptionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateOrderItemInner) GetOrderItemParentOptionNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrderItemParentOptionName) {
		return nil, false
	}
	return o.OrderItemParentOptionName, true
}

// HasOrderItemParentOptionName returns a boolean if a field has been set.
func (o *OrderCalculateOrderItemInner) HasOrderItemParentOptionName() bool {
	if o != nil && !IsNil(o.OrderItemParentOptionName) {
		return true
	}

	return false
}

// SetOrderItemParentOptionName gets a reference to the given string and assigns it to the OrderItemParentOptionName field.
func (o *OrderCalculateOrderItemInner) SetOrderItemParentOptionName(v string) {
	o.OrderItemParentOptionName = &v
}

// GetOrderItemOption returns the OrderItemOption field value if set, zero value otherwise.
func (o *OrderCalculateOrderItemInner) GetOrderItemOption() []OrderCalculateOrderItemInnerOrderItemOptionInner {
	if o == nil || IsNil(o.OrderItemOption) {
		var ret []OrderCalculateOrderItemInnerOrderItemOptionInner
		return ret
	}
	return o.OrderItemOption
}

// GetOrderItemOptionOk returns a tuple with the OrderItemOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateOrderItemInner) GetOrderItemOptionOk() ([]OrderCalculateOrderItemInnerOrderItemOptionInner, bool) {
	if o == nil || IsNil(o.OrderItemOption) {
		return nil, false
	}
	return o.OrderItemOption, true
}

// HasOrderItemOption returns a boolean if a field has been set.
func (o *OrderCalculateOrderItemInner) HasOrderItemOption() bool {
	if o != nil && !IsNil(o.OrderItemOption) {
		return true
	}

	return false
}

// SetOrderItemOption gets a reference to the given []OrderCalculateOrderItemInnerOrderItemOptionInner and assigns it to the OrderItemOption field.
func (o *OrderCalculateOrderItemInner) SetOrderItemOption(v []OrderCalculateOrderItemInnerOrderItemOptionInner) {
	o.OrderItemOption = v
}

func (o OrderCalculateOrderItemInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCalculateOrderItemInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["order_item_id"] = o.OrderItemId
	toSerialize["order_item_quantity"] = o.OrderItemQuantity
	if !IsNil(o.OrderItemVariantId) {
		toSerialize["order_item_variant_id"] = o.OrderItemVariantId
	}
	if !IsNil(o.OrderItemParent) {
		toSerialize["order_item_parent"] = o.OrderItemParent
	}
	if !IsNil(o.OrderItemParentOptionName) {
		toSerialize["order_item_parent_option_name"] = o.OrderItemParentOptionName
	}
	if !IsNil(o.OrderItemOption) {
		toSerialize["order_item_option"] = o.OrderItemOption
	}
	return toSerialize, nil
}

func (o *OrderCalculateOrderItemInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_item_id",
		"order_item_quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderCalculateOrderItemInner := _OrderCalculateOrderItemInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderCalculateOrderItemInner)

	if err != nil {
		return err
	}

	*o = OrderCalculateOrderItemInner(varOrderCalculateOrderItemInner)

	return err
}

type NullableOrderCalculateOrderItemInner struct {
	value *OrderCalculateOrderItemInner
	isSet bool
}

func (v NullableOrderCalculateOrderItemInner) Get() *OrderCalculateOrderItemInner {
	return v.value
}

func (v *NullableOrderCalculateOrderItemInner) Set(val *OrderCalculateOrderItemInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCalculateOrderItemInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCalculateOrderItemInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCalculateOrderItemInner(val *OrderCalculateOrderItemInner) *NullableOrderCalculateOrderItemInner {
	return &NullableOrderCalculateOrderItemInner{value: val, isSet: true}
}

func (v NullableOrderCalculateOrderItemInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCalculateOrderItemInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


