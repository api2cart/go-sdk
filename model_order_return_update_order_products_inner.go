/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderReturnUpdateOrderProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderReturnUpdateOrderProductsInner{}

// OrderReturnUpdateOrderProductsInner struct for OrderReturnUpdateOrderProductsInner
type OrderReturnUpdateOrderProductsInner struct {
	// Defines which products from the order should be returned
	OrderProductId string `json:"order_product_id"`
	// Defines how many product units from the order should be returned
	OrderProductQuantity int32 `json:"order_product_quantity"`
	// Defines product return status
	OrderProductStatus *string `json:"order_product_status,omitempty"`
	// Defines the ID of the return action
	OrderProductActionId string `json:"order_product_action_id"`
}

type _OrderReturnUpdateOrderProductsInner OrderReturnUpdateOrderProductsInner

// NewOrderReturnUpdateOrderProductsInner instantiates a new OrderReturnUpdateOrderProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderReturnUpdateOrderProductsInner(orderProductId string, orderProductQuantity int32, orderProductActionId string) *OrderReturnUpdateOrderProductsInner {
	this := OrderReturnUpdateOrderProductsInner{}
	this.OrderProductId = orderProductId
	this.OrderProductQuantity = orderProductQuantity
	this.OrderProductActionId = orderProductActionId
	return &this
}

// NewOrderReturnUpdateOrderProductsInnerWithDefaults instantiates a new OrderReturnUpdateOrderProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderReturnUpdateOrderProductsInnerWithDefaults() *OrderReturnUpdateOrderProductsInner {
	this := OrderReturnUpdateOrderProductsInner{}
	return &this
}

// GetOrderProductId returns the OrderProductId field value
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderProductId
}

// GetOrderProductIdOk returns a tuple with the OrderProductId field value
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderProductId, true
}

// SetOrderProductId sets field value
func (o *OrderReturnUpdateOrderProductsInner) SetOrderProductId(v string) {
	o.OrderProductId = v
}

// GetOrderProductQuantity returns the OrderProductQuantity field value
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderProductQuantity
}

// GetOrderProductQuantityOk returns a tuple with the OrderProductQuantity field value
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderProductQuantity, true
}

// SetOrderProductQuantity sets field value
func (o *OrderReturnUpdateOrderProductsInner) SetOrderProductQuantity(v int32) {
	o.OrderProductQuantity = v
}

// GetOrderProductStatus returns the OrderProductStatus field value if set, zero value otherwise.
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductStatus() string {
	if o == nil || IsNil(o.OrderProductStatus) {
		var ret string
		return ret
	}
	return *o.OrderProductStatus
}

// GetOrderProductStatusOk returns a tuple with the OrderProductStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrderProductStatus) {
		return nil, false
	}
	return o.OrderProductStatus, true
}

// HasOrderProductStatus returns a boolean if a field has been set.
func (o *OrderReturnUpdateOrderProductsInner) HasOrderProductStatus() bool {
	if o != nil && !IsNil(o.OrderProductStatus) {
		return true
	}

	return false
}

// SetOrderProductStatus gets a reference to the given string and assigns it to the OrderProductStatus field.
func (o *OrderReturnUpdateOrderProductsInner) SetOrderProductStatus(v string) {
	o.OrderProductStatus = &v
}

// GetOrderProductActionId returns the OrderProductActionId field value
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderProductActionId
}

// GetOrderProductActionIdOk returns a tuple with the OrderProductActionId field value
// and a boolean to check if the value has been set.
func (o *OrderReturnUpdateOrderProductsInner) GetOrderProductActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderProductActionId, true
}

// SetOrderProductActionId sets field value
func (o *OrderReturnUpdateOrderProductsInner) SetOrderProductActionId(v string) {
	o.OrderProductActionId = v
}

func (o OrderReturnUpdateOrderProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderReturnUpdateOrderProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["order_product_id"] = o.OrderProductId
	toSerialize["order_product_quantity"] = o.OrderProductQuantity
	if !IsNil(o.OrderProductStatus) {
		toSerialize["order_product_status"] = o.OrderProductStatus
	}
	toSerialize["order_product_action_id"] = o.OrderProductActionId
	return toSerialize, nil
}

func (o *OrderReturnUpdateOrderProductsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_product_id",
		"order_product_quantity",
		"order_product_action_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderReturnUpdateOrderProductsInner := _OrderReturnUpdateOrderProductsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderReturnUpdateOrderProductsInner)

	if err != nil {
		return err
	}

	*o = OrderReturnUpdateOrderProductsInner(varOrderReturnUpdateOrderProductsInner)

	return err
}

type NullableOrderReturnUpdateOrderProductsInner struct {
	value *OrderReturnUpdateOrderProductsInner
	isSet bool
}

func (v NullableOrderReturnUpdateOrderProductsInner) Get() *OrderReturnUpdateOrderProductsInner {
	return v.value
}

func (v *NullableOrderReturnUpdateOrderProductsInner) Set(val *OrderReturnUpdateOrderProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderReturnUpdateOrderProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderReturnUpdateOrderProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderReturnUpdateOrderProductsInner(val *OrderReturnUpdateOrderProductsInner) *NullableOrderReturnUpdateOrderProductsInner {
	return &NullableOrderReturnUpdateOrderProductsInner{value: val, isSet: true}
}

func (v NullableOrderReturnUpdateOrderProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderReturnUpdateOrderProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


