/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductFind200ResponseResultProductInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductFind200ResponseResultProductInner{}

// ProductFind200ResponseResultProductInner struct for ProductFind200ResponseResultProductInner
type ProductFind200ResponseResultProductInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Price *float32 `json:"price,omitempty"`
}

// NewProductFind200ResponseResultProductInner instantiates a new ProductFind200ResponseResultProductInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductFind200ResponseResultProductInner() *ProductFind200ResponseResultProductInner {
	this := ProductFind200ResponseResultProductInner{}
	return &this
}

// NewProductFind200ResponseResultProductInnerWithDefaults instantiates a new ProductFind200ResponseResultProductInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductFind200ResponseResultProductInnerWithDefaults() *ProductFind200ResponseResultProductInner {
	this := ProductFind200ResponseResultProductInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductFind200ResponseResultProductInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFind200ResponseResultProductInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductFind200ResponseResultProductInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductFind200ResponseResultProductInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductFind200ResponseResultProductInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFind200ResponseResultProductInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductFind200ResponseResultProductInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductFind200ResponseResultProductInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductFind200ResponseResultProductInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFind200ResponseResultProductInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductFind200ResponseResultProductInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProductFind200ResponseResultProductInner) SetDescription(v string) {
	o.Description = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductFind200ResponseResultProductInner) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFind200ResponseResultProductInner) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductFind200ResponseResultProductInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ProductFind200ResponseResultProductInner) SetPrice(v float32) {
	o.Price = &v
}

func (o ProductFind200ResponseResultProductInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductFind200ResponseResultProductInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableProductFind200ResponseResultProductInner struct {
	value *ProductFind200ResponseResultProductInner
	isSet bool
}

func (v NullableProductFind200ResponseResultProductInner) Get() *ProductFind200ResponseResultProductInner {
	return v.value
}

func (v *NullableProductFind200ResponseResultProductInner) Set(val *ProductFind200ResponseResultProductInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductFind200ResponseResultProductInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductFind200ResponseResultProductInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductFind200ResponseResultProductInner(val *ProductFind200ResponseResultProductInner) *NullableProductFind200ResponseResultProductInner {
	return &NullableProductFind200ResponseResultProductInner{value: val, isSet: true}
}

func (v NullableProductFind200ResponseResultProductInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductFind200ResponseResultProductInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


