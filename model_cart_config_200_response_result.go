/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartConfig200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartConfig200ResponseResult{}

// CartConfig200ResponseResult struct for CartConfig200ResponseResult
type CartConfig200ResponseResult struct {
	StoreName *string `json:"store_name,omitempty"`
	StoreUrl *string `json:"store_url,omitempty"`
	DbPrefix *string `json:"db_prefix,omitempty"`
}

// NewCartConfig200ResponseResult instantiates a new CartConfig200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartConfig200ResponseResult() *CartConfig200ResponseResult {
	this := CartConfig200ResponseResult{}
	return &this
}

// NewCartConfig200ResponseResultWithDefaults instantiates a new CartConfig200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartConfig200ResponseResultWithDefaults() *CartConfig200ResponseResult {
	this := CartConfig200ResponseResult{}
	return &this
}

// GetStoreName returns the StoreName field value if set, zero value otherwise.
func (o *CartConfig200ResponseResult) GetStoreName() string {
	if o == nil || IsNil(o.StoreName) {
		var ret string
		return ret
	}
	return *o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartConfig200ResponseResult) GetStoreNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoreName) {
		return nil, false
	}
	return o.StoreName, true
}

// HasStoreName returns a boolean if a field has been set.
func (o *CartConfig200ResponseResult) HasStoreName() bool {
	if o != nil && !IsNil(o.StoreName) {
		return true
	}

	return false
}

// SetStoreName gets a reference to the given string and assigns it to the StoreName field.
func (o *CartConfig200ResponseResult) SetStoreName(v string) {
	o.StoreName = &v
}

// GetStoreUrl returns the StoreUrl field value if set, zero value otherwise.
func (o *CartConfig200ResponseResult) GetStoreUrl() string {
	if o == nil || IsNil(o.StoreUrl) {
		var ret string
		return ret
	}
	return *o.StoreUrl
}

// GetStoreUrlOk returns a tuple with the StoreUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartConfig200ResponseResult) GetStoreUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StoreUrl) {
		return nil, false
	}
	return o.StoreUrl, true
}

// HasStoreUrl returns a boolean if a field has been set.
func (o *CartConfig200ResponseResult) HasStoreUrl() bool {
	if o != nil && !IsNil(o.StoreUrl) {
		return true
	}

	return false
}

// SetStoreUrl gets a reference to the given string and assigns it to the StoreUrl field.
func (o *CartConfig200ResponseResult) SetStoreUrl(v string) {
	o.StoreUrl = &v
}

// GetDbPrefix returns the DbPrefix field value if set, zero value otherwise.
func (o *CartConfig200ResponseResult) GetDbPrefix() string {
	if o == nil || IsNil(o.DbPrefix) {
		var ret string
		return ret
	}
	return *o.DbPrefix
}

// GetDbPrefixOk returns a tuple with the DbPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartConfig200ResponseResult) GetDbPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.DbPrefix) {
		return nil, false
	}
	return o.DbPrefix, true
}

// HasDbPrefix returns a boolean if a field has been set.
func (o *CartConfig200ResponseResult) HasDbPrefix() bool {
	if o != nil && !IsNil(o.DbPrefix) {
		return true
	}

	return false
}

// SetDbPrefix gets a reference to the given string and assigns it to the DbPrefix field.
func (o *CartConfig200ResponseResult) SetDbPrefix(v string) {
	o.DbPrefix = &v
}

func (o CartConfig200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartConfig200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreName) {
		toSerialize["store_name"] = o.StoreName
	}
	if !IsNil(o.StoreUrl) {
		toSerialize["store_url"] = o.StoreUrl
	}
	if !IsNil(o.DbPrefix) {
		toSerialize["db_prefix"] = o.DbPrefix
	}
	return toSerialize, nil
}

type NullableCartConfig200ResponseResult struct {
	value *CartConfig200ResponseResult
	isSet bool
}

func (v NullableCartConfig200ResponseResult) Get() *CartConfig200ResponseResult {
	return v.value
}

func (v *NullableCartConfig200ResponseResult) Set(val *CartConfig200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCartConfig200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCartConfig200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartConfig200ResponseResult(val *CartConfig200ResponseResult) *NullableCartConfig200ResponseResult {
	return &NullableCartConfig200ResponseResult{value: val, isSet: true}
}

func (v NullableCartConfig200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartConfig200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


