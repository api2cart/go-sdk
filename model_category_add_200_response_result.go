/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CategoryAdd200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryAdd200ResponseResult{}

// CategoryAdd200ResponseResult struct for CategoryAdd200ResponseResult
type CategoryAdd200ResponseResult struct {
	CategoryId *string `json:"category_id,omitempty"`
}

// NewCategoryAdd200ResponseResult instantiates a new CategoryAdd200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryAdd200ResponseResult() *CategoryAdd200ResponseResult {
	this := CategoryAdd200ResponseResult{}
	return &this
}

// NewCategoryAdd200ResponseResultWithDefaults instantiates a new CategoryAdd200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryAdd200ResponseResultWithDefaults() *CategoryAdd200ResponseResult {
	this := CategoryAdd200ResponseResult{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *CategoryAdd200ResponseResult) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAdd200ResponseResult) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CategoryAdd200ResponseResult) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *CategoryAdd200ResponseResult) SetCategoryId(v string) {
	o.CategoryId = &v
}

func (o CategoryAdd200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryAdd200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	return toSerialize, nil
}

type NullableCategoryAdd200ResponseResult struct {
	value *CategoryAdd200ResponseResult
	isSet bool
}

func (v NullableCategoryAdd200ResponseResult) Get() *CategoryAdd200ResponseResult {
	return v.value
}

func (v *NullableCategoryAdd200ResponseResult) Set(val *CategoryAdd200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryAdd200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryAdd200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryAdd200ResponseResult(val *CategoryAdd200ResponseResult) *NullableCategoryAdd200ResponseResult {
	return &NullableCategoryAdd200ResponseResult{value: val, isSet: true}
}

func (v NullableCategoryAdd200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryAdd200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


