/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductAdvancedPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAdvancedPrice{}

// ProductAdvancedPrice struct for ProductAdvancedPrice
type ProductAdvancedPrice struct {
	Id *string `json:"id,omitempty"`
	Value *float32 `json:"value,omitempty"`
	Avail NullableBool `json:"avail,omitempty"`
	GroupId NullableString `json:"group_id,omitempty"`
	QuantityFrom NullableFloat32 `json:"quantity_from,omitempty"`
	StartTime NullableA2CDateTime `json:"start_time,omitempty"`
	ExpireTime NullableA2CDateTime `json:"expire_time,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewProductAdvancedPrice instantiates a new ProductAdvancedPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAdvancedPrice() *ProductAdvancedPrice {
	this := ProductAdvancedPrice{}
	return &this
}

// NewProductAdvancedPriceWithDefaults instantiates a new ProductAdvancedPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAdvancedPriceWithDefaults() *ProductAdvancedPrice {
	this := ProductAdvancedPrice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductAdvancedPrice) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAdvancedPrice) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductAdvancedPrice) SetId(v string) {
	o.Id = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProductAdvancedPrice) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAdvancedPrice) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *ProductAdvancedPrice) SetValue(v float32) {
	o.Value = &v
}

// GetAvail returns the Avail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetAvail() bool {
	if o == nil || IsNil(o.Avail.Get()) {
		var ret bool
		return ret
	}
	return *o.Avail.Get()
}

// GetAvailOk returns a tuple with the Avail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetAvailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avail.Get(), o.Avail.IsSet()
}

// HasAvail returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasAvail() bool {
	if o != nil && o.Avail.IsSet() {
		return true
	}

	return false
}

// SetAvail gets a reference to the given NullableBool and assigns it to the Avail field.
func (o *ProductAdvancedPrice) SetAvail(v bool) {
	o.Avail.Set(&v)
}
// SetAvailNil sets the value for Avail to be an explicit nil
func (o *ProductAdvancedPrice) SetAvailNil() {
	o.Avail.Set(nil)
}

// UnsetAvail ensures that no value is present for Avail, not even an explicit nil
func (o *ProductAdvancedPrice) UnsetAvail() {
	o.Avail.Unset()
}

// GetGroupId returns the GroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetGroupId() string {
	if o == nil || IsNil(o.GroupId.Get()) {
		var ret string
		return ret
	}
	return *o.GroupId.Get()
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupId.Get(), o.GroupId.IsSet()
}

// HasGroupId returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasGroupId() bool {
	if o != nil && o.GroupId.IsSet() {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given NullableString and assigns it to the GroupId field.
func (o *ProductAdvancedPrice) SetGroupId(v string) {
	o.GroupId.Set(&v)
}
// SetGroupIdNil sets the value for GroupId to be an explicit nil
func (o *ProductAdvancedPrice) SetGroupIdNil() {
	o.GroupId.Set(nil)
}

// UnsetGroupId ensures that no value is present for GroupId, not even an explicit nil
func (o *ProductAdvancedPrice) UnsetGroupId() {
	o.GroupId.Unset()
}

// GetQuantityFrom returns the QuantityFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetQuantityFrom() float32 {
	if o == nil || IsNil(o.QuantityFrom.Get()) {
		var ret float32
		return ret
	}
	return *o.QuantityFrom.Get()
}

// GetQuantityFromOk returns a tuple with the QuantityFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetQuantityFromOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuantityFrom.Get(), o.QuantityFrom.IsSet()
}

// HasQuantityFrom returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasQuantityFrom() bool {
	if o != nil && o.QuantityFrom.IsSet() {
		return true
	}

	return false
}

// SetQuantityFrom gets a reference to the given NullableFloat32 and assigns it to the QuantityFrom field.
func (o *ProductAdvancedPrice) SetQuantityFrom(v float32) {
	o.QuantityFrom.Set(&v)
}
// SetQuantityFromNil sets the value for QuantityFrom to be an explicit nil
func (o *ProductAdvancedPrice) SetQuantityFromNil() {
	o.QuantityFrom.Set(nil)
}

// UnsetQuantityFrom ensures that no value is present for QuantityFrom, not even an explicit nil
func (o *ProductAdvancedPrice) UnsetQuantityFrom() {
	o.QuantityFrom.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetStartTime() A2CDateTime {
	if o == nil || IsNil(o.StartTime.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetStartTimeOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableA2CDateTime and assigns it to the StartTime field.
func (o *ProductAdvancedPrice) SetStartTime(v A2CDateTime) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *ProductAdvancedPrice) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *ProductAdvancedPrice) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetExpireTime() A2CDateTime {
	if o == nil || IsNil(o.ExpireTime.Get()) {
		var ret A2CDateTime
		return ret
	}
	return *o.ExpireTime.Get()
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetExpireTimeOk() (*A2CDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpireTime.Get(), o.ExpireTime.IsSet()
}

// HasExpireTime returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasExpireTime() bool {
	if o != nil && o.ExpireTime.IsSet() {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given NullableA2CDateTime and assigns it to the ExpireTime field.
func (o *ProductAdvancedPrice) SetExpireTime(v A2CDateTime) {
	o.ExpireTime.Set(&v)
}
// SetExpireTimeNil sets the value for ExpireTime to be an explicit nil
func (o *ProductAdvancedPrice) SetExpireTimeNil() {
	o.ExpireTime.Set(nil)
}

// UnsetExpireTime ensures that no value is present for ExpireTime, not even an explicit nil
func (o *ProductAdvancedPrice) UnsetExpireTime() {
	o.ExpireTime.Unset()
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ProductAdvancedPrice) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAdvancedPrice) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAdvancedPrice) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ProductAdvancedPrice) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ProductAdvancedPrice) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ProductAdvancedPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAdvancedPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if o.Avail.IsSet() {
		toSerialize["avail"] = o.Avail.Get()
	}
	if o.GroupId.IsSet() {
		toSerialize["group_id"] = o.GroupId.Get()
	}
	if o.QuantityFrom.IsSet() {
		toSerialize["quantity_from"] = o.QuantityFrom.Get()
	}
	if o.StartTime.IsSet() {
		toSerialize["start_time"] = o.StartTime.Get()
	}
	if o.ExpireTime.IsSet() {
		toSerialize["expire_time"] = o.ExpireTime.Get()
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableProductAdvancedPrice struct {
	value *ProductAdvancedPrice
	isSet bool
}

func (v NullableProductAdvancedPrice) Get() *ProductAdvancedPrice {
	return v.value
}

func (v *NullableProductAdvancedPrice) Set(val *ProductAdvancedPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAdvancedPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAdvancedPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAdvancedPrice(val *ProductAdvancedPrice) *NullableProductAdvancedPrice {
	return &NullableProductAdvancedPrice{value: val, isSet: true}
}

func (v NullableProductAdvancedPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAdvancedPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


