/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAttribute{}

// ProductAttribute struct for ProductAttribute
type ProductAttribute struct {
	AttributeId *string `json:"attribute_id,omitempty"`
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
	LangId *string `json:"lang_id,omitempty"`
	StoreId *string `json:"store_id,omitempty"`
	Value *string `json:"value,omitempty"`
	Required *bool `json:"required,omitempty"`
	Visible *bool `json:"visible,omitempty"`
	Type *string `json:"type,omitempty"`
	Position *int32 `json:"position,omitempty"`
	AttributeGroupId *string `json:"attribute_group_id,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	VariantId *string `json:"variant_id,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewProductAttribute instantiates a new ProductAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAttribute() *ProductAttribute {
	this := ProductAttribute{}
	return &this
}

// NewProductAttributeWithDefaults instantiates a new ProductAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAttributeWithDefaults() *ProductAttribute {
	this := ProductAttribute{}
	return &this
}

// GetAttributeId returns the AttributeId field value if set, zero value otherwise.
func (o *ProductAttribute) GetAttributeId() string {
	if o == nil || IsNil(o.AttributeId) {
		var ret string
		return ret
	}
	return *o.AttributeId
}

// GetAttributeIdOk returns a tuple with the AttributeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetAttributeIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeId) {
		return nil, false
	}
	return o.AttributeId, true
}

// HasAttributeId returns a boolean if a field has been set.
func (o *ProductAttribute) HasAttributeId() bool {
	if o != nil && !IsNil(o.AttributeId) {
		return true
	}

	return false
}

// SetAttributeId gets a reference to the given string and assigns it to the AttributeId field.
func (o *ProductAttribute) SetAttributeId(v string) {
	o.AttributeId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProductAttribute) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProductAttribute) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProductAttribute) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductAttribute) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductAttribute) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductAttribute) SetName(v string) {
	o.Name = &v
}

// GetLangId returns the LangId field value if set, zero value otherwise.
func (o *ProductAttribute) GetLangId() string {
	if o == nil || IsNil(o.LangId) {
		var ret string
		return ret
	}
	return *o.LangId
}

// GetLangIdOk returns a tuple with the LangId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetLangIdOk() (*string, bool) {
	if o == nil || IsNil(o.LangId) {
		return nil, false
	}
	return o.LangId, true
}

// HasLangId returns a boolean if a field has been set.
func (o *ProductAttribute) HasLangId() bool {
	if o != nil && !IsNil(o.LangId) {
		return true
	}

	return false
}

// SetLangId gets a reference to the given string and assigns it to the LangId field.
func (o *ProductAttribute) SetLangId(v string) {
	o.LangId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *ProductAttribute) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *ProductAttribute) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *ProductAttribute) SetStoreId(v string) {
	o.StoreId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProductAttribute) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProductAttribute) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ProductAttribute) SetValue(v string) {
	o.Value = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *ProductAttribute) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *ProductAttribute) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *ProductAttribute) SetRequired(v bool) {
	o.Required = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ProductAttribute) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ProductAttribute) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *ProductAttribute) SetVisible(v bool) {
	o.Visible = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ProductAttribute) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ProductAttribute) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ProductAttribute) SetType(v string) {
	o.Type = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ProductAttribute) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ProductAttribute) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *ProductAttribute) SetPosition(v int32) {
	o.Position = &v
}

// GetAttributeGroupId returns the AttributeGroupId field value if set, zero value otherwise.
func (o *ProductAttribute) GetAttributeGroupId() string {
	if o == nil || IsNil(o.AttributeGroupId) {
		var ret string
		return ret
	}
	return *o.AttributeGroupId
}

// GetAttributeGroupIdOk returns a tuple with the AttributeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetAttributeGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeGroupId) {
		return nil, false
	}
	return o.AttributeGroupId, true
}

// HasAttributeGroupId returns a boolean if a field has been set.
func (o *ProductAttribute) HasAttributeGroupId() bool {
	if o != nil && !IsNil(o.AttributeGroupId) {
		return true
	}

	return false
}

// SetAttributeGroupId gets a reference to the given string and assigns it to the AttributeGroupId field.
func (o *ProductAttribute) SetAttributeGroupId(v string) {
	o.AttributeGroupId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ProductAttribute) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductAttribute) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ProductAttribute) SetProductId(v string) {
	o.ProductId = &v
}

// GetVariantId returns the VariantId field value if set, zero value otherwise.
func (o *ProductAttribute) GetVariantId() string {
	if o == nil || IsNil(o.VariantId) {
		var ret string
		return ret
	}
	return *o.VariantId
}

// GetVariantIdOk returns a tuple with the VariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.VariantId) {
		return nil, false
	}
	return o.VariantId, true
}

// HasVariantId returns a boolean if a field has been set.
func (o *ProductAttribute) HasVariantId() bool {
	if o != nil && !IsNil(o.VariantId) {
		return true
	}

	return false
}

// SetVariantId gets a reference to the given string and assigns it to the VariantId field.
func (o *ProductAttribute) SetVariantId(v string) {
	o.VariantId = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *ProductAttribute) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ProductAttribute) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ProductAttribute) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *ProductAttribute) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAttribute) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ProductAttribute) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ProductAttribute) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ProductAttribute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeId) {
		toSerialize["attribute_id"] = o.AttributeId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LangId) {
		toSerialize["lang_id"] = o.LangId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.AttributeGroupId) {
		toSerialize["attribute_group_id"] = o.AttributeGroupId
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.VariantId) {
		toSerialize["variant_id"] = o.VariantId
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableProductAttribute struct {
	value *ProductAttribute
	isSet bool
}

func (v NullableProductAttribute) Get() *ProductAttribute {
	return v.value
}

func (v *NullableProductAttribute) Set(val *ProductAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAttribute(val *ProductAttribute) *NullableProductAttribute {
	return &NullableProductAttribute{value: val, isSet: true}
}

func (v NullableProductAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


