/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseOrderListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseOrderListResult{}

// ResponseOrderListResult struct for ResponseOrderListResult
type ResponseOrderListResult struct {
	OrdersCount NullableInt32 `json:"orders_count,omitempty"`
	Order []Order `json:"order,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewResponseOrderListResult instantiates a new ResponseOrderListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseOrderListResult() *ResponseOrderListResult {
	this := ResponseOrderListResult{}
	return &this
}

// NewResponseOrderListResultWithDefaults instantiates a new ResponseOrderListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseOrderListResultWithDefaults() *ResponseOrderListResult {
	this := ResponseOrderListResult{}
	return &this
}

// GetOrdersCount returns the OrdersCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseOrderListResult) GetOrdersCount() int32 {
	if o == nil || IsNil(o.OrdersCount.Get()) {
		var ret int32
		return ret
	}
	return *o.OrdersCount.Get()
}

// GetOrdersCountOk returns a tuple with the OrdersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseOrderListResult) GetOrdersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrdersCount.Get(), o.OrdersCount.IsSet()
}

// HasOrdersCount returns a boolean if a field has been set.
func (o *ResponseOrderListResult) HasOrdersCount() bool {
	if o != nil && o.OrdersCount.IsSet() {
		return true
	}

	return false
}

// SetOrdersCount gets a reference to the given NullableInt32 and assigns it to the OrdersCount field.
func (o *ResponseOrderListResult) SetOrdersCount(v int32) {
	o.OrdersCount.Set(&v)
}
// SetOrdersCountNil sets the value for OrdersCount to be an explicit nil
func (o *ResponseOrderListResult) SetOrdersCountNil() {
	o.OrdersCount.Set(nil)
}

// UnsetOrdersCount ensures that no value is present for OrdersCount, not even an explicit nil
func (o *ResponseOrderListResult) UnsetOrdersCount() {
	o.OrdersCount.Unset()
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ResponseOrderListResult) GetOrder() []Order {
	if o == nil || IsNil(o.Order) {
		var ret []Order
		return ret
	}
	return o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrderListResult) GetOrderOk() ([]Order, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ResponseOrderListResult) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given []Order and assigns it to the Order field.
func (o *ResponseOrderListResult) SetOrder(v []Order) {
	o.Order = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseOrderListResult) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseOrderListResult) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *ResponseOrderListResult) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *ResponseOrderListResult) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseOrderListResult) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseOrderListResult) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ResponseOrderListResult) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ResponseOrderListResult) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ResponseOrderListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseOrderListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrdersCount.IsSet() {
		toSerialize["orders_count"] = o.OrdersCount.Get()
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableResponseOrderListResult struct {
	value *ResponseOrderListResult
	isSet bool
}

func (v NullableResponseOrderListResult) Get() *ResponseOrderListResult {
	return v.value
}

func (v *NullableResponseOrderListResult) Set(val *ResponseOrderListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseOrderListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseOrderListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseOrderListResult(val *ResponseOrderListResult) *NullableResponseOrderListResult {
	return &NullableResponseOrderListResult{value: val, isSet: true}
}

func (v NullableResponseOrderListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseOrderListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


