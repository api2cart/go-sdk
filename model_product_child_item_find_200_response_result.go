/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductChildItemFind200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductChildItemFind200ResponseResult{}

// ProductChildItemFind200ResponseResult struct for ProductChildItemFind200ResponseResult
type ProductChildItemFind200ResponseResult struct {
	Children interface{} `json:"children,omitempty"`
}

// NewProductChildItemFind200ResponseResult instantiates a new ProductChildItemFind200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductChildItemFind200ResponseResult() *ProductChildItemFind200ResponseResult {
	this := ProductChildItemFind200ResponseResult{}
	return &this
}

// NewProductChildItemFind200ResponseResultWithDefaults instantiates a new ProductChildItemFind200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductChildItemFind200ResponseResultWithDefaults() *ProductChildItemFind200ResponseResult {
	this := ProductChildItemFind200ResponseResult{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductChildItemFind200ResponseResult) GetChildren() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductChildItemFind200ResponseResult) GetChildrenOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return &o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ProductChildItemFind200ResponseResult) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given interface{} and assigns it to the Children field.
func (o *ProductChildItemFind200ResponseResult) SetChildren(v interface{}) {
	o.Children = v
}

func (o ProductChildItemFind200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductChildItemFind200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Children != nil {
		toSerialize["children"] = o.Children
	}
	return toSerialize, nil
}

type NullableProductChildItemFind200ResponseResult struct {
	value *ProductChildItemFind200ResponseResult
	isSet bool
}

func (v NullableProductChildItemFind200ResponseResult) Get() *ProductChildItemFind200ResponseResult {
	return v.value
}

func (v *NullableProductChildItemFind200ResponseResult) Set(val *ProductChildItemFind200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProductChildItemFind200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProductChildItemFind200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductChildItemFind200ResponseResult(val *ProductChildItemFind200ResponseResult) *NullableProductChildItemFind200ResponseResult {
	return &NullableProductChildItemFind200ResponseResult{value: val, isSet: true}
}

func (v NullableProductChildItemFind200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductChildItemFind200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


