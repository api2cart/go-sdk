/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CategoryFind200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryFind200ResponseResult{}

// CategoryFind200ResponseResult struct for CategoryFind200ResponseResult
type CategoryFind200ResponseResult struct {
	Category []CategoryFind200ResponseResultCategoryInner `json:"category,omitempty"`
}

// NewCategoryFind200ResponseResult instantiates a new CategoryFind200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryFind200ResponseResult() *CategoryFind200ResponseResult {
	this := CategoryFind200ResponseResult{}
	return &this
}

// NewCategoryFind200ResponseResultWithDefaults instantiates a new CategoryFind200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryFind200ResponseResultWithDefaults() *CategoryFind200ResponseResult {
	this := CategoryFind200ResponseResult{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CategoryFind200ResponseResult) GetCategory() []CategoryFind200ResponseResultCategoryInner {
	if o == nil || IsNil(o.Category) {
		var ret []CategoryFind200ResponseResultCategoryInner
		return ret
	}
	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryFind200ResponseResult) GetCategoryOk() ([]CategoryFind200ResponseResultCategoryInner, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CategoryFind200ResponseResult) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given []CategoryFind200ResponseResultCategoryInner and assigns it to the Category field.
func (o *CategoryFind200ResponseResult) SetCategory(v []CategoryFind200ResponseResultCategoryInner) {
	o.Category = v
}

func (o CategoryFind200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryFind200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

type NullableCategoryFind200ResponseResult struct {
	value *CategoryFind200ResponseResult
	isSet bool
}

func (v NullableCategoryFind200ResponseResult) Get() *CategoryFind200ResponseResult {
	return v.value
}

func (v *NullableCategoryFind200ResponseResult) Set(val *CategoryFind200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryFind200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryFind200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryFind200ResponseResult(val *CategoryFind200ResponseResult) *NullableCategoryFind200ResponseResult {
	return &NullableCategoryFind200ResponseResult{value: val, isSet: true}
}

func (v NullableCategoryFind200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryFind200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


