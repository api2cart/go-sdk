/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderStatusRefundItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderStatusRefundItem{}

// OrderStatusRefundItem struct for OrderStatusRefundItem
type OrderStatusRefundItem struct {
	ProductId *string `json:"product_id,omitempty"`
	VariantId *string `json:"variant_id,omitempty"`
	OrderProductId *string `json:"order_product_id,omitempty"`
	Qty *float32 `json:"qty,omitempty"`
	Refund *float32 `json:"refund,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewOrderStatusRefundItem instantiates a new OrderStatusRefundItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderStatusRefundItem() *OrderStatusRefundItem {
	this := OrderStatusRefundItem{}
	return &this
}

// NewOrderStatusRefundItemWithDefaults instantiates a new OrderStatusRefundItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderStatusRefundItemWithDefaults() *OrderStatusRefundItem {
	this := OrderStatusRefundItem{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *OrderStatusRefundItem) SetProductId(v string) {
	o.ProductId = &v
}

// GetVariantId returns the VariantId field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetVariantId() string {
	if o == nil || IsNil(o.VariantId) {
		var ret string
		return ret
	}
	return *o.VariantId
}

// GetVariantIdOk returns a tuple with the VariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.VariantId) {
		return nil, false
	}
	return o.VariantId, true
}

// HasVariantId returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasVariantId() bool {
	if o != nil && !IsNil(o.VariantId) {
		return true
	}

	return false
}

// SetVariantId gets a reference to the given string and assigns it to the VariantId field.
func (o *OrderStatusRefundItem) SetVariantId(v string) {
	o.VariantId = &v
}

// GetOrderProductId returns the OrderProductId field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetOrderProductId() string {
	if o == nil || IsNil(o.OrderProductId) {
		var ret string
		return ret
	}
	return *o.OrderProductId
}

// GetOrderProductIdOk returns a tuple with the OrderProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetOrderProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderProductId) {
		return nil, false
	}
	return o.OrderProductId, true
}

// HasOrderProductId returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasOrderProductId() bool {
	if o != nil && !IsNil(o.OrderProductId) {
		return true
	}

	return false
}

// SetOrderProductId gets a reference to the given string and assigns it to the OrderProductId field.
func (o *OrderStatusRefundItem) SetOrderProductId(v string) {
	o.OrderProductId = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetQty() float32 {
	if o == nil || IsNil(o.Qty) {
		var ret float32
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetQtyOk() (*float32, bool) {
	if o == nil || IsNil(o.Qty) {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasQty() bool {
	if o != nil && !IsNil(o.Qty) {
		return true
	}

	return false
}

// SetQty gets a reference to the given float32 and assigns it to the Qty field.
func (o *OrderStatusRefundItem) SetQty(v float32) {
	o.Qty = &v
}

// GetRefund returns the Refund field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetRefund() float32 {
	if o == nil || IsNil(o.Refund) {
		var ret float32
		return ret
	}
	return *o.Refund
}

// GetRefundOk returns a tuple with the Refund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetRefundOk() (*float32, bool) {
	if o == nil || IsNil(o.Refund) {
		return nil, false
	}
	return o.Refund, true
}

// HasRefund returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasRefund() bool {
	if o != nil && !IsNil(o.Refund) {
		return true
	}

	return false
}

// SetRefund gets a reference to the given float32 and assigns it to the Refund field.
func (o *OrderStatusRefundItem) SetRefund(v float32) {
	o.Refund = &v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetAdditionalFields() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *OrderStatusRefundItem) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *OrderStatusRefundItem) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusRefundItem) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *OrderStatusRefundItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *OrderStatusRefundItem) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o OrderStatusRefundItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderStatusRefundItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.VariantId) {
		toSerialize["variant_id"] = o.VariantId
	}
	if !IsNil(o.OrderProductId) {
		toSerialize["order_product_id"] = o.OrderProductId
	}
	if !IsNil(o.Qty) {
		toSerialize["qty"] = o.Qty
	}
	if !IsNil(o.Refund) {
		toSerialize["refund"] = o.Refund
	}
	if !IsNil(o.AdditionalFields) {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullableOrderStatusRefundItem struct {
	value *OrderStatusRefundItem
	isSet bool
}

func (v NullableOrderStatusRefundItem) Get() *OrderStatusRefundItem {
	return v.value
}

func (v *NullableOrderStatusRefundItem) Set(val *OrderStatusRefundItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderStatusRefundItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderStatusRefundItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderStatusRefundItem(val *OrderStatusRefundItem) *NullableOrderStatusRefundItem {
	return &NullableOrderStatusRefundItem{value: val, isSet: true}
}

func (v NullableOrderStatusRefundItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderStatusRefundItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


