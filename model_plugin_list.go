/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PluginList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PluginList{}

// PluginList struct for PluginList
type PluginList struct {
	AllPlugins NullableInt32 `json:"all_plugins,omitempty"`
	Plugins []Plugin `json:"plugins,omitempty"`
	AdditionalFields map[string]interface{} `json:"additional_fields,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

// NewPluginList instantiates a new PluginList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginList() *PluginList {
	this := PluginList{}
	return &this
}

// NewPluginListWithDefaults instantiates a new PluginList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginListWithDefaults() *PluginList {
	this := PluginList{}
	return &this
}

// GetAllPlugins returns the AllPlugins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PluginList) GetAllPlugins() int32 {
	if o == nil || IsNil(o.AllPlugins.Get()) {
		var ret int32
		return ret
	}
	return *o.AllPlugins.Get()
}

// GetAllPluginsOk returns a tuple with the AllPlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PluginList) GetAllPluginsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllPlugins.Get(), o.AllPlugins.IsSet()
}

// HasAllPlugins returns a boolean if a field has been set.
func (o *PluginList) HasAllPlugins() bool {
	if o != nil && o.AllPlugins.IsSet() {
		return true
	}

	return false
}

// SetAllPlugins gets a reference to the given NullableInt32 and assigns it to the AllPlugins field.
func (o *PluginList) SetAllPlugins(v int32) {
	o.AllPlugins.Set(&v)
}
// SetAllPluginsNil sets the value for AllPlugins to be an explicit nil
func (o *PluginList) SetAllPluginsNil() {
	o.AllPlugins.Set(nil)
}

// UnsetAllPlugins ensures that no value is present for AllPlugins, not even an explicit nil
func (o *PluginList) UnsetAllPlugins() {
	o.AllPlugins.Unset()
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *PluginList) GetPlugins() []Plugin {
	if o == nil || IsNil(o.Plugins) {
		var ret []Plugin
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginList) GetPluginsOk() ([]Plugin, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *PluginList) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []Plugin and assigns it to the Plugins field.
func (o *PluginList) SetPlugins(v []Plugin) {
	o.Plugins = v
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PluginList) GetAdditionalFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PluginList) GetAdditionalFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalFields) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *PluginList) HasAdditionalFields() bool {
	if o != nil && !IsNil(o.AdditionalFields) {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given map[string]interface{} and assigns it to the AdditionalFields field.
func (o *PluginList) SetAdditionalFields(v map[string]interface{}) {
	o.AdditionalFields = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PluginList) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PluginList) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PluginList) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PluginList) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o PluginList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PluginList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AllPlugins.IsSet() {
		toSerialize["all_plugins"] = o.AllPlugins.Get()
	}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	if o.AdditionalFields != nil {
		toSerialize["additional_fields"] = o.AdditionalFields
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

type NullablePluginList struct {
	value *PluginList
	isSet bool
}

func (v NullablePluginList) Get() *PluginList {
	return v.value
}

func (v *NullablePluginList) Set(val *PluginList) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginList) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginList(val *PluginList) *NullablePluginList {
	return &NullablePluginList{value: val, isSet: true}
}

func (v NullablePluginList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


