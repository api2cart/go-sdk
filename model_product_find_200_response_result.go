/*
API2Cart OpenAPI

API2Cart

API version: 1.1
Contact: contact@api2cart.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductFind200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductFind200ResponseResult{}

// ProductFind200ResponseResult struct for ProductFind200ResponseResult
type ProductFind200ResponseResult struct {
	Product []ProductFind200ResponseResultProductInner `json:"product,omitempty"`
}

// NewProductFind200ResponseResult instantiates a new ProductFind200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductFind200ResponseResult() *ProductFind200ResponseResult {
	this := ProductFind200ResponseResult{}
	return &this
}

// NewProductFind200ResponseResultWithDefaults instantiates a new ProductFind200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductFind200ResponseResultWithDefaults() *ProductFind200ResponseResult {
	this := ProductFind200ResponseResult{}
	return &this
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ProductFind200ResponseResult) GetProduct() []ProductFind200ResponseResultProductInner {
	if o == nil || IsNil(o.Product) {
		var ret []ProductFind200ResponseResultProductInner
		return ret
	}
	return o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFind200ResponseResult) GetProductOk() ([]ProductFind200ResponseResultProductInner, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ProductFind200ResponseResult) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given []ProductFind200ResponseResultProductInner and assigns it to the Product field.
func (o *ProductFind200ResponseResult) SetProduct(v []ProductFind200ResponseResultProductInner) {
	o.Product = v
}

func (o ProductFind200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductFind200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	return toSerialize, nil
}

type NullableProductFind200ResponseResult struct {
	value *ProductFind200ResponseResult
	isSet bool
}

func (v NullableProductFind200ResponseResult) Get() *ProductFind200ResponseResult {
	return v.value
}

func (v *NullableProductFind200ResponseResult) Set(val *ProductFind200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProductFind200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProductFind200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductFind200ResponseResult(val *ProductFind200ResponseResult) *NullableProductFind200ResponseResult {
	return &NullableProductFind200ResponseResult{value: val, isSet: true}
}

func (v NullableProductFind200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductFind200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


